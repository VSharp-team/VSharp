METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.SafeFunc(System.Int32)
RESULT: 1
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.TryCatch[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Boolean VSharp.CSharpUtils.TryCatch.MakeOdd(System.Int32)
RESULT: !(0 == n % 2) & !(n <= 0) & 1 == n % 2 | !(n <= 0) & (1 + n) % 2 == 1 & 0 == n % 2 | (-n + 1) % 2 == 1 & n <= 0 | 0 == n
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
10 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
11 ==> STRUCT System.Exception[
	| System.Exception._HResult ~> -2146233088
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> (HeapRef 12)
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 13)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
12 ==> STRUCT string[
	| System.String.m_FirstChar ~> Not odd!
	| System.String.m_StringLength ~> 8]
13 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
2 ==> STRUCT VSharp.CSharpUtils.TryCatch[]
3 ==> STRUCT System.ArgumentException[
	| System.ArgumentException.m_paramName ~> null
	| System.Exception._HResult ~> -2147024809
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> (HeapRef 4)
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 6)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
4 ==> STRUCT string[
	| System.String.m_FirstChar ~> Argument should not be zero!
	| System.String.m_StringLength ~> 28]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
7 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
8 ==> STRUCT System.InvalidOperationException[
	| System.Exception._HResult ~> -2146233079
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> (HeapRef 9)
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 10)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
9 ==> STRUCT string[
	| System.String.m_FirstChar ~> Hmm.. negative numbers are also not allowed!
	| System.String.m_StringLength ~> 44]
System.ArgumentException ==> STRUCT System.ArgumentException[]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 5)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.InvalidOperationException ==> STRUCT System.InvalidOperationException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 7)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.ThrowNull(System.Int32)
RESULT: -2147467261
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NullReferenceException
	| System.String.m_StringLength ~> 26]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ArithmeticsMethod1(System.Int32, System.Int32)
RESULT: UNION[
	| !(0 == m) ~> 7 + n
	| 0 == m ~> <ERROR: (HeapRef 2)>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> -2147352558
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_DivideByZero
	| System.String.m_StringLength ~> 16]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
7 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> -2147352558
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 9)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_DivideByZero
	| System.String.m_StringLength ~> 16]
9 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.DivideByZeroException ==> STRUCT System.DivideByZeroException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ArithmeticsMethod2(System.Int32, System.Int32)
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ArithmeticsMethod3(System.Int32, System.Int32, System.Int32)
RESULT: -11 + c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ArithmeticsMethod4(System.Int32, System.Int32)
RESULT: UNION[
	| !(0 == m * m * m) ~> -126826 + n + n + n + n + n + n
	| 0 == m * m * m ~> <ERROR: (HeapRef 2)>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> -2147352558
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_DivideByZero
	| System.String.m_StringLength ~> 16]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.DivideByZeroException ==> STRUCT System.DivideByZeroException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Arithmetics.IncrementsWorkCorrect(System.Int32)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Arithmetics.Decreasing(System.Int32)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckedUnchecked(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
RESULT: checked(x0 + unchecked(checked(x2 + x3 + x4) + x1) + unchecked(-(x6 * x7) + x5))
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckOverflow1(System.Int32)
RESULT: <ERROR: (HeapRef 2)>
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.OverflowException[
	| System.Exception._HResult ~> -2146233066
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_OverflowException
	| System.String.m_StringLength ~> 21]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.OverflowException ==> STRUCT System.OverflowException[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckOverflow2(System.Int32)
RESULT: <ERROR: (HeapRef 2)>
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.OverflowException[
	| System.Exception._HResult ~> -2146233066
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_OverflowException
	| System.String.m_StringLength ~> 21]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.OverflowException ==> STRUCT System.OverflowException[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.CheckOverflow3(System.Double)
RESULT: Infinity + x1
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckDivideByZeroException0(System.Int32)
RESULT: <ERROR: (HeapRef 2)>
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> -2147352558
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_DivideByZero
	| System.String.m_StringLength ~> 16]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.Byte ==> STRUCT byte[
	| System.Byte.MaxValue ~> 255
	| System.Byte.MinValue ~> 0]
System.DivideByZeroException ==> STRUCT System.DivideByZeroException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckOrder(System.Int32)
RESULT: checked(2000000000 + x1 + 2000000000)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftLeftOnZero(System.Int32)
RESULT: a
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.ZeroShift(System.Int32)
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.DefaultShift(System.Int32, System.Int32)
RESULT: a << b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int64 VSharp.CSharpUtils.Tests.Arithmetics.SumShifts(System.Int64)
RESULT: a << 32
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftSum(System.Int32)
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.MultiplyOnShift1(System.Int16)
RESULT: (int32)a << 19
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.MultiplyOnShift2(System.Int16)
RESULT: (int32)a << 16
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftMultiplication(System.Int16)
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftDevision1(System.Byte)
RESULT: ((int32)a >> 20) / 1024
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftDevision2(System.Int32)
RESULT: a / 512 >> 12
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.UInt32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftDevision3(System.UInt32)
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.UInt64 VSharp.CSharpUtils.Tests.Arithmetics.ShiftDevision4(System.UInt64)
RESULT: a >> 41
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftSumOfShifts1(System.Int32)
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int64 VSharp.CSharpUtils.Tests.Arithmetics.ShiftSumOfShifts2(System.Int64)
RESULT: a << 34
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ConcreteShift()
RESULT: -2147483648
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.Int32 ==> STRUCT int32[
	| System.Int32.MaxValue ~> 2147483647
	| System.Int32.MinValue ~> -2147483648]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.MultiplyShifts1(System.Int32, System.Int32)
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.MultiplyShifts2(System.Int32, System.Int32)
RESULT: a * c << 29
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftWithDivAndMul(System.Int32)
RESULT: (a << 6) / 4
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int64 VSharp.CSharpUtils.Tests.Arithmetics.DoubleShiftRight(System.Int32)
RESULT: (int64)(a >> 15 >> 18)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod1(System.Double)
RESULT: log(x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod2(System.Double, System.Double)
RESULT: log(x + y)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod3()
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod4(System.Double)
RESULT: log(1 + log(x))
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod5()
RESULT: -Infinity
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod6()
RESULT: NaN
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod7(System.Double)
RESULT: UNION[
	| !(x < 0) ~> log(x)
	| x < 0 ~> log(-x)]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SqrtMethod1(System.Double)
RESULT: sqrt(x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SqrtMethod2()
RESULT: 2
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SqrtMethod3(System.Double)
RESULT: UNION[
	| !(x < 0) ~> sqrt(x)
	| x < 0 ~> sqrt(-x)]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SqrtMethod4()
RESULT: NaN
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.ExpMethod1()
RESULT: 1
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.ExpMethod2(System.Double)
RESULT: exp(x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod1(System.Double)
RESULT: 1
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod2(System.Double)
RESULT: 1
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod3()
RESULT: 25
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod4(System.Double, System.Double)
RESULT: pow(x, y)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod5(System.Double)
RESULT: UNION[
	| !(x < 0) ~> pow(x, 2)
	| x < 0 ~> pow(-x, 2)]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod6(System.Double)
RESULT: UNION[
	| !(x < 0) ~> pow(x, x)
	| !(x < 8) & x < 0 ~> pow(-x, -x)
	| x < 0 & x < 8 ~> pow(-x, x)]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod7(System.Double, System.Double)
RESULT: x + y
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod8(System.Double)
RESULT: pow(2, x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod9(System.Double)
RESULT: NaN
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod10(System.Double, System.Double)
RESULT: NaN
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod11(System.Double)
RESULT: UNION[
	| !(x < 0) ~> 0
	| 0 == x ~> 1
	| x < 0 ~> Infinity]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod12()
RESULT: 1
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod13()
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod14(System.Double)
RESULT: Infinity
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod15(System.Double, System.Double)
RESULT: UNION[
	| !(0 == x + y) & !(x + y < 0) ~> Infinity
	| 0 == x + y ~> 1
	| x + y < 0 ~> 0]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod16(System.Double)
RESULT: UNION[
	| !(-1 == x) & !(1 == x) & (!(-1 < x) | 1 <= x) ~> 0
	| !(1 <= x) & -1 < x ~> Infinity
	| -1 == x ~> NaN
	| 1 == x ~> 1]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod17()
RESULT: -Infinity
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.AcosMethod()
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.AsinMethod(System.Double)
RESULT: arcsin(x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.AtanMethod(System.Double, System.Double)
RESULT: arctan(-y + x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.CeilingMethod(System.Double)
RESULT: ceil(x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.CosMethod()
RESULT: NaN
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.CoshMethod()
RESULT: Infinity
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.FloorMethod(System.Double)
RESULT: floor(x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SinMethod()
RESULT: NaN
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.TanMethod()
RESULT: NaN
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SinhMethod(System.Double)
RESULT: UNION[
	| !(x <= 0) ~> sinh(x)
	| x <= 0 ~> sinh(-x)]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.TanhMethod(System.Double)
RESULT: tanh(x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.RoundMethod()
RESULT: 7
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.AbsMethod(System.Double)
RESULT: abs(x)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Single VSharp.CSharpUtils.Tests.Arithmetics.AbsSingleMethod()
RESULT: 5.9
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
3 ==> [|
	0: System.Empty;
	10: System.UInt32;
	11: System.Int64;
	12: System.UInt64;
	13: System.Single;
	14: System.Double;
	15: System.Decimal;
	16: System.DateTime;
	17: System.Object;
	18: System.String;
	1: System.Object;
	2: System.DBNull;
	3: System.Boolean;
	4: System.Char;
	5: System.SByte;
	6: System.Byte;
	7: System.Int16;
	8: System.UInt16;
	9: System.Int32;
	 ... 19 ... |]
4 ==> [|
	0: A;
	10: K;
	11: L;
	12: M;
	13: N;
	14: O;
	15: P;
	16: Q;
	17: R;
	18: S;
	19: T;
	1: B;
	20: U;
	21: V;
	22: W;
	23: X;
	24: Y;
	25: Z;
	26: a;
	27: b;
	28: c;
	29: d;
	2: C;
	30: e;
	31: f;
	32: g;
	33: h;
	34: i;
	35: j;
	36: k;
	37: l;
	38: m;
	39: n;
	3: D;
	40: o;
	41: p;
	42: q;
	43: r;
	44: s;
	45: t;
	46: u;
	47: v;
	48: w;
	49: x;
	4: E;
	50: y;
	51: z;
	52: 0;
	53: 1;
	54: 2;
	55: 3;
	56: 4;
	57: 5;
	58: 6;
	59: 7;
	5: F;
	60: 8;
	61: 9;
	62: +;
	63: /;
	64: =;
	6: G;
	7: H;
	8: I;
	9: J;
	 ... 65 ... |]
5 ==> STRUCT System.DBNull[]
System.Convert ==> STRUCT System.Convert[
	| System.Convert.ConvertTypes ~> (HeapRef 3)
	| System.Convert.DBNull ~> (HeapRef 5)
	| System.Convert.EnumType ~> System.Enum
	| System.Convert.base64LineBreakPosition ~> 76
	| System.Convert.base64Table ~> (HeapRef 4)]
System.DBNull ==> STRUCT System.DBNull[
	| System.DBNull.Value ~> (HeapRef 5)]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.Object ==> STRUCT System.Object[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.Atan2Method1(System.Double)
RESULT: NaN
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.Atan2Method2(System.Double)
RESULT: UNION[
	| !(Infinity == x) ~> arctan(Infinity, x)
	| Infinity == x ~> NaN]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.Atan2Method3()
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation1()
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation1(System.Int32)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation2(System.Boolean)
RESULT: !b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation3(System.Boolean)
RESULT: b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation4(System.Boolean)
RESULT: b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation5(System.Boolean)
RESULT: b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And1(System.Boolean, System.Boolean)
RESULT: a
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And2(System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And3(System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And4(System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And5(System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And6(System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And7(System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And8(System.Boolean, System.Boolean)
RESULT: a & b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And9(System.Boolean, System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or1(System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or2(System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or3(System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or4(System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or5(System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or6(System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or7(System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or8(System.Boolean, System.Boolean)
RESULT: a | b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or9(System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or10(System.Boolean, System.Boolean, System.Boolean)
RESULT: a | b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr0(System.Boolean, System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr1(System.Boolean, System.Boolean, System.Boolean)
RESULT: b & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr2(System.Boolean, System.Boolean, System.Boolean)
RESULT: !b & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr3(System.Boolean, System.Boolean, System.Boolean)
RESULT: b | c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr4(System.Boolean, System.Boolean, System.Boolean)
RESULT: !b | c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr5(System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr6(System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b | a & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr7(System.Boolean, System.Boolean, System.Boolean)
RESULT: (a | b) & (a | c)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr8(System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b | a & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr9(System.Boolean, System.Boolean, System.Boolean)
RESULT: (a | b) & (a | c)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr10(System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b | a & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr11(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a | !b | !c | d
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr12(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & (!a & b | a & c)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr13(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr14(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr15(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a | !b) & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr16(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !b | a | c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr17(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !b & a | (!b | !c) & a | a & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr18(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !c | (!a | b) & (!b & a | c)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr19(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr20(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr21(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr22(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !b & a
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr23(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr24(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a | !b | !c) & (!a | b) & (!c | a)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr25(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor1(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor2(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor3(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a | !b) & (a | b)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor4(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor5(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor6(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor7(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a | (!a & !b | !c | a & b) & ((!a | !b) & (a | b) | c)) & (!c & (!a & !b | a & b) | (!a | !b) & (a | b) & c | a)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor8(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a & !b | a & b) & ((!a | !b) & (a | b) | (!a | !b) & (a | b))
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondAnd1(System.Int32)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondAnd2(System.Int32)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondAnd3(System.Int32)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondOr1(System.Int32)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondOr2(System.Int32)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondOr3(System.Int32)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Equal1(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Equal2(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & !b | a & b
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Equal3(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.NotEqual1(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b | !b & a
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.NotEqual2(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: False
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Order1(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Order2(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b & c
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Order3(System.Int32, System.Int32, System.Int32, System.Int32)
RESULT: -b + a + -c == 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Order4(System.Int32, System.Int32, System.Int32, System.Int32)
RESULT: -b + a + -c == 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.ClassesSimple.Test1(System.Int32)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleA[
	| VSharp.CSharpUtils.Tests.ClassesSimpleA._b ~> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleB[
		| VSharp.CSharpUtils.Tests.ClassesSimpleB._c ~> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleC[
			| VSharp.CSharpUtils.Tests.ClassesSimpleC.<M1>k__BackingField ~> 42
			| VSharp.CSharpUtils.Tests.ClassesSimpleC._m2 ~> 102
			| VSharp.CSharpUtils.Tests.ClassesSimpleC._n ~> n]]
	| VSharp.CSharpUtils.Tests.ClassesSimpleA._intField ~> 100500]
System.Object ==> STRUCT System.Object[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.ClassesSimple ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimple[]
VSharp.CSharpUtils.Tests.ClassesSimpleA ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleA[]
VSharp.CSharpUtils.Tests.ClassesSimpleB ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleB[]
VSharp.CSharpUtils.Tests.ClassesSimpleC ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleC[]
METHOD: System.Void VSharp.CSharpUtils.Tests.ClassesSimpleException.Test1()
RESULT: <ERROR: (HeapRef 3)>
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException0[]
3 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 6)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
4 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NullReferenceException
	| System.String.m_StringLength ~> 26]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
7 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 5)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 7)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.ClassesSimpleException ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException[]
VSharp.CSharpUtils.Tests.ClassesSimpleException0 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException0[
	| VSharp.CSharpUtils.Tests.ClassesSimpleException0.field0 ~> 0]
VSharp.CSharpUtils.Tests.ClassesSimpleExceptionInitializer ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleExceptionInitializer[]
METHOD: System.Void VSharp.CSharpUtils.Tests.ClassesSimpleException.Test2()
RESULT: <ERROR: (HeapRef 3)>
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException1[]
3 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 6)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
4 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NullReferenceException
	| System.String.m_StringLength ~> 26]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
7 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 5)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 7)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.ClassesSimpleException ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException[]
VSharp.CSharpUtils.Tests.ClassesSimpleException1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException1[
	| VSharp.CSharpUtils.Tests.ClassesSimpleException1.field0 ~> -24
	| VSharp.CSharpUtils.Tests.ClassesSimpleException1.field1 ~> 0]
VSharp.CSharpUtils.Tests.ClassesSimpleExceptionInitializer ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleExceptionInitializer[]
METHOD: System.Collections.Generic.List`1[System.String] VSharp.CSharpUtils.Tests.ClassesSimpleHierarchy.Test1()
RESULT: (HeapRef 3)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
10 ==> STRUCT string[
	| System.String.m_FirstChar ~> ARG ClassesSimpleHierarchyA2(int i) : base I
	| System.String.m_StringLength ~> 44]
11 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA1 I
	| System.String.m_StringLength ~> 15]
12 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA1 II
	| System.String.m_StringLength ~> 16]
13 ==> STRUCT string[
	| System.String.m_FirstChar ~> field num1 I
	| System.String.m_StringLength ~> 12]
14 ==> STRUCT string[
	| System.String.m_FirstChar ~> ARG ClassesSimpleHierarchyA1(int i) : base I
	| System.String.m_StringLength ~> 44]
15 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA I
	| System.String.m_StringLength ~> 14]
16 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA II
	| System.String.m_StringLength ~> 15]
17 ==> STRUCT string[
	| System.String.m_FirstChar ~> field num I
	| System.String.m_StringLength ~> 11]
18 ==> STRUCT string[
	| System.String.m_FirstChar ~> ClassesSimpleHierarchyA(int i) I
	| System.String.m_StringLength ~> 32]
19 ==> STRUCT string[
	| System.String.m_FirstChar ~> ClassesSimpleHierarchyA1(int i) I
	| System.String.m_StringLength ~> 33]
2 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2[
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA.num ~> 121
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA1.num1 ~> 122
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2.num2 ~> 123]
20 ==> STRUCT string[
	| System.String.m_FirstChar ~> ClassesSimpleHierarchyA2(int i) I
	| System.String.m_StringLength ~> 33]
21 ==> STRUCT string[
	| System.String.m_FirstChar ~> ClassesSimpleHierarchyA2(int i, int j) I
	| System.String.m_StringLength ~> 40]
3 ==> STRUCT System.Collections.Generic.List`1[System.String][
	| System.Collections.Generic.List`1._items ~> (HeapRef 5)
	| System.Collections.Generic.List`1._size ~> 16
	| System.Collections.Generic.List`1._syncRoot ~> null
	| System.Collections.Generic.List`1._version ~> 16]
4 ==> [| ... 0 ... |]
5 ==> [|
	0: (HeapRef 6);
	10: (HeapRef 16);
	11: (HeapRef 17);
	12: (HeapRef 18);
	13: (HeapRef 19);
	14: (HeapRef 20);
	15: (HeapRef 21);
	1: (HeapRef 7);
	2: (HeapRef 8);
	3: (HeapRef 9);
	4: (HeapRef 10);
	5: (HeapRef 11);
	6: (HeapRef 12);
	7: (HeapRef 13);
	8: (HeapRef 14);
	9: (HeapRef 15);
	 ... 20 ... |]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA2 I
	| System.String.m_StringLength ~> 15]
7 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA2 II
	| System.String.m_StringLength ~> 16]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> ARG ClassesSimpleHierarchyA2(int i, int j) : this I
	| System.String.m_StringLength ~> 51]
9 ==> STRUCT string[
	| System.String.m_FirstChar ~> field num2 I
	| System.String.m_StringLength ~> 12]
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> 2146435071
	| System.Array.MaxByteArrayLength ~> 2147483591]
System.Collections.Generic.List`1 ==> STRUCT System.Collections.Generic.List`1[T][
	| System.Collections.Generic.List`1._defaultCapacity ~> 4
	| System.Collections.Generic.List`1._emptyArray ~> (HeapRef 4)]
System.Object ==> STRUCT System.Object[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.ClassesSimpleHierarchy ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchy[]
VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA[
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA.staticFieldA ~> 2]
VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA1[
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA1.staticFieldA1 ~> 2]
VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2[
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2.staticFieldA2 ~> 2]
VSharp.CSharpUtils.Tests.ClassesSimpleRegistrator ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleRegistrator[
	| VSharp.CSharpUtils.Tests.ClassesSimpleRegistrator.entries ~> (HeapRef 3)]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.ClassesSimpleHierarchy.Test2()
RESULT: 15
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
10 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA1 II
	| System.String.m_StringLength ~> 16]
11 ==> STRUCT string[
	| System.String.m_FirstChar ~> field num1 I
	| System.String.m_StringLength ~> 12]
12 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA I
	| System.String.m_StringLength ~> 14]
13 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA II
	| System.String.m_StringLength ~> 15]
14 ==> STRUCT string[
	| System.String.m_FirstChar ~> field num I
	| System.String.m_StringLength ~> 11]
15 ==> STRUCT string[
	| System.String.m_FirstChar ~> ClassesSimpleHierarchyA I
	| System.String.m_StringLength ~> 25]
16 ==> STRUCT string[
	| System.String.m_FirstChar ~> ClassesSimpleHierarchyA1 I
	| System.String.m_StringLength ~> 26]
17 ==> STRUCT string[
	| System.String.m_FirstChar ~> ClassesSimpleHierarchyA2 I
	| System.String.m_StringLength ~> 26]
2 ==> STRUCT System.Collections.Generic.List`1[System.String][
	| System.Collections.Generic.List`1._items ~> (HeapRef 4)
	| System.Collections.Generic.List`1._size ~> 12
	| System.Collections.Generic.List`1._syncRoot ~> null
	| System.Collections.Generic.List`1._version ~> 12]
3 ==> [| ... 0 ... |]
4 ==> [|
	0: (HeapRef 5);
	10: (HeapRef 16);
	11: (HeapRef 17);
	1: (HeapRef 6);
	2: (HeapRef 8);
	3: (HeapRef 9);
	4: (HeapRef 10);
	5: (HeapRef 11);
	6: (HeapRef 12);
	7: (HeapRef 13);
	8: (HeapRef 14);
	9: (HeapRef 15);
	 ... 20 ... |]
5 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA2 I
	| System.String.m_StringLength ~> 15]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA2 II
	| System.String.m_StringLength ~> 16]
7 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2[
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA.num ~> 10
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA1.num1 ~> 2
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2.num2 ~> 3]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> field num2 I
	| System.String.m_StringLength ~> 12]
9 ==> STRUCT string[
	| System.String.m_FirstChar ~> staticFieldA1 I
	| System.String.m_StringLength ~> 15]
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> 2146435071
	| System.Array.MaxByteArrayLength ~> 2147483591]
System.Collections.Generic.List`1 ==> STRUCT System.Collections.Generic.List`1[T][
	| System.Collections.Generic.List`1._defaultCapacity ~> 4
	| System.Collections.Generic.List`1._emptyArray ~> (HeapRef 3)]
System.Object ==> STRUCT System.Object[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.ClassesSimpleHierarchy ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchy[]
VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA[
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA.staticFieldA ~> 2]
VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA1[
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA1.staticFieldA1 ~> 2]
VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2[
	| VSharp.CSharpUtils.Tests.ClassesSimpleHierarchyA2.staticFieldA2 ~> 2]
VSharp.CSharpUtils.Tests.ClassesSimpleRegistrator ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleRegistrator[
	| VSharp.CSharpUtils.Tests.ClassesSimpleRegistrator.entries ~> (HeapRef 2)]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Conditional.IsMaxEven(System.Int32, System.Int32, System.Int32)
RESULT: !(2 * x < 2 * y) & !(2 * y < z) | !(2 * x < z) & 2 * y < z | !(2 * y < z) & (!(2 * y < z) & 2 * x < 2 * y | 2 * x < z & 2 * y < z) | (!(2 * y < z) & 2 * x < 2 * y | 2 * x < z & 2 * y < z) & 0 == z % 2 & 2 * y < z
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.Always18()
RESULT: 18
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.FirstEvenGreaterThen7()
RESULT: 8
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Conditional.TestSwitch(System.Char)
RESULT: UNION[
	| !(A == c) & !(B == c) & !(C == c) & !(D == c) & !(R == c) & T == c ~> <ERROR: (HeapRef 2)>
	| !(T == c) | A == c | B == c | C == c | D == c | R == c ~> (!(B == c) & !(C == c) & !(D == c) & !(R == c) & A == c & T == c | !(B == c) & !(C == c) & !(D == c) & A == c & R == c | !(C == c) & !(D == c) & !(R == c) & B == c & T == c | !(C == c) & !(D == c) & B == c & R == c | !(D == c) & !(R == c) & C == c & T == c | !(D == c) & C == c & R == c | !(R == c) & !(T == c) | !(R == c) & D == c & T == c | D == c & R == c) & (!(R == c) & !(T == c) | (R == c | T == c) & <VOID> < 5 | A == c | B == c | C == c | D == c)]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.ArgumentException[
	| System.ArgumentException.m_paramName ~> null
	| System.Exception._HResult ~> -2147024809
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> (HeapRef 3)
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Hey! Gimme number!
	| System.String.m_StringLength ~> 18]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.ArgumentException ==> STRUCT System.ArgumentException[]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.ExceptionInCondition1(VSharp.CSharpUtils.Tests.Conditional+NewBool)
RESULT: UNION[
	| !(0 == nb) & !VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> 56
	| !(0 == nb) & VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> 42
	| 0 == nb ~> <ERROR: (HeapRef 2)>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NullReferenceException
	| System.String.m_StringLength ~> 26]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
7 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| !(0 == nb) ~> -2147467261]
	| System.Exception._className ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == nb) ~> null]]
	| System.Exception._message ~> UNION[
		| !(0 == nb) ~> Getting resource strings currently not supported!]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == nb) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == nb) ~> (HeapRef 9)]
	| System.Exception._source ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == nb) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) ~> 0]]]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == nb) ~> Arg_NullReferenceException]
	| System.String.m_StringLength ~> UNION[
		| !(0 == nb) ~> 26]]
9 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == nb) ~> null]]
nb ==> STRUCT <Subtype of VSharp.CSharpUtils.Tests.Conditional+NewBool>[
	| VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> !(0 == nb) & VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Conditional+NewBool ==> STRUCT VSharp.CSharpUtils.Tests.Conditional+NewBool[]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.ExceptionInCondition2(VSharp.CSharpUtils.Tests.Conditional+NewBool)
RESULT: UNION[
	| !(0 == nb) & !VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> 56
	| !(0 == nb) & VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> 42
	| 0 == nb ~> <ERROR: (HeapRef 2)>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NullReferenceException
	| System.String.m_StringLength ~> 26]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
7 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| !(0 == nb) ~> -2147467261]
	| System.Exception._className ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == nb) ~> null]]
	| System.Exception._message ~> UNION[
		| !(0 == nb) ~> Getting resource strings currently not supported!]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == nb) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == nb) ~> (HeapRef 9)]
	| System.Exception._source ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == nb) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) ~> 0]]]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == nb) ~> Arg_NullReferenceException]
	| System.String.m_StringLength ~> UNION[
		| !(0 == nb) ~> 26]]
9 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == nb) ~> null]]
nb ==> STRUCT <Subtype of VSharp.CSharpUtils.Tests.Conditional+NewBool>[
	| VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> !(0 == nb) & VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Conditional+NewBool ==> STRUCT VSharp.CSharpUtils.Tests.Conditional+NewBool[]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.ExceptionInCondition3(VSharp.CSharpUtils.Tests.Conditional+NewBool)
RESULT: <ERROR: UNION[
	| !(0 == nb) ~> (HeapRef 7)
	| 0 == nb ~> (HeapRef 2)]>
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
10 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
11 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
2 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NullReferenceException
	| System.String.m_StringLength ~> 26]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
7 ==> STRUCT System.NotImplementedException[
	| System.Exception._HResult ~> -2147467263
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 10)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NotImplementedException
	| System.String.m_StringLength ~> 27]
9 ==> STRUCT System.Object[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == nb) ~> (HeapRef 9)
		| 0 == nb ~> (HeapRef 4)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.NotImplementedException ==> STRUCT System.NotImplementedException[]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == nb) ~> (HeapRef 11)
		| 0 == nb ~> (HeapRef 6)]]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Conditional+NewBool ==> STRUCT VSharp.CSharpUtils.Tests.Conditional+NewBool[]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Fibonacci.Fib2()
RESULT: 2
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Fibonacci ==> STRUCT VSharp.CSharpUtils.Tests.Fibonacci[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Fibonacci.Fib5()
RESULT: 8
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Fibonacci ==> STRUCT VSharp.CSharpUtils.Tests.Fibonacci[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.GCD.Gcd1()
RESULT: 1
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.GCD ==> STRUCT VSharp.CSharpUtils.Tests.GCD[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.GCD.Gcd15()
RESULT: 15
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.GCD ==> STRUCT VSharp.CSharpUtils.Tests.GCD[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lambdas.Always18()
RESULT: 18
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> <Lambda Expression int32 -> <Subtype of System.Object>>
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Lambdas ==> STRUCT VSharp.CSharpUtils.Tests.Lambdas[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Lambdas.DoubleValue(System.Int32, System.Boolean)
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> <Lambda Expression int32 -> <Subtype of System.Object>>
3 ==> <Lambda Expression int32 -> <Subtype of System.Object>>
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Lambdas ==> STRUCT VSharp.CSharpUtils.Tests.Lambdas[]
METHOD: System.String VSharp.CSharpUtils.Tests.Strings.EmptyString(System.Int32, System.Int32)
RESULT: (HeapRef 1)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Strings ==> STRUCT VSharp.CSharpUtils.Tests.Strings[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Lists.Construct()
RESULT: True
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
3 ==> STRUCT System.Collections.Generic.List`1[System.Int32][
	| System.Collections.Generic.List`1._items ~> (HeapRef 5)
	| System.Collections.Generic.List`1._size ~> 4
	| System.Collections.Generic.List`1._syncRoot ~> null
	| System.Collections.Generic.List`1._version ~> 4]
4 ==> [| ... 0 ... |]
5 ==> [|
	0: 1;
	1: 2;
	2: 3;
	3: 4;
	 ... 4 ... |]
6 ==> [| ... 4 x 1 ... |]
7 ==> [|
	0: 5;
	1: 6;
	2: 7;
	3: 8;
	 ... 4 ... |]
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> 2146435071
	| System.Array.MaxByteArrayLength ~> 2147483591]
System.Collections.Generic.List`1 ==> STRUCT System.Collections.Generic.List`1[T][
	| System.Collections.Generic.List`1._defaultCapacity ~> 4
	| System.Collections.Generic.List`1._emptyArray ~> (HeapRef 4)]
System.Object ==> STRUCT System.Object[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32[] VSharp.CSharpUtils.Tests.Lists.Mutate(System.Int32)
RESULT: UNION[
	| !(i < 0) & i < 5 ~> (HeapRef 3)
	| !(i < 5) | i < 0 ~> <ERROR: (HeapRef 4)>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
3 ==> [|
	0: UNION[
		| !(0 == i) | !(i < 5) | i < 0 ~> 1
		| !(i < 0) & 0 == i & i < 5 ~> 10];
	1: UNION[
		| !(1 == i) | !(i < 5) | i < 0 ~> 2
		| !(i < 0) & 1 == i & i < 5 ~> 10];
	2: UNION[
		| !(2 == i) | !(i < 5) | i < 0 ~> 3
		| !(i < 0) & 2 == i & i < 5 ~> 10];
	3: UNION[
		| !(3 == i) | !(i < 5) | i < 0 ~> 4
		| !(i < 0) & 3 == i & i < 5 ~> 10];
	4: UNION[
		| !(4 == i) | !(i < 5) | i < 0 ~> 5
		| !(i < 0) & 4 == i & i < 5 ~> 10];
	i: UNION[
		| !(0 == i) & !(1 == i) & !(2 == i) & !(3 == i) & !(4 == i) & !(i < 0) & i < 5 ~> 10
		| !(i < 0) & (0 == i | 1 == i | 2 == i | 3 == i | 4 == i) & i < 5 ~> 0];
	 ... 5 ... |]
4 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 7)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
5 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
6 ==> STRUCT System.Object[]
7 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 6)]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 8)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.LowerBoundTest()
RESULT: 0
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
3 ==> [|
	0, 0: 1;
	0, 1: 1;
	1, 0: 2;
	1, 1: 2;
	2, 0: 3;
	2, 1: 3;
	3, 0: 4;
	3, 1: 4;
	 ... 4 x 2 ... |]
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> 2146435071
	| System.Array.MaxByteArrayLength ~> 2147483591]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.ChangeThroughIndirection()
RESULT: 14
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.LowerBoundExceptionTest(System.Int32[,])
RESULT: <ERROR: UNION[
	| !(0 == array) ~> (HeapRef 8)
	| 0 == array ~> (HeapRef 3)]>
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
10 ==> STRUCT System.Object[]
11 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
12 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
3 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 6)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
4 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NullReferenceException
	| System.String.m_StringLength ~> 26]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
7 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
8 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 11)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
9 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
array ==> int32: [| ... array.GetLength(0) x array.GetLength(1) ... |]
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> 2146435071
	| System.Array.MaxByteArrayLength ~> 2147483591]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == array) ~> (HeapRef 10)
		| 0 == array ~> (HeapRef 5)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == array) ~> (HeapRef 12)
		| 0 == array ~> (HeapRef 7)]]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.LowerBoundSymbolicTest(System.Int32[,], System.Int32)
RESULT: UNION[
	| !(0 == array) & !(dimension < 0) & dimension < 2 ~> 0
	| !(dimension < 0) & 0 == array & dimension < 2 ~> <ERROR: (HeapRef 3)>
	| !(dimension < 2) | dimension < 0 ~> <ERROR: UNION[
		| !(0 == array) ~> (HeapRef 8)
		| 0 == array ~> (HeapRef 3)]>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
10 ==> STRUCT System.Object[]
11 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
12 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
3 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 6)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
4 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_NullReferenceException
	| System.String.m_StringLength ~> 26]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
7 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
8 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 11)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
9 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
array ==> int32: [| ... array.GetLength(0) x array.GetLength(1) ... |]
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> 2146435071
	| System.Array.MaxByteArrayLength ~> 2147483591]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == array) ~> (HeapRef 10)
		| 0 == array ~> (HeapRef 5)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == array) ~> (HeapRef 12)
		| 0 == array ~> (HeapRef 7)]]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.UpperBoundTest()
RESULT: 3
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
3 ==> [|
	0, 0: 1;
	0, 1: 1;
	1, 0: 2;
	1, 1: 2;
	2, 0: 3;
	2, 1: 3;
	3, 0: 4;
	3, 1: 4;
	 ... 4 x 2 ... |]
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> 2146435071
	| System.Array.MaxByteArrayLength ~> 2147483591]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.RankTest()
RESULT: 2
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
3 ==> [|
	0, 0: 1;
	0, 1: 1;
	1, 0: 2;
	1, 1: 2;
	2, 0: 3;
	2, 1: 3;
	3, 0: 4;
	3, 1: 4;
	 ... 4 x 2 ... |]
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> 2146435071
	| System.Array.MaxByteArrayLength ~> 2147483591]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32[] VSharp.CSharpUtils.Tests.Lists.RetOneDArray1(System.Boolean, System.Boolean)
RESULT: (HeapRef 2)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	1: UNION[
		| !flag1 & flag2 ~> 89
		| flag1 ~> 42];
	 ... 5 ... |]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32[] VSharp.CSharpUtils.Tests.Lists.RetOneDArray2(System.Int32)
RESULT: UNION[
	| !(1 < n) & !(4 < n) & 5 == n & 8 == n | !(4 < n) & !(7 < n) & 1 < n & 5 == n & 8 == n | !(4 < n) & (!(1 < n) & !(8 == n) | !(7 < n) & !(8 == n) & 1 < n | 1 < n & 7 < n) & 5 == n ~> <ERROR: (HeapRef 3)>
	| !(1 < n) & (!(1 < n) & !(5 == n) & 4 < n | !(4 < n) & !(5 == n) | 1 < n & 4 < n) & 8 == n ~> <ERROR: (HeapRef 11)>
	| !(1 < n) & (!(1 < n) & !(8 == n) | !(7 < n) & !(8 == n) & 1 < n | 1 < n & 7 < n) & 4 < n & 5 == n | !(1 < n) & 4 < n & 5 == n & 8 == n ~> <ERROR: (HeapRef 8)>
	| !(7 < n) & (!(1 < n) & !(5 == n) & 4 < n | !(4 < n) & !(5 == n) | 1 < n & 4 < n) & 1 < n & 8 == n ~> <ERROR: (HeapRef 14)>
	| (!(1 < n) & !(5 == n) & 4 < n | !(4 < n) & !(5 == n) | 1 < n & 4 < n) & (!(1 < n) & !(8 == n) | !(7 < n) & !(8 == n) & 1 < n | 1 < n & 7 < n) ~> (HeapRef 2)]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
10 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
11 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 13)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
12 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
13 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
14 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 16)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
15 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
16 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
2 ==> [|
	1: UNION[
		| !(8 == n) & 1 < n & 4 < n & 5 == n | (!(1 < n) & 4 < n & 5 == n | !(4 < n) & 5 == n) & 1 < n & 4 < n & 5 == n ~> 42
		| (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 89];
	4: UNION[
		| (!(1 < n) & 4 < n & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n | 1 < n & 4 < n & 5 == n ~> 99];
	7: UNION[
		| (!(5 == n) | 4 < n) & 1 < n & 7 < n & 8 == n ~> 66];
	 ... UNION[
	| !(1 < n) & 4 < n & 5 == n | !(4 < n) & 5 == n | (!(4 < n) | !(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> n] ... |]
3 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 6)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
4 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
7 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
8 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 10)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
9 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 5)]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 7)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Array VSharp.CSharpUtils.Tests.Lists.RetSystemArray1(System.Array)
RESULT: UNION[
	| !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) ~> <ERROR: UNION[
		| !(0 == arr) & (!System.Array1 | System.Int32[]) ~> (HeapRef 7)
		| !System.Int32[] & System.Array1 | 0 == arr ~> (HeapRef 2)]>
	| !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) & ((!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1))) & (!System.Int32[,] & System.Array1 | 0 == arr) | 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) | !(0 == arr) & !(1 < arr.GetLength(1)) & !System.Int32[] & 1 < arr.GetLength(0) & System.Array1 & System.Int32[,] | ((!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1))) & (!System.Int32[,] & System.Array1 | 0 == arr) | 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & 1 < arr.GetLength(0) ~> (HeapRef arr)
	| !(0 == arr) & !(1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) ~> <ERROR: (HeapRef 7)>
	| !(1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | 0 == arr) & ((!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1))) & (!System.Int32[,] & System.Array1 | 0 == arr) | 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) ~> <ERROR: (HeapRef 2)>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
10 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
11 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
2 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
7 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> -2146233080
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Getting resource strings currently not supported!
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 10)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> Arg_IndexOutOfRangeException
	| System.String.m_StringLength ~> 28]
9 ==> STRUCT System.Object[]
arr ==> <Reference to <Subtype of System.Object>>: [|
	1, 1: UNION[
		| !(0 == arr) & !System.Int32[] & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & System.Array1 & System.Int32[,] ~> 7];
	1: UNION[
		| !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) ~> 5];
	 ... UNION[
	| !(0 == arr) & !System.Int32[] & System.Array1 & System.Int32[,] | !(0 == arr) & (!System.Array1 | System.Int32[]) ~> arr.GetLength(0)] x UNION[
	| !(0 == arr) & !System.Int32[] & System.Array1 & System.Int32[,] ~> arr.GetLength(1)] ... |]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> 32767
	| System.Environment.MaxMachineNameLength ~> 256
	| System.Environment.MaxSystemEnvVariableLength ~> 1024
	| System.Environment.MaxUserEnvVariableLength ~> 255
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> null
	| System.Environment.m_resHelper ~> null
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> null
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == arr) & (!System.Array1 | System.Int32[]) ~> (HeapRef 4)
		| !System.Int32[] & System.Array1 | 0 == arr ~> (HeapRef 9)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == arr) & (!System.Array1 | System.Int32[]) ~> (HeapRef 6)
		| !System.Int32[] & System.Array1 | 0 == arr ~> (HeapRef 11)]]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Array VSharp.CSharpUtils.Tests.Lists.RetSystemArray2(System.Array)
RESULT: UNION[
	| !(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[])) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[])) & (!(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & 1 < arr.GetLength(2) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr) & (!System.Int32[,,] & System.Array1 | 0 == arr)) ~> <ERROR: (HeapRef 2)>
	| !(0 == arr) & (!(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & 1 < arr.GetLength(2) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr) & (!System.Int32[,,] & System.Array1 | 0 == arr)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,,]) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) ~> <ERROR: (HeapRef 7)>
	| !(0 == arr) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) ~> <ERROR: (HeapRef 10)>
	| (!(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & 1 < arr.GetLength(2) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr) & (!System.Int32[,,] & System.Array1 | 0 == arr)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) ~> (HeapRef arr)]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> ]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 0]]
10 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._data ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._innerException ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]]
	| System.Exception._message ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> Getting resource strings currently not supported!]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> (HeapRef 12)]
	| System.Exception._source ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Exception._xcode ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> 0]]]
11 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> Arg_IndexOutOfRangeException]
	| System.String.m_StringLength ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> 28]]
12 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr ~> null]]
2 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]]
	| System.Exception._message ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> Getting resource strings currently not supported!]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 0]]]
3 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> Arg_IndexOutOfRangeException]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 28]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> CLR_SafeSerializationManager_RealType]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 37]]
7 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]]
	| System.Exception._message ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> Getting resource strings currently not supported!]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> (HeapRef 9)]
	| System.Exception._source ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 0]]]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> Arg_IndexOutOfRangeException]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 28]]
9 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]]
arr ==> <Reference to <Subtype of System.Object>>: [|
	1, 1, 1: UNION[
		| !(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,,]) & (!System.Array1 | System.Int32[,]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & 1 < arr.GetLength(2) ~> 42];
	1, 1: UNION[
		| !(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(0 == arr) & !System.Int32[,,] & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & System.Array1 & System.Int32[,] & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & 1 < arr.GetLength(2) | !(0 == arr) & (!(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,,])) & (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 7];
	1: UNION[
		| (!(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0))) & (!(0 == arr) & !System.Int32[,] & 1 < arr.GetLength(0) & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | (!(0 == arr) & (!(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!(0 == arr) & !System.Int32[,] & 1 < arr.GetLength(0) & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Array1 | System.Int32[,]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & 1 < arr.GetLength(2) | (!(0 == arr) & !System.Int32[,] & 1 < arr.GetLength(0) & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | (!(0 == arr) & !System.Int32[,] & 1 < arr.GetLength(0) & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[,,] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 5];
	 ... UNION[
	| (!(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0))) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) | (!(0 == arr) & (!(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & 1 < arr.GetLength(2) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) | 0 == arr)) & (!System.Array1 | System.Int32[,,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Int32[,,] & System.Array1 | 0 == arr)) & (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> arr.GetLength(0)] x UNION[
	| !(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(0 == arr) & !System.Int32[,,] & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) & System.Array1 & System.Int32[,] | !(0 == arr) & (!(0 == arr) & (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) & 1 < arr.GetLength(2) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,])) & (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> arr.GetLength(1)] x UNION[
	| !(0 == arr) & (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 1 < arr.GetLength(0)) ~> arr.GetLength(2)] ... |]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 32767]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 256]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 1024]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 255]
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> (HeapRef 4)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> (HeapRef 6)]]
System.String ==> STRUCT string[
	| System.String.Empty ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> (HeapRef 1)]
	| System.String.TrimBoth ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 2]
	| System.String.TrimHead ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 0]
	| System.String.TrimTail ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 1]
	| System.String.alignConst ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 3]
	| System.String.charPtrAlignConst ~> UNION[
		| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> 1]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.GetLength(0)) & (!(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[,] & System.Array1 | 0 == arr)) & (!System.Array1 | System.Int32[]) | !(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[,]) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[,]) & (!System.Int32[] & System.Array1 | 1 < arr.GetLength(0)) | (!(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | !System.Int32[,] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) & (!System.Int32[,,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !(1 < arr.GetLength(2)) | !System.Int32[,] & System.Array1 | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!(0 == arr) & !System.Int32[,] & System.Array1 & System.Int32[] | !(0 == arr) & (!(0 == arr) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1) & (!System.Array1 | System.Int32[]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!System.Array1 | System.Int32[,])) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,]) | (!(0 == arr) & !(1 < arr.GetLength(0)) & (!System.Array1 | System.Int32[]) | (!System.Array1 | !System.Int32[] | 0 == arr | System.Int32[,]) & (!System.Int32[,] & System.Array1 | (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) & (!System.Int32[] & System.Array1 | (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1) | 0 == arr) | 0 == arr)) & (!System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0))) & (!System.Array1 | System.Int32[,,]) | 0 == arr) & (!System.Int32[,] & System.Array1 | !System.Int32[] & System.Array1 | 0 == arr | 1 < arr.GetLength(0)) & (!System.Int32[] & System.Array1 | (!(0 == arr) & (!System.Array1 | System.Int32[,]) | !(0 == arr) & (!System.Array1 | System.Int32[]) & 1 < arr.GetLength(0) & 1 < arr.GetLength(1)) & (!(1 < arr.GetLength(0)) | !(1 < arr.GetLength(1)) | !System.Int32[] & System.Array1 | 0 == arr) | 0 == arr | 1 < arr.GetLength(0)) ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Typecast.Coord.Norm()
RESULT: sqrt((double)(VSharp.CSharpUtils.Tests.Typecast.Coord.X * VSharp.CSharpUtils.Tests.Typecast.Coord.X + VSharp.CSharpUtils.Tests.Typecast.Coord.Y * VSharp.CSharpUtils.Tests.Typecast.Coord.Y))
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> [|
	0: 1;
	10: 10000000000;
	11: 100000000000;
	12: 1000000000000;
	13: 10000000000000;
	14: 100000000000000;
	15: 1E+15;
	1: 10;
	2: 100;
	3: 1000;
	4: 10000;
	5: 100000;
	6: 1000000;
	7: 10000000;
	8: 100000000;
	9: 1000000000;
	 ... 16 ... |]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> 2.71828182845905
	| System.Math.PI ~> 3.14159265358979
	| System.Math.doubleRoundLimit ~> 1E+16
	| System.Math.maxRoundingDigits ~> 15
	| System.Math.roundPower10Double ~> (HeapRef 2)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Coord ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.DownCastObject(System.Object)
RESULT: UNION[
	| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 5
	| !VSharp.CSharpUtils.Tests.Typecast.Piece & System.Object1 | 0 == obj ~> 6]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
obj ==> STRUCT <Subtype of System.Object>[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.DownCastObject2(System.Object, System.Object)
RESULT: UNION[
	| !(0 == obj1) & !(0 == obj2) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) & (!System.Object2 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | !(0 == obj1) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 5
	| (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | !VSharp.CSharpUtils.Tests.Typecast.Piece & System.Object1 | 0 == obj1) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object2 | !VSharp.CSharpUtils.Tests.Typecast.Piece & System.Object1 | 0 == obj1 | 0 == obj2) ~> 6]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
obj1 ==> STRUCT <Subtype of System.Object>[]
obj2 ==> STRUCT <Subtype of System.Object>[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.UpCast()
RESULT: 15
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[
	| VSharp.CSharpUtils.Tests.Typecast.Pawn._newField ~> 25
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> 1
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> 1
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> 1]
System.Object ==> STRUCT System.Object[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Pawn ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.DownCastPiece(VSharp.CSharpUtils.Tests.Typecast.Piece)
RESULT: UNION[
	| !(0 == piece) & (!VSharp.CSharpUtils.Tests.Typecast.Piece1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) ~> 10
	| !VSharp.CSharpUtils.Tests.Typecast.Pawn & VSharp.CSharpUtils.Tests.Typecast.Piece1 | 0 == piece ~> 20]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
piece ==> STRUCT <Subtype of VSharp.CSharpUtils.Tests.Typecast.Piece>[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.CheckCastNullWithTrick()
RESULT: 20
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.CastAfterNull()
RESULT: 38
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> 0
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> 1
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> 3]
System.Object ==> STRUCT System.Object[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.Pawn VSharp.CSharpUtils.Tests.Typecast.Typecast.TypeCast(System.Object)
RESULT: UNION[
	| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) ~> (HeapRef obj)
	| !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj ~> <ERROR: (HeapRef 2)>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.InvalidCastException[
	| System.Exception._HResult ~> -2147467262
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Specified cast is not valid.
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 4)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT System.Object[]
4 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
5 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
obj ==> STRUCT <Subtype of System.Object>[]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 3)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.InvalidCastException ==> STRUCT System.InvalidCastException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 5)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.Unboxing(System.Object)
RESULT: UNION[
	| !(0 == obj) & (!System.Object1 | System.Int32) ~> 13
	| !System.Int32 & System.Object1 | 0 == obj ~> 23]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
obj ==> STRUCT <Subtype of System.Object>[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.TryCast(System.Object)
RESULT: UNION[
	| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 33
	| !VSharp.CSharpUtils.Tests.Typecast.Piece & System.Object1 | 0 == obj ~> 42]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
obj ==> STRUCT <Subtype of System.Object>[]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.TryUpCast(VSharp.CSharpUtils.Tests.Typecast.Piece)
RESULT: UNION[
	| !(0 == piece) ~> 33
	| 0 == piece ~> 42]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT System.InvalidCastException[
	| System.Exception._HResult ~> -2147467262
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Specified cast is not valid.
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 4)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
3 ==> STRUCT System.Object[]
4 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
5 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
piece ==> STRUCT <Subtype of VSharp.CSharpUtils.Tests.Typecast.Piece>[]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 3)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.InvalidCastException ==> STRUCT System.InvalidCastException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 5)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.Coord VSharp.CSharpUtils.Tests.Typecast.Piece.GetCoord()
RESULT: STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[
	| VSharp.CSharpUtils.Tests.Typecast.Coord.X ~> VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord
	| VSharp.CSharpUtils.Tests.Typecast.Coord.Y ~> VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Piece.GetRate()
RESULT: VSharp.CSharpUtils.Tests.Typecast.Piece.Rate
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> VSharp.CSharpUtils.Tests.Typecast.Piece.Rate]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Piece.RetRate(System.Object)
RESULT: UNION[
	| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> VSharp.CSharpUtils.Tests.Typecast.Piece.Rate
	| !VSharp.CSharpUtils.Tests.Typecast.Piece & System.Object1 | 0 == obj ~> <ERROR: (HeapRef 3)>]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> UNION[
		| !(0 == obj) & (!System.Object1 | System.String) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) & 1 == obj ~> VSharp.CSharpUtils.Tests.Typecast.Piece.Rate]]
10 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> -2147467261]
	| System.Exception._className ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]]
	| System.Exception._message ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> Getting resource strings currently not supported!]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> (HeapRef 12)]
	| System.Exception._source ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 0]]]
11 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> Arg_NullReferenceException]
	| System.String.m_StringLength ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 26]]
12 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) & 2 == obj ~> VSharp.CSharpUtils.Tests.Typecast.Piece.Rate]]
3 ==> STRUCT System.InvalidCastException[
	| System.Exception._HResult ~> -2147467262
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]
	| System.Exception._message ~> Specified cast is not valid.
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT string[
	| System.String.m_FirstChar ~> CLR_SafeSerializationManager_RealType
	| System.String.m_StringLength ~> 37]
7 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> -2147467261]
	| System.Exception._className ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]]
	| System.Exception._message ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> Getting resource strings currently not supported!]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> (HeapRef 9)]
	| System.Exception._source ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 0]]]
8 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> Arg_NullReferenceException]
	| System.String.m_StringLength ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 26]]
9 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]]
obj ==> STRUCT <Subtype of System.Object>[
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> UNION[
		| !(0 == obj) & (!(1 == obj) | !System.String & System.Object1) & (!(2 == obj) | !VSharp.CSharpUtils.Tests.Typecast.Piece & System.Object1) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> VSharp.CSharpUtils.Tests.Typecast.Piece.Rate]]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 32767]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 256]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 1024]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 255]
	| System.Environment.isUserNonInteractive ~> False
	| System.Environment.m_os ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> False
	| System.Environment.s_CheckedWinRT ~> False
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Piece) ~> null]
	| System.Environment.s_IsWindows8OrAbove ~> False
	| System.Environment.s_WinRTSupported ~> False]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> -532462766
	| System.Exception.s_EDILock ~> (HeapRef 4)]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> null]]
System.InvalidCastException ==> STRUCT System.InvalidCastException[]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> (HeapRef 6)]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> null]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Pawn.GetNewField()
RESULT: VSharp.CSharpUtils.Tests.Typecast.Pawn._newField
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[
	| VSharp.CSharpUtils.Tests.Typecast.Pawn._newField ~> VSharp.CSharpUtils.Tests.Typecast.Pawn._newField]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Pawn ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[]
METHOD: System.Void VSharp.CSharpUtils.Tests.Typecast.Pawn.SetNewField(System.Int32)
RESULT: <VOID>
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
2 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[
	| VSharp.CSharpUtils.Tests.Typecast.Pawn._newField ~> field]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Typecast.Pawn ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[]
METHOD: T VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetT(T)
RESULT: (HeapRef t)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: U VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetU(U)
RESULT: (HeapRef u)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: P VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetP(P)
RESULT: STRUCT P[]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: K VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetK(K)
RESULT: (HeapRef k)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: N VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetT(N)
RESULT: (HeapRef n)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: Z VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetU(Z)
RESULT: (HeapRef z)
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> 
	| System.String.m_StringLength ~> 0]
System.String ==> STRUCT string[
	| System.String.Empty ~> (HeapRef 1)
	| System.String.TrimBoth ~> 2
	| System.String.TrimHead ~> 0
	| System.String.TrimTail ~> 1
	| System.String.alignConst ~> 3
	| System.String.charPtrAlignConst ~> 1]
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Generic.TetsUnion.RetWorked(System.Object, System.Int32)
RESULT: UNION[
	| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn ~> 6 + a
	| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn ~> 5
	| !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) ~> 11
	| (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> a]
HEAP:
1 ==> STRUCT string[
	| System.String.m_FirstChar ~> UNION[
		| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn | !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn | !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> ]
	| System.String.m_StringLength ~> UNION[
		| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn | !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn | !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> 0]]
obj ==> STRUCT <Subtype of System.Object>[]
System.String ==> STRUCT string[
	| System.String.Empty ~> UNION[
		| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn | !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn | !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> (HeapRef 1)]
	| System.String.TrimBoth ~> UNION[
		| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn | !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn | !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> 2]
	| System.String.TrimHead ~> UNION[
		| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn | !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn | !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> 0]
	| System.String.TrimTail ~> UNION[
		| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn | !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn | !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> 1]
	| System.String.alignConst ~> UNION[
		| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn | !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn | !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> 3]
	| System.String.charPtrAlignConst ~> UNION[
		| !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.Pawn | !(0 == obj) & !VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 & VSharp.CSharpUtils.Tests.Typecast.BlackPawn | !(0 == obj) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!System.Object1 | VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!VSharp.CSharpUtils.Tests.Typecast.BlackPawn & System.Object1 | 0 == obj) & (!VSharp.CSharpUtils.Tests.Typecast.Pawn & System.Object1 | 0 == obj) ~> 1]]
VSharp.CSharpUtils.Tests.Generic.TetsUnion ==> STRUCT VSharp.CSharpUtils.Tests.Generic.TetsUnion[]
