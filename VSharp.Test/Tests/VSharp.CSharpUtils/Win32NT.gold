METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.SafeFunc(System.Int32)
RESULT: 1
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Boolean VSharp.CSharpUtils.TryCatch.MakeOdd(System.Int32)
RESULT: !(0 == n % 2) & !(n <= 0) & 1 == n % 2 | !(n <= 0) & (1 + n) % 2 == 1 & 0 == n % 2 | (-n + 1) % 2 == 1 & n <= 0 | 0 == n
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.ArgumentException[
	| System.ArgumentException.m_paramName ~> UNION[
		| 0 == n ~> null]
	| System.Exception._HResult ~> UNION[
		| 0 == n ~> -2147024809]
	| System.Exception._className ~> UNION[
		| 0 == n ~> null]
	| System.Exception._data ~> UNION[
		| 0 == n ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == n ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == n ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == n ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == n ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == n ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#7 & 0 == n ~> null
			| 0 == n & hasKey#7 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == n ~> (HeapRef 2)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == n ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == n ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == n ~> (HeapRef 4)]
	| System.Exception._source ~> UNION[
		| 0 == n ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == n ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == n ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == n ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == n ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == n ~> 0]]]
10 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 'N'];
		1: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 'o'];
		2: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 't'];
		3: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> ' '];
		4: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 'o'];
		5: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 'd'];
		6: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 'd'];
		7: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> '!'];
		8: UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> '\000'];
		 ... UNION[
	| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 9] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 8]]
11 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == n ~> 'A'];
		10: UNION[
			| 0 == n ~> 'h'];
		11: UNION[
			| 0 == n ~> 'o'];
		12: UNION[
			| 0 == n ~> 'u'];
		13: UNION[
			| 0 == n ~> 'l'];
		14: UNION[
			| 0 == n ~> 'd'];
		15: UNION[
			| 0 == n ~> ' '];
		16: UNION[
			| 0 == n ~> 'n'];
		17: UNION[
			| 0 == n ~> 'o'];
		18: UNION[
			| 0 == n ~> 't'];
		19: UNION[
			| 0 == n ~> ' '];
		1: UNION[
			| 0 == n ~> 'r'];
		20: UNION[
			| 0 == n ~> 'b'];
		21: UNION[
			| 0 == n ~> 'e'];
		22: UNION[
			| 0 == n ~> ' '];
		23: UNION[
			| 0 == n ~> 'z'];
		24: UNION[
			| 0 == n ~> 'e'];
		25: UNION[
			| 0 == n ~> 'r'];
		26: UNION[
			| 0 == n ~> 'o'];
		27: UNION[
			| 0 == n ~> '!'];
		28: UNION[
			| 0 == n ~> '\000'];
		2: UNION[
			| 0 == n ~> 'g'];
		3: UNION[
			| 0 == n ~> 'u'];
		4: UNION[
			| 0 == n ~> 'm'];
		5: UNION[
			| 0 == n ~> 'e'];
		6: UNION[
			| 0 == n ~> 'n'];
		7: UNION[
			| 0 == n ~> 't'];
		8: UNION[
			| 0 == n ~> ' '];
		9: UNION[
			| 0 == n ~> 's'];
		 ... UNION[
	| 0 == n ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == n ~> 28]]
3 ==> STRUCT System.Object[]
4 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == n ~> null]]
5 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#8 & 0 == n ~> 'C'];
		10: UNION[
			| !hasKey#8 & 0 == n ~> 'r'];
		11: UNION[
			| !hasKey#8 & 0 == n ~> 'i'];
		12: UNION[
			| !hasKey#8 & 0 == n ~> 'a'];
		13: UNION[
			| !hasKey#8 & 0 == n ~> 'l'];
		14: UNION[
			| !hasKey#8 & 0 == n ~> 'i'];
		15: UNION[
			| !hasKey#8 & 0 == n ~> 'z'];
		16: UNION[
			| !hasKey#8 & 0 == n ~> 'a'];
		17: UNION[
			| !hasKey#8 & 0 == n ~> 't'];
		18: UNION[
			| !hasKey#8 & 0 == n ~> 'i'];
		19: UNION[
			| !hasKey#8 & 0 == n ~> 'o'];
		1: UNION[
			| !hasKey#8 & 0 == n ~> 'L'];
		20: UNION[
			| !hasKey#8 & 0 == n ~> 'n'];
		21: UNION[
			| !hasKey#8 & 0 == n ~> 'M'];
		22: UNION[
			| !hasKey#8 & 0 == n ~> 'a'];
		23: UNION[
			| !hasKey#8 & 0 == n ~> 'n'];
		24: UNION[
			| !hasKey#8 & 0 == n ~> 'a'];
		25: UNION[
			| !hasKey#8 & 0 == n ~> 'g'];
		26: UNION[
			| !hasKey#8 & 0 == n ~> 'e'];
		27: UNION[
			| !hasKey#8 & 0 == n ~> 'r'];
		28: UNION[
			| !hasKey#8 & 0 == n ~> '_'];
		29: UNION[
			| !hasKey#8 & 0 == n ~> 'R'];
		2: UNION[
			| !hasKey#8 & 0 == n ~> 'R'];
		30: UNION[
			| !hasKey#8 & 0 == n ~> 'e'];
		31: UNION[
			| !hasKey#8 & 0 == n ~> 'a'];
		32: UNION[
			| !hasKey#8 & 0 == n ~> 'l'];
		33: UNION[
			| !hasKey#8 & 0 == n ~> 'T'];
		34: UNION[
			| !hasKey#8 & 0 == n ~> 'y'];
		35: UNION[
			| !hasKey#8 & 0 == n ~> 'p'];
		36: UNION[
			| !hasKey#8 & 0 == n ~> 'e'];
		37: UNION[
			| !hasKey#8 & 0 == n ~> '\000'];
		3: UNION[
			| !hasKey#8 & 0 == n ~> '_'];
		4: UNION[
			| !hasKey#8 & 0 == n ~> 'S'];
		5: UNION[
			| !hasKey#8 & 0 == n ~> 'a'];
		6: UNION[
			| !hasKey#8 & 0 == n ~> 'f'];
		7: UNION[
			| !hasKey#8 & 0 == n ~> 'e'];
		8: UNION[
			| !hasKey#8 & 0 == n ~> 'S'];
		9: UNION[
			| !hasKey#8 & 0 == n ~> 'e'];
		 ... UNION[
	| !hasKey#8 & 0 == n ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#8 & 0 == n ~> 37]]
6 ==> STRUCT System.InvalidOperationException[
	| System.Exception._HResult ~> UNION[
		| !(0 == n) & n <= 0 ~> -2146233079]
	| System.Exception._className ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == n) & n <= 0 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == n) & n <= 0 ~> (HeapRef 7)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == n) & n <= 0 ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == n) & n <= 0 ~> (HeapRef 8)]
	| System.Exception._source ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == n) & n <= 0 ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == n) & n <= 0 ~> 0]]]
7 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == n) & n <= 0 ~> 'H'];
		10: UNION[
			| !(0 == n) & n <= 0 ~> 't'];
		11: UNION[
			| !(0 == n) & n <= 0 ~> 'i'];
		12: UNION[
			| !(0 == n) & n <= 0 ~> 'v'];
		13: UNION[
			| !(0 == n) & n <= 0 ~> 'e'];
		14: UNION[
			| !(0 == n) & n <= 0 ~> ' '];
		15: UNION[
			| !(0 == n) & n <= 0 ~> 'n'];
		16: UNION[
			| !(0 == n) & n <= 0 ~> 'u'];
		17: UNION[
			| !(0 == n) & n <= 0 ~> 'm'];
		18: UNION[
			| !(0 == n) & n <= 0 ~> 'b'];
		19: UNION[
			| !(0 == n) & n <= 0 ~> 'e'];
		1: UNION[
			| !(0 == n) & n <= 0 ~> 'm'];
		20: UNION[
			| !(0 == n) & n <= 0 ~> 'r'];
		21: UNION[
			| !(0 == n) & n <= 0 ~> 's'];
		22: UNION[
			| !(0 == n) & n <= 0 ~> ' '];
		23: UNION[
			| !(0 == n) & n <= 0 ~> 'a'];
		24: UNION[
			| !(0 == n) & n <= 0 ~> 'r'];
		25: UNION[
			| !(0 == n) & n <= 0 ~> 'e'];
		26: UNION[
			| !(0 == n) & n <= 0 ~> ' '];
		27: UNION[
			| !(0 == n) & n <= 0 ~> 'a'];
		28: UNION[
			| !(0 == n) & n <= 0 ~> 'l'];
		29: UNION[
			| !(0 == n) & n <= 0 ~> 's'];
		2: UNION[
			| !(0 == n) & n <= 0 ~> 'm'];
		30: UNION[
			| !(0 == n) & n <= 0 ~> 'o'];
		31: UNION[
			| !(0 == n) & n <= 0 ~> ' '];
		32: UNION[
			| !(0 == n) & n <= 0 ~> 'n'];
		33: UNION[
			| !(0 == n) & n <= 0 ~> 'o'];
		34: UNION[
			| !(0 == n) & n <= 0 ~> 't'];
		35: UNION[
			| !(0 == n) & n <= 0 ~> ' '];
		36: UNION[
			| !(0 == n) & n <= 0 ~> 'a'];
		37: UNION[
			| !(0 == n) & n <= 0 ~> 'l'];
		38: UNION[
			| !(0 == n) & n <= 0 ~> 'l'];
		39: UNION[
			| !(0 == n) & n <= 0 ~> 'o'];
		3: UNION[
			| !(0 == n) & n <= 0 ~> '.'];
		40: UNION[
			| !(0 == n) & n <= 0 ~> 'w'];
		41: UNION[
			| !(0 == n) & n <= 0 ~> 'e'];
		42: UNION[
			| !(0 == n) & n <= 0 ~> 'd'];
		43: UNION[
			| !(0 == n) & n <= 0 ~> '!'];
		44: UNION[
			| !(0 == n) & n <= 0 ~> '\000'];
		4: UNION[
			| !(0 == n) & n <= 0 ~> '.'];
		5: UNION[
			| !(0 == n) & n <= 0 ~> ' '];
		6: UNION[
			| !(0 == n) & n <= 0 ~> 'n'];
		7: UNION[
			| !(0 == n) & n <= 0 ~> 'e'];
		8: UNION[
			| !(0 == n) & n <= 0 ~> 'g'];
		9: UNION[
			| !(0 == n) & n <= 0 ~> 'a'];
		 ... UNION[
	| !(0 == n) & n <= 0 ~> 45] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == n) & n <= 0 ~> 44]]
8 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == n) & n <= 0 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == n) & n <= 0 ~> null]]
9 ==> STRUCT System.Exception[
	| System.Exception._HResult ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> -2146233088]
	| System.Exception._className ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> (HeapRef 10)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> (HeapRef 11)]
	| System.Exception._source ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == n) & !(n <= 0) & 0 == n % 2 ~> 0]]]
---------- s1 = ----------
System.ArgumentException ==> STRUCT System.ArgumentException[]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == n % 2) & !(0 == n) & !(n <= 0) | (!(0 == n) & (0 == n % 2 | n <= 0) | 0 == n & hasKey#3) & (0 == n | 0 == n % 2 | n <= 0) ~> System.Exception._COMPlusExceptionCode
		| !hasKey#3 & 0 == n ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == n % 2) & !(0 == n) & !(n <= 0) | (!(0 == n) & (0 == n % 2 | n <= 0) | 0 == n & hasKey#3) & (0 == n | 0 == n % 2 | n <= 0) ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#3 & 0 == n ~> (HeapRef 3)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == n % 2) & !(0 == n) & !(n <= 0) | (!(0 == n) & (0 == n % 2 | n <= 0) | 0 == n & hasKey#5) & (0 == n | 0 == n % 2 | n <= 0) ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#5 & 0 == n ~> null]]]
System.InvalidOperationException ==> STRUCT System.InvalidOperationException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == n % 2) & !(0 == n) & !(n <= 0) | (!(0 == n) & (0 == n % 2 | n <= 0) | 0 == n & hasKey#8) & (0 == n | 0 == n % 2 | n <= 0) ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#8 & 0 == n ~> (HeapRef 5)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == n % 2) & !(0 == n) & !(n <= 0) | (!(0 == n) & (0 == n % 2 | n <= 0) | 0 == n & hasKey#7) & (0 == n | 0 == n % 2 | n <= 0) ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#7 & 0 == n ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.ThrowNull(System.Int32)
RESULT: -2147467261
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> -2147467261
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#8 ~> null
			| hasKey#8 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> (HeapRef 3)
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: 'A';
		10: 'f';
		11: 'e';
		12: 'r';
		13: 'e';
		14: 'n';
		15: 'c';
		16: 'e';
		17: 'E';
		18: 'x';
		19: 'c';
		1: 'r';
		20: 'e';
		21: 'p';
		22: 't';
		23: 'i';
		24: 'o';
		25: 'n';
		26: '\000';
		2: 'g';
		3: '_';
		4: 'N';
		5: 'u';
		6: 'l';
		7: 'l';
		8: 'R';
		9: 'e';
		 ... 27 ... |]
	| System.String.m_StringLength ~> 26]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: 'G';
		10: 's';
		11: 'o';
		12: 'u';
		13: 'r';
		14: 'c';
		15: 'e';
		16: ' ';
		17: 's';
		18: 't';
		19: 'r';
		1: 'e';
		20: 'i';
		21: 'n';
		22: 'g';
		23: 's';
		24: ' ';
		25: 'c';
		26: 'u';
		27: 'r';
		28: 'r';
		29: 'e';
		2: 't';
		30: 'n';
		31: 't';
		32: 'l';
		33: 'y';
		34: ' ';
		35: 'n';
		36: 'o';
		37: 't';
		38: ' ';
		39: 's';
		3: 't';
		40: 'u';
		41: 'p';
		42: 'p';
		43: 'o';
		44: 'r';
		45: 't';
		46: 'e';
		47: 'd';
		48: '!';
		49: '\000';
		4: 'i';
		5: 'n';
		6: 'g';
		7: ' ';
		8: 'r';
		9: 'e';
		 ... 50 ... |]
	| System.String.m_StringLength ~> 49]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#9 ~> 'C'];
		10: UNION[
			| !hasKey#9 ~> 'r'];
		11: UNION[
			| !hasKey#9 ~> 'i'];
		12: UNION[
			| !hasKey#9 ~> 'a'];
		13: UNION[
			| !hasKey#9 ~> 'l'];
		14: UNION[
			| !hasKey#9 ~> 'i'];
		15: UNION[
			| !hasKey#9 ~> 'z'];
		16: UNION[
			| !hasKey#9 ~> 'a'];
		17: UNION[
			| !hasKey#9 ~> 't'];
		18: UNION[
			| !hasKey#9 ~> 'i'];
		19: UNION[
			| !hasKey#9 ~> 'o'];
		1: UNION[
			| !hasKey#9 ~> 'L'];
		20: UNION[
			| !hasKey#9 ~> 'n'];
		21: UNION[
			| !hasKey#9 ~> 'M'];
		22: UNION[
			| !hasKey#9 ~> 'a'];
		23: UNION[
			| !hasKey#9 ~> 'n'];
		24: UNION[
			| !hasKey#9 ~> 'a'];
		25: UNION[
			| !hasKey#9 ~> 'g'];
		26: UNION[
			| !hasKey#9 ~> 'e'];
		27: UNION[
			| !hasKey#9 ~> 'r'];
		28: UNION[
			| !hasKey#9 ~> '_'];
		29: UNION[
			| !hasKey#9 ~> 'R'];
		2: UNION[
			| !hasKey#9 ~> 'R'];
		30: UNION[
			| !hasKey#9 ~> 'e'];
		31: UNION[
			| !hasKey#9 ~> 'a'];
		32: UNION[
			| !hasKey#9 ~> 'l'];
		33: UNION[
			| !hasKey#9 ~> 'T'];
		34: UNION[
			| !hasKey#9 ~> 'y'];
		35: UNION[
			| !hasKey#9 ~> 'p'];
		36: UNION[
			| !hasKey#9 ~> 'e'];
		37: UNION[
			| !hasKey#9 ~> '\000'];
		3: UNION[
			| !hasKey#9 ~> '_'];
		4: UNION[
			| !hasKey#9 ~> 'S'];
		5: UNION[
			| !hasKey#9 ~> 'a'];
		6: UNION[
			| !hasKey#9 ~> 'f'];
		7: UNION[
			| !hasKey#9 ~> 'e'];
		8: UNION[
			| !hasKey#9 ~> 'S'];
		9: UNION[
			| !hasKey#9 ~> 'e'];
		 ... UNION[
	| !hasKey#9 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#9 ~> 37]]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !hasKey#2 ~> 32767
		| hasKey#2 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !hasKey#2 ~> 256
		| hasKey#2 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !hasKey#2 ~> 1024
		| hasKey#2 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !hasKey#2 ~> 255
		| hasKey#2 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> System.Environment.isUserNonInteractive & hasKey#2
	| System.Environment.m_os ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#2 ~> null
			| hasKey#2 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> System.Environment.s_CheckedOSWin8OrAbove & hasKey#2
	| System.Environment.s_CheckedWinRT ~> System.Environment.s_CheckedWinRT & hasKey#2
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> System.Environment.s_IsWindows8OrAbove & hasKey#2
	| System.Environment.s_WinRTSupported ~> System.Environment.s_WinRTSupported & hasKey#2]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !hasKey#4 ~> -532462766
		| hasKey#4 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !hasKey#4 ~> (HeapRef 4)
		| hasKey#4 ~> (HeapRef System.Exception.s_EDILock)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#6 ~> null
			| hasKey#6 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !hasKey#9 ~> (HeapRef 6)
		| hasKey#9 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#8 ~> null
			| hasKey#8 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.UsingTest()
RESULT: 67
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.TryCatch+MyDispose[
	| VSharp.CSharpUtils.TryCatch+MyDispose.X_field ~> (HeapRef 2)]
2 ==> [|
	0: 10;
	 ... 1 ... |]
---------- s1 = ----------
System.IDisposable ==> STRUCT System.IDisposable[]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.TryCatch+MyDispose ==> STRUCT VSharp.CSharpUtils.TryCatch+MyDispose[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.UsingTestWithInheritance()
RESULT: 67
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.TryCatch+AnotherDisposable[
	| VSharp.CSharpUtils.TryCatch+MyDispose.X_field ~> (HeapRef 2)]
2 ==> [|
	0: 10;
	 ... 1 ... |]
---------- s1 = ----------
System.IDisposable ==> STRUCT System.IDisposable[]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.TryCatch+AnotherDisposable ==> STRUCT VSharp.CSharpUtils.TryCatch+AnotherDisposable[]
VSharp.CSharpUtils.TryCatch+MyDispose ==> STRUCT VSharp.CSharpUtils.TryCatch+MyDispose[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.UsingTestWithInheritance1()
RESULT: 77
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.TryCatch+AnotherDisposable1[
	| VSharp.CSharpUtils.TryCatch+MyDispose.X_field ~> (HeapRef 2)]
2 ==> [|
	0: 20;
	 ... 1 ... |]
---------- s1 = ----------
System.IDisposable ==> STRUCT System.IDisposable[]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.TryCatch+AnotherDisposable1 ==> STRUCT VSharp.CSharpUtils.TryCatch+AnotherDisposable1[]
VSharp.CSharpUtils.TryCatch+MyDispose ==> STRUCT VSharp.CSharpUtils.TryCatch+MyDispose[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.AnotherUsingTestWithInheritance1()
RESULT: 67
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.TryCatch+YetAnotherDisposable1[
	| VSharp.CSharpUtils.TryCatch+MyDispose.X_field ~> (HeapRef 2)]
2 ==> [|
	0: 10;
	 ... 1 ... |]
---------- s1 = ----------
System.IDisposable ==> STRUCT System.IDisposable[]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.TryCatch+MyDispose ==> STRUCT VSharp.CSharpUtils.TryCatch+MyDispose[]
VSharp.CSharpUtils.TryCatch+YetAnotherDisposable1 ==> STRUCT VSharp.CSharpUtils.TryCatch+YetAnotherDisposable1[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.TryCatch.AnotherUsingTestWithInheritance2()
RESULT: 87
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.TryCatch+YetAnotherDisposable2[
	| VSharp.CSharpUtils.TryCatch+MyDispose.X_field ~> (HeapRef 2)]
2 ==> [|
	0: 30;
	 ... 1 ... |]
---------- s1 = ----------
System.IDisposable ==> STRUCT System.IDisposable[]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.TryCatch+MyDispose ==> STRUCT VSharp.CSharpUtils.TryCatch+MyDispose[]
VSharp.CSharpUtils.TryCatch+YetAnotherDisposable2 ==> STRUCT VSharp.CSharpUtils.TryCatch+YetAnotherDisposable2[]
VSharp.CSharpUtils.TryCatch ==> STRUCT VSharp.CSharpUtils.TryCatch[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ArithmeticsMethod1(System.Int32, System.Int32)
RESULT: UNION[
	| !(0 == m) ~> 7 + n
	| 0 == m ~> <ERROR: (HeapRef 1)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> UNION[
		| 0 == m ~> -2147352558]
	| System.Exception._className ~> UNION[
		| 0 == m ~> null]
	| System.Exception._data ~> UNION[
		| 0 == m ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == m ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == m ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == m ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == m ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == m ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == m ~> null
			| 0 == m & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == m ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == m ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == m ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == m ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| 0 == m ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == m ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == m ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == m ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == m ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == m ~> 0]]]
10 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == m ~> null]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == m ~> 'A'];
		10: UNION[
			| 0 == m ~> 'B'];
		11: UNION[
			| 0 == m ~> 'y'];
		12: UNION[
			| 0 == m ~> 'Z'];
		13: UNION[
			| 0 == m ~> 'e'];
		14: UNION[
			| 0 == m ~> 'r'];
		15: UNION[
			| 0 == m ~> 'o'];
		16: UNION[
			| 0 == m ~> '\000'];
		1: UNION[
			| 0 == m ~> 'r'];
		2: UNION[
			| 0 == m ~> 'g'];
		3: UNION[
			| 0 == m ~> '_'];
		4: UNION[
			| 0 == m ~> 'D'];
		5: UNION[
			| 0 == m ~> 'i'];
		6: UNION[
			| 0 == m ~> 'v'];
		7: UNION[
			| 0 == m ~> 'i'];
		8: UNION[
			| 0 == m ~> 'd'];
		9: UNION[
			| 0 == m ~> 'e'];
		 ... UNION[
	| 0 == m ~> 17] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == m ~> 16]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == m ~> 'G'];
		10: UNION[
			| 0 == m ~> 's'];
		11: UNION[
			| 0 == m ~> 'o'];
		12: UNION[
			| 0 == m ~> 'u'];
		13: UNION[
			| 0 == m ~> 'r'];
		14: UNION[
			| 0 == m ~> 'c'];
		15: UNION[
			| 0 == m ~> 'e'];
		16: UNION[
			| 0 == m ~> ' '];
		17: UNION[
			| 0 == m ~> 's'];
		18: UNION[
			| 0 == m ~> 't'];
		19: UNION[
			| 0 == m ~> 'r'];
		1: UNION[
			| 0 == m ~> 'e'];
		20: UNION[
			| 0 == m ~> 'i'];
		21: UNION[
			| 0 == m ~> 'n'];
		22: UNION[
			| 0 == m ~> 'g'];
		23: UNION[
			| 0 == m ~> 's'];
		24: UNION[
			| 0 == m ~> ' '];
		25: UNION[
			| 0 == m ~> 'c'];
		26: UNION[
			| 0 == m ~> 'u'];
		27: UNION[
			| 0 == m ~> 'r'];
		28: UNION[
			| 0 == m ~> 'r'];
		29: UNION[
			| 0 == m ~> 'e'];
		2: UNION[
			| 0 == m ~> 't'];
		30: UNION[
			| 0 == m ~> 'n'];
		31: UNION[
			| 0 == m ~> 't'];
		32: UNION[
			| 0 == m ~> 'l'];
		33: UNION[
			| 0 == m ~> 'y'];
		34: UNION[
			| 0 == m ~> ' '];
		35: UNION[
			| 0 == m ~> 'n'];
		36: UNION[
			| 0 == m ~> 'o'];
		37: UNION[
			| 0 == m ~> 't'];
		38: UNION[
			| 0 == m ~> ' '];
		39: UNION[
			| 0 == m ~> 's'];
		3: UNION[
			| 0 == m ~> 't'];
		40: UNION[
			| 0 == m ~> 'u'];
		41: UNION[
			| 0 == m ~> 'p'];
		42: UNION[
			| 0 == m ~> 'p'];
		43: UNION[
			| 0 == m ~> 'o'];
		44: UNION[
			| 0 == m ~> 'r'];
		45: UNION[
			| 0 == m ~> 't'];
		46: UNION[
			| 0 == m ~> 'e'];
		47: UNION[
			| 0 == m ~> 'd'];
		48: UNION[
			| 0 == m ~> '!'];
		49: UNION[
			| 0 == m ~> '\000'];
		4: UNION[
			| 0 == m ~> 'i'];
		5: UNION[
			| 0 == m ~> 'n'];
		6: UNION[
			| 0 == m ~> 'g'];
		7: UNION[
			| 0 == m ~> ' '];
		8: UNION[
			| 0 == m ~> 'r'];
		9: UNION[
			| 0 == m ~> 'e'];
		 ... UNION[
	| 0 == m ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == m ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == m ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == m ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == m ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == m ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == m ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == m ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == m ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == m ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == m ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == m ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == m ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == m ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == m ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == m ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == m ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == m ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == m ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == m ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == m ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == m ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == m ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == m ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == m ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == m ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == m ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == m ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == m ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == m ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == m ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == m ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == m ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == m ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == m ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == m ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == m ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == m ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == m ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == m ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == m ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == m ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == m ~> 37]]
7 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> UNION[
		| 0 == m ~> -2147352558]
	| System.Exception._className ~> UNION[
		| 0 == m ~> null]
	| System.Exception._data ~> UNION[
		| 0 == m ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == m ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == m ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == m ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == m ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == m ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == m ~> null
			| 0 == m & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == m ~> (HeapRef 9)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == m ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == m ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == m ~> (HeapRef 10)]
	| System.Exception._source ~> UNION[
		| 0 == m ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == m ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == m ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == m ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == m ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == m ~> 0]]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == m ~> 'A'];
		10: UNION[
			| 0 == m ~> 'B'];
		11: UNION[
			| 0 == m ~> 'y'];
		12: UNION[
			| 0 == m ~> 'Z'];
		13: UNION[
			| 0 == m ~> 'e'];
		14: UNION[
			| 0 == m ~> 'r'];
		15: UNION[
			| 0 == m ~> 'o'];
		16: UNION[
			| 0 == m ~> '\000'];
		1: UNION[
			| 0 == m ~> 'r'];
		2: UNION[
			| 0 == m ~> 'g'];
		3: UNION[
			| 0 == m ~> '_'];
		4: UNION[
			| 0 == m ~> 'D'];
		5: UNION[
			| 0 == m ~> 'i'];
		6: UNION[
			| 0 == m ~> 'v'];
		7: UNION[
			| 0 == m ~> 'i'];
		8: UNION[
			| 0 == m ~> 'd'];
		9: UNION[
			| 0 == m ~> 'e'];
		 ... UNION[
	| 0 == m ~> 17] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == m ~> 16]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == m ~> 'G'];
		10: UNION[
			| 0 == m ~> 's'];
		11: UNION[
			| 0 == m ~> 'o'];
		12: UNION[
			| 0 == m ~> 'u'];
		13: UNION[
			| 0 == m ~> 'r'];
		14: UNION[
			| 0 == m ~> 'c'];
		15: UNION[
			| 0 == m ~> 'e'];
		16: UNION[
			| 0 == m ~> ' '];
		17: UNION[
			| 0 == m ~> 's'];
		18: UNION[
			| 0 == m ~> 't'];
		19: UNION[
			| 0 == m ~> 'r'];
		1: UNION[
			| 0 == m ~> 'e'];
		20: UNION[
			| 0 == m ~> 'i'];
		21: UNION[
			| 0 == m ~> 'n'];
		22: UNION[
			| 0 == m ~> 'g'];
		23: UNION[
			| 0 == m ~> 's'];
		24: UNION[
			| 0 == m ~> ' '];
		25: UNION[
			| 0 == m ~> 'c'];
		26: UNION[
			| 0 == m ~> 'u'];
		27: UNION[
			| 0 == m ~> 'r'];
		28: UNION[
			| 0 == m ~> 'r'];
		29: UNION[
			| 0 == m ~> 'e'];
		2: UNION[
			| 0 == m ~> 't'];
		30: UNION[
			| 0 == m ~> 'n'];
		31: UNION[
			| 0 == m ~> 't'];
		32: UNION[
			| 0 == m ~> 'l'];
		33: UNION[
			| 0 == m ~> 'y'];
		34: UNION[
			| 0 == m ~> ' '];
		35: UNION[
			| 0 == m ~> 'n'];
		36: UNION[
			| 0 == m ~> 'o'];
		37: UNION[
			| 0 == m ~> 't'];
		38: UNION[
			| 0 == m ~> ' '];
		39: UNION[
			| 0 == m ~> 's'];
		3: UNION[
			| 0 == m ~> 't'];
		40: UNION[
			| 0 == m ~> 'u'];
		41: UNION[
			| 0 == m ~> 'p'];
		42: UNION[
			| 0 == m ~> 'p'];
		43: UNION[
			| 0 == m ~> 'o'];
		44: UNION[
			| 0 == m ~> 'r'];
		45: UNION[
			| 0 == m ~> 't'];
		46: UNION[
			| 0 == m ~> 'e'];
		47: UNION[
			| 0 == m ~> 'd'];
		48: UNION[
			| 0 == m ~> '!'];
		49: UNION[
			| 0 == m ~> '\000'];
		4: UNION[
			| 0 == m ~> 'i'];
		5: UNION[
			| 0 == m ~> 'n'];
		6: UNION[
			| 0 == m ~> 'g'];
		7: UNION[
			| 0 == m ~> ' '];
		8: UNION[
			| 0 == m ~> 'r'];
		9: UNION[
			| 0 == m ~> 'e'];
		 ... UNION[
	| 0 == m ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == m ~> 49]]
---------- s1 = ----------
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.DivideByZeroException ==> STRUCT System.DivideByZeroException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == m) | hasKey#2 ~> System.Environment.MaxEnvVariableValueLength
		| !hasKey#2 & 0 == m ~> 32767]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == m) | hasKey#2 ~> System.Environment.MaxMachineNameLength
		| !hasKey#2 & 0 == m ~> 256]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == m) | hasKey#2 ~> System.Environment.MaxSystemEnvVariableLength
		| !hasKey#2 & 0 == m ~> 1024]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == m) | hasKey#2 ~> System.Environment.MaxUserEnvVariableLength
		| !hasKey#2 & 0 == m ~> 255]
	| System.Environment.isUserNonInteractive ~> !(0 == m) & System.Environment.isUserNonInteractive | System.Environment.isUserNonInteractive & hasKey#2
	| System.Environment.m_os ~> UNION[
		| !(0 == m) | hasKey#2 ~> (HeapRef System.Environment.m_os)
		| !hasKey#2 & 0 == m ~> null]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == m) | hasKey#2 ~> (HeapRef System.Environment.m_resHelper)
		| !hasKey#2 & 0 == m ~> null]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == m) | hasKey#2 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)
			| !hasKey#2 & 0 == m ~> null]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == m) & System.Environment.s_CheckedOSWin8OrAbove | System.Environment.s_CheckedOSWin8OrAbove & hasKey#2
	| System.Environment.s_CheckedWinRT ~> !(0 == m) & System.Environment.s_CheckedWinRT | System.Environment.s_CheckedWinRT & hasKey#2
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == m) | hasKey#2 ~> (HeapRef System.Environment.s_InternalSyncObject)
		| !hasKey#2 & 0 == m ~> null]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == m) & System.Environment.s_IsWindows8OrAbove | System.Environment.s_IsWindows8OrAbove & hasKey#2
	| System.Environment.s_WinRTSupported ~> !(0 == m) & System.Environment.s_WinRTSupported | System.Environment.s_WinRTSupported & hasKey#2]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == m) | hasKey#5 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#5 & 0 == m ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == m) | hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == m ~> (HeapRef 4)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == m) | hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#7 & 0 == m ~> null]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == m) | hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == m ~> (HeapRef 6)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == m) | hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#9 & 0 == m ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ArithmeticsMethod2(System.Int32, System.Int32)
RESULT: 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ArithmeticsMethod3(System.Int32, System.Int32, System.Int32)
RESULT: -11 + c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ArithmeticsMethod4(System.Int32, System.Int32)
RESULT: UNION[
	| !(0 == m * m * m) ~> -126826 + n + n + n + n + n + n
	| 0 == m * m * m ~> <ERROR: (HeapRef 1)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> UNION[
		| 0 == m * m * m ~> -2147352558]
	| System.Exception._className ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._data ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == m * m * m ~> null
			| 0 == m * m * m & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == m * m * m ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == m * m * m ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == m * m * m ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == m * m * m ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == m * m * m ~> 0]]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == m * m * m ~> 'A'];
		10: UNION[
			| 0 == m * m * m ~> 'B'];
		11: UNION[
			| 0 == m * m * m ~> 'y'];
		12: UNION[
			| 0 == m * m * m ~> 'Z'];
		13: UNION[
			| 0 == m * m * m ~> 'e'];
		14: UNION[
			| 0 == m * m * m ~> 'r'];
		15: UNION[
			| 0 == m * m * m ~> 'o'];
		16: UNION[
			| 0 == m * m * m ~> '\000'];
		1: UNION[
			| 0 == m * m * m ~> 'r'];
		2: UNION[
			| 0 == m * m * m ~> 'g'];
		3: UNION[
			| 0 == m * m * m ~> '_'];
		4: UNION[
			| 0 == m * m * m ~> 'D'];
		5: UNION[
			| 0 == m * m * m ~> 'i'];
		6: UNION[
			| 0 == m * m * m ~> 'v'];
		7: UNION[
			| 0 == m * m * m ~> 'i'];
		8: UNION[
			| 0 == m * m * m ~> 'd'];
		9: UNION[
			| 0 == m * m * m ~> 'e'];
		 ... UNION[
	| 0 == m * m * m ~> 17] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == m * m * m ~> 16]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == m * m * m ~> 'G'];
		10: UNION[
			| 0 == m * m * m ~> 's'];
		11: UNION[
			| 0 == m * m * m ~> 'o'];
		12: UNION[
			| 0 == m * m * m ~> 'u'];
		13: UNION[
			| 0 == m * m * m ~> 'r'];
		14: UNION[
			| 0 == m * m * m ~> 'c'];
		15: UNION[
			| 0 == m * m * m ~> 'e'];
		16: UNION[
			| 0 == m * m * m ~> ' '];
		17: UNION[
			| 0 == m * m * m ~> 's'];
		18: UNION[
			| 0 == m * m * m ~> 't'];
		19: UNION[
			| 0 == m * m * m ~> 'r'];
		1: UNION[
			| 0 == m * m * m ~> 'e'];
		20: UNION[
			| 0 == m * m * m ~> 'i'];
		21: UNION[
			| 0 == m * m * m ~> 'n'];
		22: UNION[
			| 0 == m * m * m ~> 'g'];
		23: UNION[
			| 0 == m * m * m ~> 's'];
		24: UNION[
			| 0 == m * m * m ~> ' '];
		25: UNION[
			| 0 == m * m * m ~> 'c'];
		26: UNION[
			| 0 == m * m * m ~> 'u'];
		27: UNION[
			| 0 == m * m * m ~> 'r'];
		28: UNION[
			| 0 == m * m * m ~> 'r'];
		29: UNION[
			| 0 == m * m * m ~> 'e'];
		2: UNION[
			| 0 == m * m * m ~> 't'];
		30: UNION[
			| 0 == m * m * m ~> 'n'];
		31: UNION[
			| 0 == m * m * m ~> 't'];
		32: UNION[
			| 0 == m * m * m ~> 'l'];
		33: UNION[
			| 0 == m * m * m ~> 'y'];
		34: UNION[
			| 0 == m * m * m ~> ' '];
		35: UNION[
			| 0 == m * m * m ~> 'n'];
		36: UNION[
			| 0 == m * m * m ~> 'o'];
		37: UNION[
			| 0 == m * m * m ~> 't'];
		38: UNION[
			| 0 == m * m * m ~> ' '];
		39: UNION[
			| 0 == m * m * m ~> 's'];
		3: UNION[
			| 0 == m * m * m ~> 't'];
		40: UNION[
			| 0 == m * m * m ~> 'u'];
		41: UNION[
			| 0 == m * m * m ~> 'p'];
		42: UNION[
			| 0 == m * m * m ~> 'p'];
		43: UNION[
			| 0 == m * m * m ~> 'o'];
		44: UNION[
			| 0 == m * m * m ~> 'r'];
		45: UNION[
			| 0 == m * m * m ~> 't'];
		46: UNION[
			| 0 == m * m * m ~> 'e'];
		47: UNION[
			| 0 == m * m * m ~> 'd'];
		48: UNION[
			| 0 == m * m * m ~> '!'];
		49: UNION[
			| 0 == m * m * m ~> '\000'];
		4: UNION[
			| 0 == m * m * m ~> 'i'];
		5: UNION[
			| 0 == m * m * m ~> 'n'];
		6: UNION[
			| 0 == m * m * m ~> 'g'];
		7: UNION[
			| 0 == m * m * m ~> ' '];
		8: UNION[
			| 0 == m * m * m ~> 'r'];
		9: UNION[
			| 0 == m * m * m ~> 'e'];
		 ... UNION[
	| 0 == m * m * m ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == m * m * m ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == m * m * m ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == m * m * m ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == m * m * m ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == m * m * m ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == m * m * m ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == m * m * m ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == m * m * m ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == m * m * m ~> 37]]
---------- s1 = ----------
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.DivideByZeroException ==> STRUCT System.DivideByZeroException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == m * m * m) | hasKey#2 ~> System.Environment.MaxEnvVariableValueLength
		| !hasKey#2 & 0 == m * m * m ~> 32767]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == m * m * m) | hasKey#2 ~> System.Environment.MaxMachineNameLength
		| !hasKey#2 & 0 == m * m * m ~> 256]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == m * m * m) | hasKey#2 ~> System.Environment.MaxSystemEnvVariableLength
		| !hasKey#2 & 0 == m * m * m ~> 1024]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == m * m * m) | hasKey#2 ~> System.Environment.MaxUserEnvVariableLength
		| !hasKey#2 & 0 == m * m * m ~> 255]
	| System.Environment.isUserNonInteractive ~> !(0 == m * m * m) & System.Environment.isUserNonInteractive | System.Environment.isUserNonInteractive & hasKey#2
	| System.Environment.m_os ~> UNION[
		| !(0 == m * m * m) | hasKey#2 ~> (HeapRef System.Environment.m_os)
		| !hasKey#2 & 0 == m * m * m ~> null]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == m * m * m) | hasKey#2 ~> (HeapRef System.Environment.m_resHelper)
		| !hasKey#2 & 0 == m * m * m ~> null]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == m * m * m) | hasKey#2 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)
			| !hasKey#2 & 0 == m * m * m ~> null]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == m * m * m) & System.Environment.s_CheckedOSWin8OrAbove | System.Environment.s_CheckedOSWin8OrAbove & hasKey#2
	| System.Environment.s_CheckedWinRT ~> !(0 == m * m * m) & System.Environment.s_CheckedWinRT | System.Environment.s_CheckedWinRT & hasKey#2
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == m * m * m) | hasKey#2 ~> (HeapRef System.Environment.s_InternalSyncObject)
		| !hasKey#2 & 0 == m * m * m ~> null]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == m * m * m) & System.Environment.s_IsWindows8OrAbove | System.Environment.s_IsWindows8OrAbove & hasKey#2
	| System.Environment.s_WinRTSupported ~> !(0 == m * m * m) & System.Environment.s_WinRTSupported | System.Environment.s_WinRTSupported & hasKey#2]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == m * m * m) | hasKey#5 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#5 & 0 == m * m * m ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == m * m * m) | hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == m * m * m ~> (HeapRef 4)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == m * m * m) | hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#7 & 0 == m * m * m ~> null]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == m * m * m) | hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == m * m * m ~> (HeapRef 6)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == m * m * m) | hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#9 & 0 == m * m * m ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Arithmetics.IncrementsWorkCorrect(System.Int32)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Arithmetics.Decreasing(System.Int32)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckedUnchecked(System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32, System.Int32)
RESULT: checked(x0 + unchecked(checked(x2 + x3 + x4) + x1) + unchecked(-(x6 * x7) + x5))
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckOverflow1(System.Int32)
RESULT: <ERROR: (HeapRef 1)>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.OverflowException[
	| System.Exception._HResult ~> -2146233066
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 ~> null
			| hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> (HeapRef 3)
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: 'A';
		10: 'o';
		11: 'w';
		12: 'E';
		13: 'x';
		14: 'c';
		15: 'e';
		16: 'p';
		17: 't';
		18: 'i';
		19: 'o';
		1: 'r';
		20: 'n';
		21: '\000';
		2: 'g';
		3: '_';
		4: 'O';
		5: 'v';
		6: 'e';
		7: 'r';
		8: 'f';
		9: 'l';
		 ... 22 ... |]
	| System.String.m_StringLength ~> 21]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: 'G';
		10: 's';
		11: 'o';
		12: 'u';
		13: 'r';
		14: 'c';
		15: 'e';
		16: ' ';
		17: 's';
		18: 't';
		19: 'r';
		1: 'e';
		20: 'i';
		21: 'n';
		22: 'g';
		23: 's';
		24: ' ';
		25: 'c';
		26: 'u';
		27: 'r';
		28: 'r';
		29: 'e';
		2: 't';
		30: 'n';
		31: 't';
		32: 'l';
		33: 'y';
		34: ' ';
		35: 'n';
		36: 'o';
		37: 't';
		38: ' ';
		39: 's';
		3: 't';
		40: 'u';
		41: 'p';
		42: 'p';
		43: 'o';
		44: 'r';
		45: 't';
		46: 'e';
		47: 'd';
		48: '!';
		49: '\000';
		4: 'i';
		5: 'n';
		6: 'g';
		7: ' ';
		8: 'r';
		9: 'e';
		 ... 50 ... |]
	| System.String.m_StringLength ~> 49]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 ~> 'C'];
		10: UNION[
			| !hasKey#10 ~> 'r'];
		11: UNION[
			| !hasKey#10 ~> 'i'];
		12: UNION[
			| !hasKey#10 ~> 'a'];
		13: UNION[
			| !hasKey#10 ~> 'l'];
		14: UNION[
			| !hasKey#10 ~> 'i'];
		15: UNION[
			| !hasKey#10 ~> 'z'];
		16: UNION[
			| !hasKey#10 ~> 'a'];
		17: UNION[
			| !hasKey#10 ~> 't'];
		18: UNION[
			| !hasKey#10 ~> 'i'];
		19: UNION[
			| !hasKey#10 ~> 'o'];
		1: UNION[
			| !hasKey#10 ~> 'L'];
		20: UNION[
			| !hasKey#10 ~> 'n'];
		21: UNION[
			| !hasKey#10 ~> 'M'];
		22: UNION[
			| !hasKey#10 ~> 'a'];
		23: UNION[
			| !hasKey#10 ~> 'n'];
		24: UNION[
			| !hasKey#10 ~> 'a'];
		25: UNION[
			| !hasKey#10 ~> 'g'];
		26: UNION[
			| !hasKey#10 ~> 'e'];
		27: UNION[
			| !hasKey#10 ~> 'r'];
		28: UNION[
			| !hasKey#10 ~> '_'];
		29: UNION[
			| !hasKey#10 ~> 'R'];
		2: UNION[
			| !hasKey#10 ~> 'R'];
		30: UNION[
			| !hasKey#10 ~> 'e'];
		31: UNION[
			| !hasKey#10 ~> 'a'];
		32: UNION[
			| !hasKey#10 ~> 'l'];
		33: UNION[
			| !hasKey#10 ~> 'T'];
		34: UNION[
			| !hasKey#10 ~> 'y'];
		35: UNION[
			| !hasKey#10 ~> 'p'];
		36: UNION[
			| !hasKey#10 ~> 'e'];
		37: UNION[
			| !hasKey#10 ~> '\000'];
		3: UNION[
			| !hasKey#10 ~> '_'];
		4: UNION[
			| !hasKey#10 ~> 'S'];
		5: UNION[
			| !hasKey#10 ~> 'a'];
		6: UNION[
			| !hasKey#10 ~> 'f'];
		7: UNION[
			| !hasKey#10 ~> 'e'];
		8: UNION[
			| !hasKey#10 ~> 'S'];
		9: UNION[
			| !hasKey#10 ~> 'e'];
		 ... UNION[
	| !hasKey#10 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 ~> 37]]
---------- s1 = ----------
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !hasKey#2 ~> 32767
		| hasKey#2 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !hasKey#2 ~> 256
		| hasKey#2 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !hasKey#2 ~> 1024
		| hasKey#2 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !hasKey#2 ~> 255
		| hasKey#2 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> System.Environment.isUserNonInteractive & hasKey#2
	| System.Environment.m_os ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#2 ~> null
			| hasKey#2 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> System.Environment.s_CheckedOSWin8OrAbove & hasKey#2
	| System.Environment.s_CheckedWinRT ~> System.Environment.s_CheckedWinRT & hasKey#2
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> System.Environment.s_IsWindows8OrAbove & hasKey#2
	| System.Environment.s_WinRTSupported ~> System.Environment.s_WinRTSupported & hasKey#2]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !hasKey#5 ~> -532462766
		| hasKey#5 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !hasKey#5 ~> (HeapRef 4)
		| hasKey#5 ~> (HeapRef System.Exception.s_EDILock)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#7 ~> null
			| hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.OverflowException ==> STRUCT System.OverflowException[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !hasKey#10 ~> (HeapRef 6)
		| hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 ~> null
			| hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckOverflow2(System.Int32)
RESULT: <ERROR: (HeapRef 1)>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.OverflowException[
	| System.Exception._HResult ~> -2146233066
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 ~> null
			| hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> (HeapRef 3)
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: 'A';
		10: 'o';
		11: 'w';
		12: 'E';
		13: 'x';
		14: 'c';
		15: 'e';
		16: 'p';
		17: 't';
		18: 'i';
		19: 'o';
		1: 'r';
		20: 'n';
		21: '\000';
		2: 'g';
		3: '_';
		4: 'O';
		5: 'v';
		6: 'e';
		7: 'r';
		8: 'f';
		9: 'l';
		 ... 22 ... |]
	| System.String.m_StringLength ~> 21]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: 'G';
		10: 's';
		11: 'o';
		12: 'u';
		13: 'r';
		14: 'c';
		15: 'e';
		16: ' ';
		17: 's';
		18: 't';
		19: 'r';
		1: 'e';
		20: 'i';
		21: 'n';
		22: 'g';
		23: 's';
		24: ' ';
		25: 'c';
		26: 'u';
		27: 'r';
		28: 'r';
		29: 'e';
		2: 't';
		30: 'n';
		31: 't';
		32: 'l';
		33: 'y';
		34: ' ';
		35: 'n';
		36: 'o';
		37: 't';
		38: ' ';
		39: 's';
		3: 't';
		40: 'u';
		41: 'p';
		42: 'p';
		43: 'o';
		44: 'r';
		45: 't';
		46: 'e';
		47: 'd';
		48: '!';
		49: '\000';
		4: 'i';
		5: 'n';
		6: 'g';
		7: ' ';
		8: 'r';
		9: 'e';
		 ... 50 ... |]
	| System.String.m_StringLength ~> 49]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 ~> 'C'];
		10: UNION[
			| !hasKey#10 ~> 'r'];
		11: UNION[
			| !hasKey#10 ~> 'i'];
		12: UNION[
			| !hasKey#10 ~> 'a'];
		13: UNION[
			| !hasKey#10 ~> 'l'];
		14: UNION[
			| !hasKey#10 ~> 'i'];
		15: UNION[
			| !hasKey#10 ~> 'z'];
		16: UNION[
			| !hasKey#10 ~> 'a'];
		17: UNION[
			| !hasKey#10 ~> 't'];
		18: UNION[
			| !hasKey#10 ~> 'i'];
		19: UNION[
			| !hasKey#10 ~> 'o'];
		1: UNION[
			| !hasKey#10 ~> 'L'];
		20: UNION[
			| !hasKey#10 ~> 'n'];
		21: UNION[
			| !hasKey#10 ~> 'M'];
		22: UNION[
			| !hasKey#10 ~> 'a'];
		23: UNION[
			| !hasKey#10 ~> 'n'];
		24: UNION[
			| !hasKey#10 ~> 'a'];
		25: UNION[
			| !hasKey#10 ~> 'g'];
		26: UNION[
			| !hasKey#10 ~> 'e'];
		27: UNION[
			| !hasKey#10 ~> 'r'];
		28: UNION[
			| !hasKey#10 ~> '_'];
		29: UNION[
			| !hasKey#10 ~> 'R'];
		2: UNION[
			| !hasKey#10 ~> 'R'];
		30: UNION[
			| !hasKey#10 ~> 'e'];
		31: UNION[
			| !hasKey#10 ~> 'a'];
		32: UNION[
			| !hasKey#10 ~> 'l'];
		33: UNION[
			| !hasKey#10 ~> 'T'];
		34: UNION[
			| !hasKey#10 ~> 'y'];
		35: UNION[
			| !hasKey#10 ~> 'p'];
		36: UNION[
			| !hasKey#10 ~> 'e'];
		37: UNION[
			| !hasKey#10 ~> '\000'];
		3: UNION[
			| !hasKey#10 ~> '_'];
		4: UNION[
			| !hasKey#10 ~> 'S'];
		5: UNION[
			| !hasKey#10 ~> 'a'];
		6: UNION[
			| !hasKey#10 ~> 'f'];
		7: UNION[
			| !hasKey#10 ~> 'e'];
		8: UNION[
			| !hasKey#10 ~> 'S'];
		9: UNION[
			| !hasKey#10 ~> 'e'];
		 ... UNION[
	| !hasKey#10 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 ~> 37]]
---------- s1 = ----------
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !hasKey#2 ~> 32767
		| hasKey#2 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !hasKey#2 ~> 256
		| hasKey#2 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !hasKey#2 ~> 1024
		| hasKey#2 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !hasKey#2 ~> 255
		| hasKey#2 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> System.Environment.isUserNonInteractive & hasKey#2
	| System.Environment.m_os ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#2 ~> null
			| hasKey#2 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> System.Environment.s_CheckedOSWin8OrAbove & hasKey#2
	| System.Environment.s_CheckedWinRT ~> System.Environment.s_CheckedWinRT & hasKey#2
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !hasKey#2 ~> null
		| hasKey#2 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> System.Environment.s_IsWindows8OrAbove & hasKey#2
	| System.Environment.s_WinRTSupported ~> System.Environment.s_WinRTSupported & hasKey#2]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !hasKey#5 ~> -532462766
		| hasKey#5 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !hasKey#5 ~> (HeapRef 4)
		| hasKey#5 ~> (HeapRef System.Exception.s_EDILock)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#7 ~> null
			| hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.OverflowException ==> STRUCT System.OverflowException[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !hasKey#10 ~> (HeapRef 6)
		| hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 ~> null
			| hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.CheckOverflow3(System.Double)
RESULT: Infinity + x1
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckDivideByZeroException0(System.Int32)
RESULT: <ERROR: (HeapRef 1)>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.DivideByZeroException[
	| System.Exception._HResult ~> -2147352558
	| System.Exception._className ~> null
	| System.Exception._data ~> null
	| System.Exception._dynamicMethods ~> null
	| System.Exception._exceptionMethod ~> null
	| System.Exception._exceptionMethodString ~> null
	| System.Exception._helpURL ~> null
	| System.Exception._innerException ~> null
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#10 ~> null
			| hasKey#10 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> (HeapRef 3)
	| System.Exception._remoteStackIndex ~> 0
	| System.Exception._remoteStackTraceString ~> null
	| System.Exception._safeSerializationManager ~> (HeapRef 5)
	| System.Exception._source ~> null
	| System.Exception._stackTrace ~> null
	| System.Exception._stackTraceString ~> null
	| System.Exception._watsonBuckets ~> null
	| System.Exception._xcode ~> -532462766
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> 0]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: 'A';
		10: 'B';
		11: 'y';
		12: 'Z';
		13: 'e';
		14: 'r';
		15: 'o';
		16: '\000';
		1: 'r';
		2: 'g';
		3: '_';
		4: 'D';
		5: 'i';
		6: 'v';
		7: 'i';
		8: 'd';
		9: 'e';
		 ... 17 ... |]
	| System.String.m_StringLength ~> 16]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: 'G';
		10: 's';
		11: 'o';
		12: 'u';
		13: 'r';
		14: 'c';
		15: 'e';
		16: ' ';
		17: 's';
		18: 't';
		19: 'r';
		1: 'e';
		20: 'i';
		21: 'n';
		22: 'g';
		23: 's';
		24: ' ';
		25: 'c';
		26: 'u';
		27: 'r';
		28: 'r';
		29: 'e';
		2: 't';
		30: 'n';
		31: 't';
		32: 'l';
		33: 'y';
		34: ' ';
		35: 'n';
		36: 'o';
		37: 't';
		38: ' ';
		39: 's';
		3: 't';
		40: 'u';
		41: 'p';
		42: 'p';
		43: 'o';
		44: 'r';
		45: 't';
		46: 'e';
		47: 'd';
		48: '!';
		49: '\000';
		4: 'i';
		5: 'n';
		6: 'g';
		7: ' ';
		8: 'r';
		9: 'e';
		 ... 50 ... |]
	| System.String.m_StringLength ~> 49]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> null
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> null]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#11 ~> 'C'];
		10: UNION[
			| !hasKey#11 ~> 'r'];
		11: UNION[
			| !hasKey#11 ~> 'i'];
		12: UNION[
			| !hasKey#11 ~> 'a'];
		13: UNION[
			| !hasKey#11 ~> 'l'];
		14: UNION[
			| !hasKey#11 ~> 'i'];
		15: UNION[
			| !hasKey#11 ~> 'z'];
		16: UNION[
			| !hasKey#11 ~> 'a'];
		17: UNION[
			| !hasKey#11 ~> 't'];
		18: UNION[
			| !hasKey#11 ~> 'i'];
		19: UNION[
			| !hasKey#11 ~> 'o'];
		1: UNION[
			| !hasKey#11 ~> 'L'];
		20: UNION[
			| !hasKey#11 ~> 'n'];
		21: UNION[
			| !hasKey#11 ~> 'M'];
		22: UNION[
			| !hasKey#11 ~> 'a'];
		23: UNION[
			| !hasKey#11 ~> 'n'];
		24: UNION[
			| !hasKey#11 ~> 'a'];
		25: UNION[
			| !hasKey#11 ~> 'g'];
		26: UNION[
			| !hasKey#11 ~> 'e'];
		27: UNION[
			| !hasKey#11 ~> 'r'];
		28: UNION[
			| !hasKey#11 ~> '_'];
		29: UNION[
			| !hasKey#11 ~> 'R'];
		2: UNION[
			| !hasKey#11 ~> 'R'];
		30: UNION[
			| !hasKey#11 ~> 'e'];
		31: UNION[
			| !hasKey#11 ~> 'a'];
		32: UNION[
			| !hasKey#11 ~> 'l'];
		33: UNION[
			| !hasKey#11 ~> 'T'];
		34: UNION[
			| !hasKey#11 ~> 'y'];
		35: UNION[
			| !hasKey#11 ~> 'p'];
		36: UNION[
			| !hasKey#11 ~> 'e'];
		37: UNION[
			| !hasKey#11 ~> '\000'];
		3: UNION[
			| !hasKey#11 ~> '_'];
		4: UNION[
			| !hasKey#11 ~> 'S'];
		5: UNION[
			| !hasKey#11 ~> 'a'];
		6: UNION[
			| !hasKey#11 ~> 'f'];
		7: UNION[
			| !hasKey#11 ~> 'e'];
		8: UNION[
			| !hasKey#11 ~> 'S'];
		9: UNION[
			| !hasKey#11 ~> 'e'];
		 ... UNION[
	| !hasKey#11 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#11 ~> 37]]
---------- s1 = ----------
System.ArithmeticException ==> STRUCT System.ArithmeticException[]
System.Byte ==> STRUCT System.Byte[
	| System.Byte.MaxValue ~> UNION[
		| !hasKey#1 ~> 255
		| hasKey#1 ~> System.Byte.MaxValue]
	| System.Byte.MinValue ~> UNION[
		| !hasKey#1 ~> 0
		| hasKey#1 ~> System.Byte.MinValue]]
System.DivideByZeroException ==> STRUCT System.DivideByZeroException[]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !hasKey#3 ~> 32767
		| hasKey#3 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !hasKey#3 ~> 256
		| hasKey#3 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !hasKey#3 ~> 1024
		| hasKey#3 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !hasKey#3 ~> 255
		| hasKey#3 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> System.Environment.isUserNonInteractive & hasKey#3
	| System.Environment.m_os ~> UNION[
		| !hasKey#3 ~> null
		| hasKey#3 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !hasKey#3 ~> null
		| hasKey#3 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#3 ~> null
			| hasKey#3 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> System.Environment.s_CheckedOSWin8OrAbove & hasKey#3
	| System.Environment.s_CheckedWinRT ~> System.Environment.s_CheckedWinRT & hasKey#3
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !hasKey#3 ~> null
		| hasKey#3 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> System.Environment.s_IsWindows8OrAbove & hasKey#3
	| System.Environment.s_WinRTSupported ~> System.Environment.s_WinRTSupported & hasKey#3]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !hasKey#6 ~> -532462766
		| hasKey#6 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !hasKey#6 ~> (HeapRef 4)
		| hasKey#6 ~> (HeapRef System.Exception.s_EDILock)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#8 ~> null
			| hasKey#8 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !hasKey#11 ~> (HeapRef 6)
		| hasKey#11 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#10 ~> null
			| hasKey#10 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.CheckOrder(System.Int32)
RESULT: checked(2000000000 + x1 + 2000000000)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftLeftOnZero(System.Int32)
RESULT: a
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.ZeroShift(System.Int32)
RESULT: 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.DefaultShift(System.Int32, System.Int32)
RESULT: a << b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int64 VSharp.CSharpUtils.Tests.Arithmetics.SumShifts(System.Int64)
RESULT: a << 32
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftSum(System.Int32)
RESULT: 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.MultiplyOnShift1(System.Int16)
RESULT: (System.Int32)a << 19
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.MultiplyOnShift2(System.Int16)
RESULT: (System.Int32)a << 16
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftMultiplication(System.Int16)
RESULT: 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftDevision1(System.Byte)
RESULT: ((System.Int32)a >> 20) / 1024
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftDevision2(System.Int32)
RESULT: a / 512 >> 12
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.UInt32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftDevision3(System.UInt32)
RESULT: 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.UInt64 VSharp.CSharpUtils.Tests.Arithmetics.ShiftDevision4(System.UInt64)
RESULT: a >> 41
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftSumOfShifts1(System.Int32)
RESULT: 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int64 VSharp.CSharpUtils.Tests.Arithmetics.ShiftSumOfShifts2(System.Int64)
RESULT: a << 34
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ConcreteShift()
RESULT: UNION[
	| !hasKey#1 ~> -2147483648
	| hasKey#1 ~> System.Int32.MinValue]
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
System.Int32 ==> STRUCT System.Int32[
	| System.Int32.MaxValue ~> UNION[
		| !hasKey#1 ~> 2147483647
		| hasKey#1 ~> System.Int32.MaxValue]
	| System.Int32.MinValue ~> UNION[
		| !hasKey#1 ~> -2147483648
		| hasKey#1 ~> System.Int32.MinValue]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.MultiplyShifts1(System.Int32, System.Int32)
RESULT: 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.MultiplyShifts2(System.Int32, System.Int32)
RESULT: a * c << 29
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Arithmetics.ShiftWithDivAndMul(System.Int32)
RESULT: (a << 6) / 4
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Int64 VSharp.CSharpUtils.Tests.Arithmetics.DoubleShiftRight(System.Int32)
RESULT: (System.Int64)(a >> 15 >> 18)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod1(System.Double)
RESULT: log(x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod2(System.Double, System.Double)
RESULT: log(x + y)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod3()
RESULT: 0
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod4(System.Double)
RESULT: log(1 + log(x))
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod5()
RESULT: -Infinity
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod6()
RESULT: NaN
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.LogMethod7(System.Double)
RESULT: UNION[
	| !(x < 0) ~> log(x)
	| x < 0 ~> log(-x)]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SqrtMethod1(System.Double)
RESULT: sqrt(x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SqrtMethod2()
RESULT: 2
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SqrtMethod3(System.Double)
RESULT: UNION[
	| !(x < 0) ~> sqrt(x)
	| x < 0 ~> sqrt(-x)]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SqrtMethod4()
RESULT: NaN
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.ExpMethod1()
RESULT: 1
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.ExpMethod2(System.Double)
RESULT: exp(x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod1(System.Double)
RESULT: 1
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod2(System.Double)
RESULT: 1
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod3()
RESULT: 25
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod4(System.Double, System.Double)
RESULT: pow(x, y)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod5(System.Double)
RESULT: UNION[
	| !(x < 0) ~> pow(x, 2)
	| x < 0 ~> pow(-x, 2)]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod6(System.Double)
RESULT: UNION[
	| !(x < 0) ~> pow(x, x)
	| !(x < 8) & x < 0 ~> pow(-x, -x)
	| x < 0 & x < 8 ~> pow(-x, x)]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod7(System.Double, System.Double)
RESULT: x + y
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod8(System.Double)
RESULT: pow(2, x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod9(System.Double)
RESULT: NaN
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod10(System.Double, System.Double)
RESULT: NaN
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod11(System.Double)
RESULT: UNION[
	| !(x < 0) ~> 0
	| 0 == x ~> 1
	| x < 0 ~> Infinity]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod12()
RESULT: 1
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod13()
RESULT: 0
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod14(System.Double)
RESULT: Infinity
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod15(System.Double, System.Double)
RESULT: UNION[
	| !(0 == x + y) & !(x + y < 0) ~> Infinity
	| 0 == x + y ~> 1
	| x + y < 0 ~> 0]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod16(System.Double)
RESULT: UNION[
	| !(-1 == x) & !(1 == x) & (!(-1 < x) | !(x < 1)) ~> 0
	| -1 < x & x < 1 ~> Infinity
	| -1 == x ~> NaN
	| 1 == x ~> 1]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.PowMethod17()
RESULT: -Infinity
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.AcosMethod()
RESULT: 0
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.AsinMethod(System.Double)
RESULT: arcsin(x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.AtanMethod(System.Double, System.Double)
RESULT: arctan(-y + x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.CeilingMethod(System.Double)
RESULT: ceil(x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.CosMethod()
RESULT: NaN
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.CoshMethod()
RESULT: Infinity
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.FloorMethod(System.Double)
RESULT: floor(x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SinMethod()
RESULT: NaN
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.TanMethod()
RESULT: NaN
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.SinhMethod(System.Double)
RESULT: UNION[
	| !(x <= 0) ~> sinh(x)
	| x <= 0 ~> sinh(-x)]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.TanhMethod(System.Double)
RESULT: tanh(x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.RoundMethod()
RESULT: 7
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.AbsMethod(System.Double)
RESULT: abs(x)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Single VSharp.CSharpUtils.Tests.Arithmetics.AbsSingleMethod()
RESULT: UNION[
	| !(0 == System.DBNull.Value) | !hasKey#3 ~> 5.9]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
2 ==> [|
	0: UNION[
		| !hasKey#2 ~> System.Empty];
	10: UNION[
		| !hasKey#2 ~> System.UInt32];
	11: UNION[
		| !hasKey#2 ~> System.Int64];
	12: UNION[
		| !hasKey#2 ~> System.UInt64];
	13: UNION[
		| !hasKey#2 ~> System.Single];
	14: UNION[
		| !hasKey#2 ~> System.Double];
	15: UNION[
		| !hasKey#2 ~> System.Decimal];
	16: UNION[
		| !hasKey#2 ~> System.DateTime];
	17: UNION[
		| !hasKey#2 ~> System.Object];
	18: UNION[
		| !hasKey#2 ~> System.String];
	1: UNION[
		| !hasKey#2 ~> System.Object];
	2: UNION[
		| !hasKey#2 ~> System.DBNull];
	3: UNION[
		| !hasKey#2 ~> System.Boolean];
	4: UNION[
		| !hasKey#2 ~> System.Char];
	5: UNION[
		| !hasKey#2 ~> System.SByte];
	6: UNION[
		| !hasKey#2 ~> System.Byte];
	7: UNION[
		| !hasKey#2 ~> System.Int16];
	8: UNION[
		| !hasKey#2 ~> System.UInt16];
	9: UNION[
		| !hasKey#2 ~> System.Int32];
	 ... UNION[
	| !hasKey#2 ~> 19] ... |]
3 ==> [|
	0: UNION[
		| !hasKey#2 ~> 'A'];
	10: UNION[
		| !hasKey#2 ~> 'K'];
	11: UNION[
		| !hasKey#2 ~> 'L'];
	12: UNION[
		| !hasKey#2 ~> 'M'];
	13: UNION[
		| !hasKey#2 ~> 'N'];
	14: UNION[
		| !hasKey#2 ~> 'O'];
	15: UNION[
		| !hasKey#2 ~> 'P'];
	16: UNION[
		| !hasKey#2 ~> 'Q'];
	17: UNION[
		| !hasKey#2 ~> 'R'];
	18: UNION[
		| !hasKey#2 ~> 'S'];
	19: UNION[
		| !hasKey#2 ~> 'T'];
	1: UNION[
		| !hasKey#2 ~> 'B'];
	20: UNION[
		| !hasKey#2 ~> 'U'];
	21: UNION[
		| !hasKey#2 ~> 'V'];
	22: UNION[
		| !hasKey#2 ~> 'W'];
	23: UNION[
		| !hasKey#2 ~> 'X'];
	24: UNION[
		| !hasKey#2 ~> 'Y'];
	25: UNION[
		| !hasKey#2 ~> 'Z'];
	26: UNION[
		| !hasKey#2 ~> 'a'];
	27: UNION[
		| !hasKey#2 ~> 'b'];
	28: UNION[
		| !hasKey#2 ~> 'c'];
	29: UNION[
		| !hasKey#2 ~> 'd'];
	2: UNION[
		| !hasKey#2 ~> 'C'];
	30: UNION[
		| !hasKey#2 ~> 'e'];
	31: UNION[
		| !hasKey#2 ~> 'f'];
	32: UNION[
		| !hasKey#2 ~> 'g'];
	33: UNION[
		| !hasKey#2 ~> 'h'];
	34: UNION[
		| !hasKey#2 ~> 'i'];
	35: UNION[
		| !hasKey#2 ~> 'j'];
	36: UNION[
		| !hasKey#2 ~> 'k'];
	37: UNION[
		| !hasKey#2 ~> 'l'];
	38: UNION[
		| !hasKey#2 ~> 'm'];
	39: UNION[
		| !hasKey#2 ~> 'n'];
	3: UNION[
		| !hasKey#2 ~> 'D'];
	40: UNION[
		| !hasKey#2 ~> 'o'];
	41: UNION[
		| !hasKey#2 ~> 'p'];
	42: UNION[
		| !hasKey#2 ~> 'q'];
	43: UNION[
		| !hasKey#2 ~> 'r'];
	44: UNION[
		| !hasKey#2 ~> 's'];
	45: UNION[
		| !hasKey#2 ~> 't'];
	46: UNION[
		| !hasKey#2 ~> 'u'];
	47: UNION[
		| !hasKey#2 ~> 'v'];
	48: UNION[
		| !hasKey#2 ~> 'w'];
	49: UNION[
		| !hasKey#2 ~> 'x'];
	4: UNION[
		| !hasKey#2 ~> 'E'];
	50: UNION[
		| !hasKey#2 ~> 'y'];
	51: UNION[
		| !hasKey#2 ~> 'z'];
	52: UNION[
		| !hasKey#2 ~> '0'];
	53: UNION[
		| !hasKey#2 ~> '1'];
	54: UNION[
		| !hasKey#2 ~> '2'];
	55: UNION[
		| !hasKey#2 ~> '3'];
	56: UNION[
		| !hasKey#2 ~> '4'];
	57: UNION[
		| !hasKey#2 ~> '5'];
	58: UNION[
		| !hasKey#2 ~> '6'];
	59: UNION[
		| !hasKey#2 ~> '7'];
	5: UNION[
		| !hasKey#2 ~> 'F'];
	60: UNION[
		| !hasKey#2 ~> '8'];
	61: UNION[
		| !hasKey#2 ~> '9'];
	62: UNION[
		| !hasKey#2 ~> '+'];
	63: UNION[
		| !hasKey#2 ~> '/'];
	64: UNION[
		| !hasKey#2 ~> '='];
	6: UNION[
		| !hasKey#2 ~> 'G'];
	7: UNION[
		| !hasKey#2 ~> 'H'];
	8: UNION[
		| !hasKey#2 ~> 'I'];
	9: UNION[
		| !hasKey#2 ~> 'J'];
	 ... UNION[
	| !hasKey#2 ~> 65] ... |]
4 ==> STRUCT System.DBNull[]
5 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'S'];
		10: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'c'];
		11: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'a'];
		12: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 's'];
		13: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 't'];
		14: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> ' '];
		15: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'i'];
		16: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 's'];
		17: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> ' '];
		18: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'n'];
		19: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'o'];
		1: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'p'];
		20: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 't'];
		21: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> ' '];
		22: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'v'];
		23: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'a'];
		24: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'l'];
		25: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'i'];
		26: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'd'];
		27: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> '.'];
		28: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> '\000'];
		2: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'e'];
		3: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'c'];
		4: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'i'];
		5: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'f'];
		6: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'i'];
		7: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'e'];
		8: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'd'];
		9: UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> ' '];
		 ... UNION[
	| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 28]]
6 ==> STRUCT System.InvalidCastException[
	| System.Exception._HResult ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> -2147467262]
	| System.Exception._className ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._data ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._helpURL ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._innerException ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#10 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#10 & hasKey#3 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> (HeapRef 5)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> (HeapRef 8)]
	| System.Exception._source ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Exception._xcode ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 0]]]
7 ==> STRUCT System.Object[]
8 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'C'];
		10: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'r'];
		11: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'i'];
		12: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'a'];
		13: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'l'];
		14: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'i'];
		15: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'z'];
		16: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'a'];
		17: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 't'];
		18: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'i'];
		19: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'o'];
		1: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'L'];
		20: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'n'];
		21: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'M'];
		22: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'a'];
		23: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'n'];
		24: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'a'];
		25: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'g'];
		26: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'e'];
		27: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'r'];
		28: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> '_'];
		29: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'R'];
		2: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'R'];
		30: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'e'];
		31: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'a'];
		32: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'l'];
		33: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'T'];
		34: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'y'];
		35: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'p'];
		36: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'e'];
		37: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> '\000'];
		3: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> '_'];
		4: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'S'];
		5: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'a'];
		6: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'f'];
		7: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'e'];
		8: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'S'];
		9: UNION[
			| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 'e'];
		 ... UNION[
	| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> 37]]
System.DBNull.Value ==> STRUCT System.DBNull[]
---------- s1 = ----------
System.Convert ==> STRUCT System.Convert[
	| System.Convert.ConvertTypes ~> UNION[
		| !hasKey#2 ~> (HeapRef 2)
		| hasKey#2 ~> (HeapRef System.Convert.ConvertTypes)]
	| System.Convert.DBNull ~> UNION[
		| !hasKey#2 & (!(0 == System.DBNull.Value) | !hasKey#3) ~> <VOID>
		| !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null
		| hasKey#2 ~> (HeapRef System.Convert.DBNull)]
	| System.Convert.EnumType ~> UNION[
		| !hasKey#2 ~> System.Enum
		| hasKey#2 ~> (HeapRef System.Convert.EnumType)]
	| System.Convert.base64LineBreakPosition ~> UNION[
		| !hasKey#2 ~> 76
		| hasKey#2 ~> System.Convert.base64LineBreakPosition]
	| System.Convert.base64Table ~> UNION[
		| !hasKey#2 ~> (HeapRef 3)
		| hasKey#2 ~> (HeapRef System.Convert.base64Table)]]
System.DBNull ==> STRUCT System.DBNull[
	| System.DBNull.Value ~> UNION[
		| !hasKey#2 & !hasKey#3 ~> (HeapRef 4)
		| hasKey#2 | hasKey#3 ~> (HeapRef System.DBNull.Value)]]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == System.DBNull.Value) | !hasKey#3 | hasKey#2 | hasKey#7 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#2 & !hasKey#7 & 0 == System.DBNull.Value & hasKey#3 ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == System.DBNull.Value) | !hasKey#3 | hasKey#2 | hasKey#7 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#2 & !hasKey#7 & 0 == System.DBNull.Value & hasKey#3 ~> (HeapRef 7)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == System.DBNull.Value) | !hasKey#3 | hasKey#2 | hasKey#8 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#2 & !hasKey#8 & 0 == System.DBNull.Value & hasKey#3 ~> null]]]
System.InvalidCastException ==> STRUCT System.InvalidCastException[]
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == System.DBNull.Value) | !hasKey#3 | hasKey#11 | hasKey#2 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#11 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> (HeapRef 9)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == System.DBNull.Value) | !hasKey#3 | hasKey#10 | hasKey#2 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#10 & !hasKey#2 & 0 == System.DBNull.Value & hasKey#3 ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.Atan2Method1(System.Double)
RESULT: NaN
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.Atan2Method2(System.Double)
RESULT: UNION[
	| !(Infinity == x) ~> arctan(Infinity, x)
	| Infinity == x ~> NaN]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Arithmetics.Atan2Method3()
RESULT: 0
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Arithmetics ==> STRUCT VSharp.CSharpUtils.Tests.Arithmetics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation1()
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation1(System.Int32)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation2(System.Boolean)
RESULT: !b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation3(System.Boolean)
RESULT: b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation4(System.Boolean)
RESULT: b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Negation5(System.Boolean)
RESULT: b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And1(System.Boolean, System.Boolean)
RESULT: a
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And2(System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And3(System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And4(System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And5(System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And6(System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And7(System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And8(System.Boolean, System.Boolean)
RESULT: a & b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.And9(System.Boolean, System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or1(System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or2(System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or3(System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or4(System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or5(System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or6(System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or7(System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or8(System.Boolean, System.Boolean)
RESULT: a | b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or9(System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Or10(System.Boolean, System.Boolean, System.Boolean)
RESULT: a | b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr0(System.Boolean, System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr1(System.Boolean, System.Boolean, System.Boolean)
RESULT: b & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr2(System.Boolean, System.Boolean, System.Boolean)
RESULT: !b & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr3(System.Boolean, System.Boolean, System.Boolean)
RESULT: b | c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr4(System.Boolean, System.Boolean, System.Boolean)
RESULT: !b | c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr5(System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr6(System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b | a & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr7(System.Boolean, System.Boolean, System.Boolean)
RESULT: (a | b) & (a | c)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr8(System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b | a & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr9(System.Boolean, System.Boolean, System.Boolean)
RESULT: (a | b) & (a | c)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr10(System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b | a & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr11(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a | !b | !c | d
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr12(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & (!a & b | a & c)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr13(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr14(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr15(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a | !b) & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr16(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !b | a | c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr17(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !b & a | !b & a & c | (!b | !c) & a | a & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr18(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !c | (!a | b) & (!b & a | c)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr19(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr20(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr21(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr22(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !b & a
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr23(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr24(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !c & (!a | b)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr25(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.AndOr26(System.Boolean, System.Boolean, System.Boolean)
RESULT: !c & b | a & b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor1(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor2(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor3(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a | !b) & (a | b)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor4(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor5(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor6(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor7(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a | (!a & !b | !c | a & b) & ((!a | !b) & (a | b) | c)) & (!c & (!a & !b | a & b) | (!a | !b) & (a | b) & c | a)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Xor8(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: (!a & !b | a & b) & ((!a | !b) & (a | b) | (!a | !b) & (a | b))
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondAnd1(System.Int32)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondAnd2(System.Int32)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondAnd3(System.Int32)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondOr1(System.Int32)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondOr2(System.Int32)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.CondOr3(System.Int32)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Equal1(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Equal2(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & !b | a & b
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Equal3(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: True
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.NotEqual1(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: !a & b | !b & a
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.NotEqual2(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: False
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Order1(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Order2(System.Boolean, System.Boolean, System.Boolean, System.Boolean)
RESULT: a & b & c
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Order3(System.Int32, System.Int32, System.Int32, System.Int32)
RESULT: -b + a + -c == 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Logics.Order4(System.Int32, System.Int32, System.Int32, System.Int32)
RESULT: -b + a + -c == 0
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Logics ==> STRUCT VSharp.CSharpUtils.Tests.Logics[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.ClassesSimple.Test1(System.Int32)
RESULT: True
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleA[
	| VSharp.CSharpUtils.Tests.ClassesSimpleA._b ~> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleB[
		| VSharp.CSharpUtils.Tests.ClassesSimpleB._c ~> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleC[
			| VSharp.CSharpUtils.Tests.ClassesSimpleC.<M1>k__BackingField ~> 42
			| VSharp.CSharpUtils.Tests.ClassesSimpleC._m2 ~> 102
			| VSharp.CSharpUtils.Tests.ClassesSimpleC._n ~> n]]
	| VSharp.CSharpUtils.Tests.ClassesSimpleA._intField ~> 100500]
---------- s1 = ----------
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.Tests.ClassesSimple ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimple[]
VSharp.CSharpUtils.Tests.ClassesSimpleA ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleA[]
VSharp.CSharpUtils.Tests.ClassesSimpleB ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleB[]
VSharp.CSharpUtils.Tests.ClassesSimpleC ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleC[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.ClassesSimple.SimpleStructureAccess(System.Int32)
RESULT: newMyValue
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.ClassesSimple+MyStruct ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimple+MyStruct[]
VSharp.CSharpUtils.Tests.ClassesSimple ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimple[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.ClassesSimple.ValueTypeMethod(System.Int32, System.Int32)
RESULT: UNION[
	| !(x < y) & !(x <= y) ~> 1
	| !(x < y) & x <= y ~> 0
	| x < y ~> -1]
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
System.Int32 ==> STRUCT System.Int32[
	| System.Int32.MaxValue ~> UNION[
		| !hasKey#1 ~> 2147483647
		| hasKey#1 ~> System.Int32.MaxValue]
	| System.Int32.MinValue ~> UNION[
		| !hasKey#1 ~> -2147483648
		| hasKey#1 ~> System.Int32.MinValue]]
VSharp.CSharpUtils.Tests.ClassesSimple ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimple[]
METHOD: System.Void VSharp.CSharpUtils.Tests.ClassesSimpleException.Test1()
RESULT: UNION[
	| !hasKey#1 ~> <ERROR: (HeapRef 2)>
	| hasKey#1 ~> <VOID>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException0[]
2 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| !hasKey#1 ~> -2147467261]
	| System.Exception._className ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._data ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._helpURL ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._innerException ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#1 & !hasKey#10 ~> null
			| !hasKey#1 & hasKey#10 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !hasKey#1 ~> (HeapRef 4)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !hasKey#1 ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !hasKey#1 ~> (HeapRef 6)]
	| System.Exception._source ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._xcode ~> UNION[
		| !hasKey#1 ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#1 ~> 0]]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 ~> 'A'];
		10: UNION[
			| !hasKey#1 ~> 'f'];
		11: UNION[
			| !hasKey#1 ~> 'e'];
		12: UNION[
			| !hasKey#1 ~> 'r'];
		13: UNION[
			| !hasKey#1 ~> 'e'];
		14: UNION[
			| !hasKey#1 ~> 'n'];
		15: UNION[
			| !hasKey#1 ~> 'c'];
		16: UNION[
			| !hasKey#1 ~> 'e'];
		17: UNION[
			| !hasKey#1 ~> 'E'];
		18: UNION[
			| !hasKey#1 ~> 'x'];
		19: UNION[
			| !hasKey#1 ~> 'c'];
		1: UNION[
			| !hasKey#1 ~> 'r'];
		20: UNION[
			| !hasKey#1 ~> 'e'];
		21: UNION[
			| !hasKey#1 ~> 'p'];
		22: UNION[
			| !hasKey#1 ~> 't'];
		23: UNION[
			| !hasKey#1 ~> 'i'];
		24: UNION[
			| !hasKey#1 ~> 'o'];
		25: UNION[
			| !hasKey#1 ~> 'n'];
		26: UNION[
			| !hasKey#1 ~> '\000'];
		2: UNION[
			| !hasKey#1 ~> 'g'];
		3: UNION[
			| !hasKey#1 ~> '_'];
		4: UNION[
			| !hasKey#1 ~> 'N'];
		5: UNION[
			| !hasKey#1 ~> 'u'];
		6: UNION[
			| !hasKey#1 ~> 'l'];
		7: UNION[
			| !hasKey#1 ~> 'l'];
		8: UNION[
			| !hasKey#1 ~> 'R'];
		9: UNION[
			| !hasKey#1 ~> 'e'];
		 ... UNION[
	| !hasKey#1 ~> 27] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 ~> 26]]
4 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 ~> 'G'];
		10: UNION[
			| !hasKey#1 ~> 's'];
		11: UNION[
			| !hasKey#1 ~> 'o'];
		12: UNION[
			| !hasKey#1 ~> 'u'];
		13: UNION[
			| !hasKey#1 ~> 'r'];
		14: UNION[
			| !hasKey#1 ~> 'c'];
		15: UNION[
			| !hasKey#1 ~> 'e'];
		16: UNION[
			| !hasKey#1 ~> ' '];
		17: UNION[
			| !hasKey#1 ~> 's'];
		18: UNION[
			| !hasKey#1 ~> 't'];
		19: UNION[
			| !hasKey#1 ~> 'r'];
		1: UNION[
			| !hasKey#1 ~> 'e'];
		20: UNION[
			| !hasKey#1 ~> 'i'];
		21: UNION[
			| !hasKey#1 ~> 'n'];
		22: UNION[
			| !hasKey#1 ~> 'g'];
		23: UNION[
			| !hasKey#1 ~> 's'];
		24: UNION[
			| !hasKey#1 ~> ' '];
		25: UNION[
			| !hasKey#1 ~> 'c'];
		26: UNION[
			| !hasKey#1 ~> 'u'];
		27: UNION[
			| !hasKey#1 ~> 'r'];
		28: UNION[
			| !hasKey#1 ~> 'r'];
		29: UNION[
			| !hasKey#1 ~> 'e'];
		2: UNION[
			| !hasKey#1 ~> 't'];
		30: UNION[
			| !hasKey#1 ~> 'n'];
		31: UNION[
			| !hasKey#1 ~> 't'];
		32: UNION[
			| !hasKey#1 ~> 'l'];
		33: UNION[
			| !hasKey#1 ~> 'y'];
		34: UNION[
			| !hasKey#1 ~> ' '];
		35: UNION[
			| !hasKey#1 ~> 'n'];
		36: UNION[
			| !hasKey#1 ~> 'o'];
		37: UNION[
			| !hasKey#1 ~> 't'];
		38: UNION[
			| !hasKey#1 ~> ' '];
		39: UNION[
			| !hasKey#1 ~> 's'];
		3: UNION[
			| !hasKey#1 ~> 't'];
		40: UNION[
			| !hasKey#1 ~> 'u'];
		41: UNION[
			| !hasKey#1 ~> 'p'];
		42: UNION[
			| !hasKey#1 ~> 'p'];
		43: UNION[
			| !hasKey#1 ~> 'o'];
		44: UNION[
			| !hasKey#1 ~> 'r'];
		45: UNION[
			| !hasKey#1 ~> 't'];
		46: UNION[
			| !hasKey#1 ~> 'e'];
		47: UNION[
			| !hasKey#1 ~> 'd'];
		48: UNION[
			| !hasKey#1 ~> '!'];
		49: UNION[
			| !hasKey#1 ~> '\000'];
		4: UNION[
			| !hasKey#1 ~> 'i'];
		5: UNION[
			| !hasKey#1 ~> 'n'];
		6: UNION[
			| !hasKey#1 ~> 'g'];
		7: UNION[
			| !hasKey#1 ~> ' '];
		8: UNION[
			| !hasKey#1 ~> 'r'];
		9: UNION[
			| !hasKey#1 ~> 'e'];
		 ... UNION[
	| !hasKey#1 ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 ~> 49]]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !hasKey#1 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !hasKey#1 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !hasKey#1 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !hasKey#1 ~> null]]
7 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'C'];
		10: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'r'];
		11: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'i'];
		12: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		13: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'l'];
		14: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'i'];
		15: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'z'];
		16: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		17: UNION[
			| !hasKey#1 & !hasKey#11 ~> 't'];
		18: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'i'];
		19: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'o'];
		1: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'L'];
		20: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'n'];
		21: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'M'];
		22: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		23: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'n'];
		24: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		25: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'g'];
		26: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		27: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'r'];
		28: UNION[
			| !hasKey#1 & !hasKey#11 ~> '_'];
		29: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'R'];
		2: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'R'];
		30: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		31: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		32: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'l'];
		33: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'T'];
		34: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'y'];
		35: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'p'];
		36: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		37: UNION[
			| !hasKey#1 & !hasKey#11 ~> '\000'];
		3: UNION[
			| !hasKey#1 & !hasKey#11 ~> '_'];
		4: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'S'];
		5: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		6: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'f'];
		7: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		8: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'S'];
		9: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		 ... UNION[
	| !hasKey#1 & !hasKey#11 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 & !hasKey#11 ~> 37]]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> 32767
		| hasKey#1 | hasKey#4 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> 256
		| hasKey#1 | hasKey#4 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> 1024
		| hasKey#1 | hasKey#4 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> 255
		| hasKey#1 | hasKey#4 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> System.Environment.isUserNonInteractive & hasKey#1 | System.Environment.isUserNonInteractive & hasKey#4
	| System.Environment.m_os ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> null
		| hasKey#1 | hasKey#4 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> null
		| hasKey#1 | hasKey#4 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#1 & !hasKey#4 ~> null
			| hasKey#1 | hasKey#4 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> System.Environment.s_CheckedOSWin8OrAbove & hasKey#1 | System.Environment.s_CheckedOSWin8OrAbove & hasKey#4
	| System.Environment.s_CheckedWinRT ~> System.Environment.s_CheckedWinRT & hasKey#1 | System.Environment.s_CheckedWinRT & hasKey#4
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> null
		| hasKey#1 | hasKey#4 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> System.Environment.s_IsWindows8OrAbove & hasKey#1 | System.Environment.s_IsWindows8OrAbove & hasKey#4
	| System.Environment.s_WinRTSupported ~> System.Environment.s_WinRTSupported & hasKey#1 | System.Environment.s_WinRTSupported & hasKey#4]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !hasKey#1 & !hasKey#6 ~> -532462766
		| hasKey#1 | hasKey#6 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !hasKey#1 & !hasKey#6 ~> (HeapRef 5)
		| hasKey#1 | hasKey#6 ~> (HeapRef System.Exception.s_EDILock)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#1 & !hasKey#8 ~> null
			| hasKey#1 | hasKey#8 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !hasKey#1 & !hasKey#11 ~> (HeapRef 7)
		| hasKey#1 | hasKey#11 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#1 & !hasKey#10 ~> null
			| hasKey#1 | hasKey#10 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.ClassesSimpleException ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException[]
VSharp.CSharpUtils.Tests.ClassesSimpleException0 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException0[
	| VSharp.CSharpUtils.Tests.ClassesSimpleException0.field0 ~> UNION[
		| !hasKey#1 ~> 0
		| hasKey#1 ~> VSharp.CSharpUtils.Tests.ClassesSimpleException0.field0]]
VSharp.CSharpUtils.Tests.ClassesSimpleExceptionInitializer ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleExceptionInitializer[]
METHOD: System.Void VSharp.CSharpUtils.Tests.ClassesSimpleException.Test2()
RESULT: UNION[
	| !hasKey#1 ~> <ERROR: (HeapRef 2)>
	| hasKey#1 ~> <VOID>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException1[]
2 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| !hasKey#1 ~> -2147467261]
	| System.Exception._className ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._data ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._helpURL ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._innerException ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#1 & !hasKey#10 ~> null
			| !hasKey#1 & hasKey#10 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !hasKey#1 ~> (HeapRef 4)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !hasKey#1 ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !hasKey#1 ~> (HeapRef 6)]
	| System.Exception._source ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !hasKey#1 ~> null]
	| System.Exception._xcode ~> UNION[
		| !hasKey#1 ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#1 ~> 0]]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 ~> 'A'];
		10: UNION[
			| !hasKey#1 ~> 'f'];
		11: UNION[
			| !hasKey#1 ~> 'e'];
		12: UNION[
			| !hasKey#1 ~> 'r'];
		13: UNION[
			| !hasKey#1 ~> 'e'];
		14: UNION[
			| !hasKey#1 ~> 'n'];
		15: UNION[
			| !hasKey#1 ~> 'c'];
		16: UNION[
			| !hasKey#1 ~> 'e'];
		17: UNION[
			| !hasKey#1 ~> 'E'];
		18: UNION[
			| !hasKey#1 ~> 'x'];
		19: UNION[
			| !hasKey#1 ~> 'c'];
		1: UNION[
			| !hasKey#1 ~> 'r'];
		20: UNION[
			| !hasKey#1 ~> 'e'];
		21: UNION[
			| !hasKey#1 ~> 'p'];
		22: UNION[
			| !hasKey#1 ~> 't'];
		23: UNION[
			| !hasKey#1 ~> 'i'];
		24: UNION[
			| !hasKey#1 ~> 'o'];
		25: UNION[
			| !hasKey#1 ~> 'n'];
		26: UNION[
			| !hasKey#1 ~> '\000'];
		2: UNION[
			| !hasKey#1 ~> 'g'];
		3: UNION[
			| !hasKey#1 ~> '_'];
		4: UNION[
			| !hasKey#1 ~> 'N'];
		5: UNION[
			| !hasKey#1 ~> 'u'];
		6: UNION[
			| !hasKey#1 ~> 'l'];
		7: UNION[
			| !hasKey#1 ~> 'l'];
		8: UNION[
			| !hasKey#1 ~> 'R'];
		9: UNION[
			| !hasKey#1 ~> 'e'];
		 ... UNION[
	| !hasKey#1 ~> 27] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 ~> 26]]
4 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 ~> 'G'];
		10: UNION[
			| !hasKey#1 ~> 's'];
		11: UNION[
			| !hasKey#1 ~> 'o'];
		12: UNION[
			| !hasKey#1 ~> 'u'];
		13: UNION[
			| !hasKey#1 ~> 'r'];
		14: UNION[
			| !hasKey#1 ~> 'c'];
		15: UNION[
			| !hasKey#1 ~> 'e'];
		16: UNION[
			| !hasKey#1 ~> ' '];
		17: UNION[
			| !hasKey#1 ~> 's'];
		18: UNION[
			| !hasKey#1 ~> 't'];
		19: UNION[
			| !hasKey#1 ~> 'r'];
		1: UNION[
			| !hasKey#1 ~> 'e'];
		20: UNION[
			| !hasKey#1 ~> 'i'];
		21: UNION[
			| !hasKey#1 ~> 'n'];
		22: UNION[
			| !hasKey#1 ~> 'g'];
		23: UNION[
			| !hasKey#1 ~> 's'];
		24: UNION[
			| !hasKey#1 ~> ' '];
		25: UNION[
			| !hasKey#1 ~> 'c'];
		26: UNION[
			| !hasKey#1 ~> 'u'];
		27: UNION[
			| !hasKey#1 ~> 'r'];
		28: UNION[
			| !hasKey#1 ~> 'r'];
		29: UNION[
			| !hasKey#1 ~> 'e'];
		2: UNION[
			| !hasKey#1 ~> 't'];
		30: UNION[
			| !hasKey#1 ~> 'n'];
		31: UNION[
			| !hasKey#1 ~> 't'];
		32: UNION[
			| !hasKey#1 ~> 'l'];
		33: UNION[
			| !hasKey#1 ~> 'y'];
		34: UNION[
			| !hasKey#1 ~> ' '];
		35: UNION[
			| !hasKey#1 ~> 'n'];
		36: UNION[
			| !hasKey#1 ~> 'o'];
		37: UNION[
			| !hasKey#1 ~> 't'];
		38: UNION[
			| !hasKey#1 ~> ' '];
		39: UNION[
			| !hasKey#1 ~> 's'];
		3: UNION[
			| !hasKey#1 ~> 't'];
		40: UNION[
			| !hasKey#1 ~> 'u'];
		41: UNION[
			| !hasKey#1 ~> 'p'];
		42: UNION[
			| !hasKey#1 ~> 'p'];
		43: UNION[
			| !hasKey#1 ~> 'o'];
		44: UNION[
			| !hasKey#1 ~> 'r'];
		45: UNION[
			| !hasKey#1 ~> 't'];
		46: UNION[
			| !hasKey#1 ~> 'e'];
		47: UNION[
			| !hasKey#1 ~> 'd'];
		48: UNION[
			| !hasKey#1 ~> '!'];
		49: UNION[
			| !hasKey#1 ~> '\000'];
		4: UNION[
			| !hasKey#1 ~> 'i'];
		5: UNION[
			| !hasKey#1 ~> 'n'];
		6: UNION[
			| !hasKey#1 ~> 'g'];
		7: UNION[
			| !hasKey#1 ~> ' '];
		8: UNION[
			| !hasKey#1 ~> 'r'];
		9: UNION[
			| !hasKey#1 ~> 'e'];
		 ... UNION[
	| !hasKey#1 ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 ~> 49]]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !hasKey#1 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !hasKey#1 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !hasKey#1 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !hasKey#1 ~> null]]
7 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'C'];
		10: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'r'];
		11: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'i'];
		12: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		13: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'l'];
		14: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'i'];
		15: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'z'];
		16: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		17: UNION[
			| !hasKey#1 & !hasKey#11 ~> 't'];
		18: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'i'];
		19: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'o'];
		1: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'L'];
		20: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'n'];
		21: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'M'];
		22: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		23: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'n'];
		24: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		25: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'g'];
		26: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		27: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'r'];
		28: UNION[
			| !hasKey#1 & !hasKey#11 ~> '_'];
		29: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'R'];
		2: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'R'];
		30: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		31: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		32: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'l'];
		33: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'T'];
		34: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'y'];
		35: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'p'];
		36: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		37: UNION[
			| !hasKey#1 & !hasKey#11 ~> '\000'];
		3: UNION[
			| !hasKey#1 & !hasKey#11 ~> '_'];
		4: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'S'];
		5: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'a'];
		6: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'f'];
		7: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		8: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'S'];
		9: UNION[
			| !hasKey#1 & !hasKey#11 ~> 'e'];
		 ... UNION[
	| !hasKey#1 & !hasKey#11 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 & !hasKey#11 ~> 37]]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> 32767
		| hasKey#1 | hasKey#4 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> 256
		| hasKey#1 | hasKey#4 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> 1024
		| hasKey#1 | hasKey#4 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> 255
		| hasKey#1 | hasKey#4 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> System.Environment.isUserNonInteractive & hasKey#1 | System.Environment.isUserNonInteractive & hasKey#4
	| System.Environment.m_os ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> null
		| hasKey#1 | hasKey#4 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> null
		| hasKey#1 | hasKey#4 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#1 & !hasKey#4 ~> null
			| hasKey#1 | hasKey#4 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> System.Environment.s_CheckedOSWin8OrAbove & hasKey#1 | System.Environment.s_CheckedOSWin8OrAbove & hasKey#4
	| System.Environment.s_CheckedWinRT ~> System.Environment.s_CheckedWinRT & hasKey#1 | System.Environment.s_CheckedWinRT & hasKey#4
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !hasKey#1 & !hasKey#4 ~> null
		| hasKey#1 | hasKey#4 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> System.Environment.s_IsWindows8OrAbove & hasKey#1 | System.Environment.s_IsWindows8OrAbove & hasKey#4
	| System.Environment.s_WinRTSupported ~> System.Environment.s_WinRTSupported & hasKey#1 | System.Environment.s_WinRTSupported & hasKey#4]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !hasKey#1 & !hasKey#6 ~> -532462766
		| hasKey#1 | hasKey#6 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !hasKey#1 & !hasKey#6 ~> (HeapRef 5)
		| hasKey#1 | hasKey#6 ~> (HeapRef System.Exception.s_EDILock)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#1 & !hasKey#8 ~> null
			| hasKey#1 | hasKey#8 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !hasKey#1 & !hasKey#11 ~> (HeapRef 7)
		| hasKey#1 | hasKey#11 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#1 & !hasKey#10 ~> null
			| hasKey#1 | hasKey#10 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.ClassesSimpleException ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException[]
VSharp.CSharpUtils.Tests.ClassesSimpleException1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleException1[
	| VSharp.CSharpUtils.Tests.ClassesSimpleException1.field0 ~> UNION[
		| !hasKey#1 ~> -24
		| hasKey#1 ~> VSharp.CSharpUtils.Tests.ClassesSimpleException1.field0]
	| VSharp.CSharpUtils.Tests.ClassesSimpleException1.field1 ~> UNION[
		| !hasKey#1 ~> 0
		| hasKey#1 ~> VSharp.CSharpUtils.Tests.ClassesSimpleException1.field1]]
VSharp.CSharpUtils.Tests.ClassesSimpleExceptionInitializer ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimpleExceptionInitializer[]
METHOD: VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess+SimpleStruct VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.get_StructProperty()
RESULT: STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess+SimpleStruct[]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess[]
METHOD: System.Void VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.set_StructProperty(VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess+SimpleStruct)
RESULT: <VOID>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess[
	| VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess._structProperty ~> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess+SimpleStruct[]]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.get_Property()
RESULT: UNION[
	| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) ~> this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField.System.Collections.Generic.List`1._size
	| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> <ERROR: (HeapRef 2)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [| ... UNION[
	| !hasKey#1 ~> 0] ... |]
2 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> -2147467261]
	| System.Exception._className ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._data ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> (HeapRef 4)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> (HeapRef 6)]
	| System.Exception._source ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 0]]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'A'];
		10: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'f'];
		11: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		12: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		13: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		14: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'n'];
		15: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'c'];
		16: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		17: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'E'];
		18: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'x'];
		19: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'c'];
		1: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		20: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		21: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'p'];
		22: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 't'];
		23: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'i'];
		24: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'o'];
		25: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'n'];
		26: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> '\000'];
		2: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'g'];
		3: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> '_'];
		4: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'N'];
		5: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'u'];
		6: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'l'];
		7: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'l'];
		8: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'R'];
		9: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		 ... UNION[
	| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 27] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 26]]
4 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'G'];
		10: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 's'];
		11: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'o'];
		12: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'u'];
		13: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		14: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'c'];
		15: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		16: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> ' '];
		17: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 's'];
		18: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 't'];
		19: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		1: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		20: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'i'];
		21: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'n'];
		22: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'g'];
		23: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 's'];
		24: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> ' '];
		25: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'c'];
		26: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'u'];
		27: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		28: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		29: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		2: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 't'];
		30: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'n'];
		31: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 't'];
		32: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'l'];
		33: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'y'];
		34: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> ' '];
		35: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'n'];
		36: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'o'];
		37: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 't'];
		38: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> ' '];
		39: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 's'];
		3: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 't'];
		40: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'u'];
		41: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'p'];
		42: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'p'];
		43: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'o'];
		44: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		45: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 't'];
		46: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		47: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'd'];
		48: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> '!'];
		49: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> '\000'];
		4: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'i'];
		5: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'n'];
		6: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'g'];
		7: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> ' '];
		8: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		9: UNION[
			| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		 ... UNION[
	| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 49]]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]]
7 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 37]]
this ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess[]
this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ==> STRUCT System.Collections.Generic.List`1[System.Boolean][]
---------- s1 = ----------
System.Collections.Generic.List`1 ==> STRUCT System.Collections.Generic.List`1[System.Boolean][
	| System.Collections.Generic.List`1._defaultCapacity ~> UNION[
		| !hasKey#1 ~> 4
		| hasKey#1 ~> System.Collections.Generic.List`1._defaultCapacity]
	| System.Collections.Generic.List`1._emptyArray ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Collections.Generic.List`1._emptyArray)]]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#3 ~> System.Environment.MaxEnvVariableValueLength
		| !hasKey#3 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 32767]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#3 ~> System.Environment.MaxMachineNameLength
		| !hasKey#3 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 256]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#3 ~> System.Environment.MaxSystemEnvVariableLength
		| !hasKey#3 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 1024]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#3 ~> System.Environment.MaxUserEnvVariableLength
		| !hasKey#3 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> 255]
	| System.Environment.isUserNonInteractive ~> !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) & System.Environment.isUserNonInteractive | System.Environment.isUserNonInteractive & hasKey#3
	| System.Environment.m_os ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#3 ~> (HeapRef System.Environment.m_os)
		| !hasKey#3 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#3 ~> (HeapRef System.Environment.m_resHelper)
		| !hasKey#3 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#3 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)
			| !hasKey#3 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) & System.Environment.s_CheckedOSWin8OrAbove | System.Environment.s_CheckedOSWin8OrAbove & hasKey#3
	| System.Environment.s_CheckedWinRT ~> !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) & System.Environment.s_CheckedWinRT | System.Environment.s_CheckedWinRT & hasKey#3
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#3 ~> (HeapRef System.Environment.s_InternalSyncObject)
		| !hasKey#3 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) & System.Environment.s_IsWindows8OrAbove | System.Environment.s_IsWindows8OrAbove & hasKey#3
	| System.Environment.s_WinRTSupported ~> !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) & System.Environment.s_WinRTSupported | System.Environment.s_WinRTSupported & hasKey#3]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#5 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#5 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> (HeapRef 5)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#7 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> (HeapRef 7)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField) | hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#9 & 0 == this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess[]
METHOD: System.Void VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.TestProperty1()
RESULT: <VOID>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess[
	| VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess.<SecretProperty>k__BackingField ~> (HeapRef 2)
	| VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess._structProperty ~> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess+SimpleStruct[
		| VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess+SimpleStruct.X ~> 0]]
2 ==> STRUCT System.Collections.Generic.List`1[System.Boolean][
	| System.Collections.Generic.List`1._items ~> UNION[
		| !hasKey#3 ~> (HeapRef 3)
		| hasKey#3 ~> (HeapRef System.Collections.Generic.List`1._emptyArray)]
	| System.Collections.Generic.List`1._size ~> 0
	| System.Collections.Generic.List`1._syncRoot ~> null
	| System.Collections.Generic.List`1._version ~> 0]
3 ==> [| ... UNION[
	| !hasKey#3 ~> 0] ... |]
---------- s1 = ----------
System.Collections.Generic.List`1 ==> STRUCT System.Collections.Generic.List`1[System.Boolean][
	| System.Collections.Generic.List`1._defaultCapacity ~> UNION[
		| !hasKey#3 ~> 4
		| hasKey#3 ~> System.Collections.Generic.List`1._defaultCapacity]
	| System.Collections.Generic.List`1._emptyArray ~> UNION[
		| !hasKey#3 ~> (HeapRef 3)
		| hasKey#3 ~> (HeapRef System.Collections.Generic.List`1._emptyArray)]]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess+SimpleStruct ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess+SimpleStruct[]
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccess[]
METHOD: VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify+SimpleStruct VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify.get_StructProperty()
RESULT: (HeapRef this.VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify.<StructProperty>k__BackingField)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify[]
METHOD: System.Void VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify.set_StructProperty(VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify+SimpleStruct)
RESULT: <VOID>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify[
	| VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify.<StructProperty>k__BackingField ~> (HeapRef value)]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify.TestProperty1(System.Int32)
RESULT: anyVarName
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify[
	| VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify.<StructProperty>k__BackingField ~> (HeapRef 2)]
2 ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify+SimpleStruct[
	| VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify+SimpleStruct.X ~> anyVarName]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify+SimpleStruct ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify+SimpleStruct[]
VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify ==> STRUCT VSharp.CSharpUtils.Tests.ClassesSimplePropertyAccessModify[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Conditional.IsMaxEven(System.Int32, System.Int32, System.Int32)
RESULT: !(2 * x < 2 * y) & !(2 * y < z) | !(2 * x < z) & 2 * y < z | !(2 * y < z) & (!(2 * y < z) & 2 * x < 2 * y | 2 * x < z & 2 * y < z) | (!(2 * y < z) & 2 * x < 2 * y | 2 * x < z & 2 * y < z) & 0 == z % 2
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 1];
	10: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 10000000000];
	11: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 100000000000];
	12: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 1000000000000];
	13: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 10000000000000];
	14: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 100000000000000];
	15: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 1E+15];
	1: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 10];
	2: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 100];
	3: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 1000];
	4: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 10000];
	5: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 100000];
	6: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 1000000];
	7: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 10000000];
	8: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 100000000];
	9: UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 1000000000];
	 ... UNION[
	| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 2.71828182845905
		| (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) & hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 3.14159265358979
		| (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) & hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 1E+16
		| (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) & hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> 15
		| (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) & hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 & (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) ~> (HeapRef 1)
		| (!(2 * y < z) & 2 * x < 2 * y | (!(2 * x < 2 * y) | 2 * y < z) & (!(2 * x < z) | !(2 * y < z)) | 2 * x < z & 2 * y < z) & hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.Always18()
RESULT: 18
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.FirstEvenGreaterThen7()
RESULT: 8
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Conditional.TestSwitch(System.Char)
RESULT: UNION[
	| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c ~> <ERROR: (HeapRef 1)>
	| !('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c | 'R' == c ~> (!('R' == c) & !('T' == c) | 'A' == c & 'R' == c | 'A' == c & 'T' == c | 'B' == c & 'R' == c | 'B' == c & 'T' == c | 'C' == c & 'R' == c | 'C' == c & 'T' == c | 'D' == c) & (!('R' == c) & !('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c | ('R' == c | 'T' == c) & <VOID> < 5)]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.ArgumentException[
	| System.ArgumentException.m_paramName ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._HResult ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> -2147024809]
	| System.Exception._className ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._data ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._innerException ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#7 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) & hasKey#7 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> (HeapRef 2)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> (HeapRef 4)]
	| System.Exception._source ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Exception._xcode ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 0]]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'H'];
		10: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> ' '];
		11: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'n'];
		12: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'u'];
		13: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'm'];
		14: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'b'];
		15: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'e'];
		16: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'r'];
		17: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> '!'];
		18: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> '\000'];
		1: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'e'];
		2: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'y'];
		3: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> '!'];
		4: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> ' '];
		5: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'G'];
		6: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'i'];
		7: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'm'];
		8: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'm'];
		9: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'e'];
		 ... UNION[
	| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 19] ... |]
	| System.String.m_StringLength ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 18]]
3 ==> STRUCT System.Object[]
4 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null]]
5 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'C'];
		10: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'r'];
		11: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'i'];
		12: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'a'];
		13: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'l'];
		14: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'i'];
		15: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'z'];
		16: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'a'];
		17: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 't'];
		18: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'i'];
		19: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'o'];
		1: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'L'];
		20: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'n'];
		21: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'M'];
		22: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'a'];
		23: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'n'];
		24: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'a'];
		25: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'g'];
		26: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'e'];
		27: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'r'];
		28: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> '_'];
		29: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'R'];
		2: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'R'];
		30: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'e'];
		31: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'a'];
		32: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'l'];
		33: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'T'];
		34: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'y'];
		35: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'p'];
		36: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'e'];
		37: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> '\000'];
		3: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> '_'];
		4: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'S'];
		5: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'a'];
		6: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'f'];
		7: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'e'];
		8: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'S'];
		9: UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 'e'];
		 ... UNION[
	| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> 37]]
---------- s1 = ----------
System.ArgumentException ==> STRUCT System.ArgumentException[]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#3 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> -532462766
		| (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c | 'R' == c | hasKey#3) ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#3 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> (HeapRef 3)
		| (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c | 'R' == c | hasKey#3) ~> (HeapRef System.Exception.s_EDILock)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#5 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null
			| (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c | 'R' == c | hasKey#5) ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#8 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> (HeapRef 5)
		| (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c | 'R' == c | hasKey#8) ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & !('R' == c) & !hasKey#7 & 'T' == c & (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) ~> null
			| (!('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'R' == c | !('A' == c) & !('B' == c) & !('C' == c) & !('D' == c) & 'T' == c | (!('R' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c)) & (!('T' == c) | 'A' == c | 'B' == c | 'C' == c | 'D' == c | 'R' == c | hasKey#7) ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.ExceptionInCondition1(VSharp.CSharpUtils.Tests.Conditional+NewBool)
RESULT: UNION[
	| !(0 == nb) & !nb.VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> 56
	| !(0 == nb) & nb.VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> 42
	| 0 == nb ~> <ERROR: (HeapRef 1)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| 0 == nb ~> -2147467261]
	| System.Exception._className ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._data ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == nb ~> null
			| 0 == nb & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == nb ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == nb ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == nb ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == nb ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == nb ~> 0]]]
10 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == nb ~> 'A'];
		10: UNION[
			| 0 == nb ~> 'f'];
		11: UNION[
			| 0 == nb ~> 'e'];
		12: UNION[
			| 0 == nb ~> 'r'];
		13: UNION[
			| 0 == nb ~> 'e'];
		14: UNION[
			| 0 == nb ~> 'n'];
		15: UNION[
			| 0 == nb ~> 'c'];
		16: UNION[
			| 0 == nb ~> 'e'];
		17: UNION[
			| 0 == nb ~> 'E'];
		18: UNION[
			| 0 == nb ~> 'x'];
		19: UNION[
			| 0 == nb ~> 'c'];
		1: UNION[
			| 0 == nb ~> 'r'];
		20: UNION[
			| 0 == nb ~> 'e'];
		21: UNION[
			| 0 == nb ~> 'p'];
		22: UNION[
			| 0 == nb ~> 't'];
		23: UNION[
			| 0 == nb ~> 'i'];
		24: UNION[
			| 0 == nb ~> 'o'];
		25: UNION[
			| 0 == nb ~> 'n'];
		26: UNION[
			| 0 == nb ~> '\000'];
		2: UNION[
			| 0 == nb ~> 'g'];
		3: UNION[
			| 0 == nb ~> '_'];
		4: UNION[
			| 0 == nb ~> 'N'];
		5: UNION[
			| 0 == nb ~> 'u'];
		6: UNION[
			| 0 == nb ~> 'l'];
		7: UNION[
			| 0 == nb ~> 'l'];
		8: UNION[
			| 0 == nb ~> 'R'];
		9: UNION[
			| 0 == nb ~> 'e'];
		 ... UNION[
	| 0 == nb ~> 27] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == nb ~> 26]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == nb ~> 'G'];
		10: UNION[
			| 0 == nb ~> 's'];
		11: UNION[
			| 0 == nb ~> 'o'];
		12: UNION[
			| 0 == nb ~> 'u'];
		13: UNION[
			| 0 == nb ~> 'r'];
		14: UNION[
			| 0 == nb ~> 'c'];
		15: UNION[
			| 0 == nb ~> 'e'];
		16: UNION[
			| 0 == nb ~> ' '];
		17: UNION[
			| 0 == nb ~> 's'];
		18: UNION[
			| 0 == nb ~> 't'];
		19: UNION[
			| 0 == nb ~> 'r'];
		1: UNION[
			| 0 == nb ~> 'e'];
		20: UNION[
			| 0 == nb ~> 'i'];
		21: UNION[
			| 0 == nb ~> 'n'];
		22: UNION[
			| 0 == nb ~> 'g'];
		23: UNION[
			| 0 == nb ~> 's'];
		24: UNION[
			| 0 == nb ~> ' '];
		25: UNION[
			| 0 == nb ~> 'c'];
		26: UNION[
			| 0 == nb ~> 'u'];
		27: UNION[
			| 0 == nb ~> 'r'];
		28: UNION[
			| 0 == nb ~> 'r'];
		29: UNION[
			| 0 == nb ~> 'e'];
		2: UNION[
			| 0 == nb ~> 't'];
		30: UNION[
			| 0 == nb ~> 'n'];
		31: UNION[
			| 0 == nb ~> 't'];
		32: UNION[
			| 0 == nb ~> 'l'];
		33: UNION[
			| 0 == nb ~> 'y'];
		34: UNION[
			| 0 == nb ~> ' '];
		35: UNION[
			| 0 == nb ~> 'n'];
		36: UNION[
			| 0 == nb ~> 'o'];
		37: UNION[
			| 0 == nb ~> 't'];
		38: UNION[
			| 0 == nb ~> ' '];
		39: UNION[
			| 0 == nb ~> 's'];
		3: UNION[
			| 0 == nb ~> 't'];
		40: UNION[
			| 0 == nb ~> 'u'];
		41: UNION[
			| 0 == nb ~> 'p'];
		42: UNION[
			| 0 == nb ~> 'p'];
		43: UNION[
			| 0 == nb ~> 'o'];
		44: UNION[
			| 0 == nb ~> 'r'];
		45: UNION[
			| 0 == nb ~> 't'];
		46: UNION[
			| 0 == nb ~> 'e'];
		47: UNION[
			| 0 == nb ~> 'd'];
		48: UNION[
			| 0 == nb ~> '!'];
		49: UNION[
			| 0 == nb ~> '\000'];
		4: UNION[
			| 0 == nb ~> 'i'];
		5: UNION[
			| 0 == nb ~> 'n'];
		6: UNION[
			| 0 == nb ~> 'g'];
		7: UNION[
			| 0 == nb ~> ' '];
		8: UNION[
			| 0 == nb ~> 'r'];
		9: UNION[
			| 0 == nb ~> 'e'];
		 ... UNION[
	| 0 == nb ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == nb ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == nb ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == nb ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == nb ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == nb ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == nb ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == nb ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == nb ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == nb ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == nb ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == nb ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == nb ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == nb ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == nb ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == nb ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == nb ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == nb ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == nb ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == nb ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == nb ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == nb ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == nb ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == nb ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == nb ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == nb ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == nb ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == nb ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == nb ~> 37]]
7 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[]
	| System.Exception._className ~> UNION[]
	| System.Exception._data ~> UNION[]
	| System.Exception._dynamicMethods ~> UNION[]
	| System.Exception._exceptionMethod ~> UNION[]
	| System.Exception._exceptionMethodString ~> UNION[]
	| System.Exception._helpURL ~> UNION[]
	| System.Exception._innerException ~> UNION[]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[]]
	| System.Exception._message ~> UNION[]
	| System.Exception._remoteStackIndex ~> UNION[]
	| System.Exception._remoteStackTraceString ~> UNION[]
	| System.Exception._safeSerializationManager ~> UNION[]
	| System.Exception._source ~> UNION[]
	| System.Exception._stackTrace ~> UNION[]
	| System.Exception._stackTraceString ~> UNION[]
	| System.Exception._watsonBuckets ~> UNION[]
	| System.Exception._xcode ~> UNION[]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[]]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[];
		10: UNION[];
		11: UNION[];
		12: UNION[];
		13: UNION[];
		14: UNION[];
		15: UNION[];
		16: UNION[];
		17: UNION[];
		18: UNION[];
		19: UNION[];
		1: UNION[];
		20: UNION[];
		21: UNION[];
		22: UNION[];
		23: UNION[];
		24: UNION[];
		25: UNION[];
		26: UNION[];
		2: UNION[];
		3: UNION[];
		4: UNION[];
		5: UNION[];
		6: UNION[];
		7: UNION[];
		8: UNION[];
		9: UNION[];
		 ... UNION[] ... |]
	| System.String.m_StringLength ~> UNION[]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[];
		10: UNION[];
		11: UNION[];
		12: UNION[];
		13: UNION[];
		14: UNION[];
		15: UNION[];
		16: UNION[];
		17: UNION[];
		18: UNION[];
		19: UNION[];
		1: UNION[];
		20: UNION[];
		21: UNION[];
		22: UNION[];
		23: UNION[];
		24: UNION[];
		25: UNION[];
		26: UNION[];
		27: UNION[];
		28: UNION[];
		29: UNION[];
		2: UNION[];
		30: UNION[];
		31: UNION[];
		32: UNION[];
		33: UNION[];
		34: UNION[];
		35: UNION[];
		36: UNION[];
		37: UNION[];
		38: UNION[];
		39: UNION[];
		3: UNION[];
		40: UNION[];
		41: UNION[];
		42: UNION[];
		43: UNION[];
		44: UNION[];
		45: UNION[];
		46: UNION[];
		47: UNION[];
		48: UNION[];
		49: UNION[];
		4: UNION[];
		5: UNION[];
		6: UNION[];
		7: UNION[];
		8: UNION[];
		9: UNION[];
		 ... UNION[] ... |]
	| System.String.m_StringLength ~> UNION[]]
nb ==> STRUCT TypeVariable1{VSharp.CSharpUtils.Tests.Conditional+NewBool}[]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == nb) | hasKey#3 ~> System.Environment.MaxEnvVariableValueLength
		| !hasKey#3 & 0 == nb ~> 32767]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == nb) | hasKey#3 ~> System.Environment.MaxMachineNameLength
		| !hasKey#3 & 0 == nb ~> 256]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == nb) | hasKey#3 ~> System.Environment.MaxSystemEnvVariableLength
		| !hasKey#3 & 0 == nb ~> 1024]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == nb) | hasKey#3 ~> System.Environment.MaxUserEnvVariableLength
		| !hasKey#3 & 0 == nb ~> 255]
	| System.Environment.isUserNonInteractive ~> !(0 == nb) & System.Environment.isUserNonInteractive | System.Environment.isUserNonInteractive & hasKey#3
	| System.Environment.m_os ~> UNION[
		| !(0 == nb) | hasKey#3 ~> (HeapRef System.Environment.m_os)
		| !hasKey#3 & 0 == nb ~> null]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == nb) | hasKey#3 ~> (HeapRef System.Environment.m_resHelper)
		| !hasKey#3 & 0 == nb ~> null]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) | hasKey#3 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)
			| !hasKey#3 & 0 == nb ~> null]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == nb) & System.Environment.s_CheckedOSWin8OrAbove | System.Environment.s_CheckedOSWin8OrAbove & hasKey#3
	| System.Environment.s_CheckedWinRT ~> !(0 == nb) & System.Environment.s_CheckedWinRT | System.Environment.s_CheckedWinRT & hasKey#3
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == nb) | hasKey#3 ~> (HeapRef System.Environment.s_InternalSyncObject)
		| !hasKey#3 & 0 == nb ~> null]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == nb) & System.Environment.s_IsWindows8OrAbove | System.Environment.s_IsWindows8OrAbove & hasKey#3
	| System.Environment.s_WinRTSupported ~> !(0 == nb) & System.Environment.s_WinRTSupported | System.Environment.s_WinRTSupported & hasKey#3]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == nb) | hasKey#5 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#5 & 0 == nb ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == nb) | hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == nb ~> (HeapRef 4)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) | hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#7 & 0 == nb ~> null]]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == nb) | hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == nb ~> (HeapRef 6)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == nb) | hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#9 & 0 == nb ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Conditional+NewBool ==> STRUCT VSharp.CSharpUtils.Tests.Conditional+NewBool[]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.ExceptionInCondition2(VSharp.CSharpUtils.Tests.Conditional+NewBool)
RESULT: UNION[
	| !(0 == nb) & !nb.VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> 56
	| !(0 == nb) & nb.VSharp.CSharpUtils.Tests.Conditional+NewBool.BoolValue ~> 42
	| 0 == nb ~> <ERROR: (HeapRef 1)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| 0 == nb ~> -2147467261]
	| System.Exception._className ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._data ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == nb ~> null
			| 0 == nb & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == nb ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == nb ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == nb ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == nb ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == nb ~> 0]]]
10 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == nb ~> 'A'];
		10: UNION[
			| 0 == nb ~> 'f'];
		11: UNION[
			| 0 == nb ~> 'e'];
		12: UNION[
			| 0 == nb ~> 'r'];
		13: UNION[
			| 0 == nb ~> 'e'];
		14: UNION[
			| 0 == nb ~> 'n'];
		15: UNION[
			| 0 == nb ~> 'c'];
		16: UNION[
			| 0 == nb ~> 'e'];
		17: UNION[
			| 0 == nb ~> 'E'];
		18: UNION[
			| 0 == nb ~> 'x'];
		19: UNION[
			| 0 == nb ~> 'c'];
		1: UNION[
			| 0 == nb ~> 'r'];
		20: UNION[
			| 0 == nb ~> 'e'];
		21: UNION[
			| 0 == nb ~> 'p'];
		22: UNION[
			| 0 == nb ~> 't'];
		23: UNION[
			| 0 == nb ~> 'i'];
		24: UNION[
			| 0 == nb ~> 'o'];
		25: UNION[
			| 0 == nb ~> 'n'];
		26: UNION[
			| 0 == nb ~> '\000'];
		2: UNION[
			| 0 == nb ~> 'g'];
		3: UNION[
			| 0 == nb ~> '_'];
		4: UNION[
			| 0 == nb ~> 'N'];
		5: UNION[
			| 0 == nb ~> 'u'];
		6: UNION[
			| 0 == nb ~> 'l'];
		7: UNION[
			| 0 == nb ~> 'l'];
		8: UNION[
			| 0 == nb ~> 'R'];
		9: UNION[
			| 0 == nb ~> 'e'];
		 ... UNION[
	| 0 == nb ~> 27] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == nb ~> 26]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == nb ~> 'G'];
		10: UNION[
			| 0 == nb ~> 's'];
		11: UNION[
			| 0 == nb ~> 'o'];
		12: UNION[
			| 0 == nb ~> 'u'];
		13: UNION[
			| 0 == nb ~> 'r'];
		14: UNION[
			| 0 == nb ~> 'c'];
		15: UNION[
			| 0 == nb ~> 'e'];
		16: UNION[
			| 0 == nb ~> ' '];
		17: UNION[
			| 0 == nb ~> 's'];
		18: UNION[
			| 0 == nb ~> 't'];
		19: UNION[
			| 0 == nb ~> 'r'];
		1: UNION[
			| 0 == nb ~> 'e'];
		20: UNION[
			| 0 == nb ~> 'i'];
		21: UNION[
			| 0 == nb ~> 'n'];
		22: UNION[
			| 0 == nb ~> 'g'];
		23: UNION[
			| 0 == nb ~> 's'];
		24: UNION[
			| 0 == nb ~> ' '];
		25: UNION[
			| 0 == nb ~> 'c'];
		26: UNION[
			| 0 == nb ~> 'u'];
		27: UNION[
			| 0 == nb ~> 'r'];
		28: UNION[
			| 0 == nb ~> 'r'];
		29: UNION[
			| 0 == nb ~> 'e'];
		2: UNION[
			| 0 == nb ~> 't'];
		30: UNION[
			| 0 == nb ~> 'n'];
		31: UNION[
			| 0 == nb ~> 't'];
		32: UNION[
			| 0 == nb ~> 'l'];
		33: UNION[
			| 0 == nb ~> 'y'];
		34: UNION[
			| 0 == nb ~> ' '];
		35: UNION[
			| 0 == nb ~> 'n'];
		36: UNION[
			| 0 == nb ~> 'o'];
		37: UNION[
			| 0 == nb ~> 't'];
		38: UNION[
			| 0 == nb ~> ' '];
		39: UNION[
			| 0 == nb ~> 's'];
		3: UNION[
			| 0 == nb ~> 't'];
		40: UNION[
			| 0 == nb ~> 'u'];
		41: UNION[
			| 0 == nb ~> 'p'];
		42: UNION[
			| 0 == nb ~> 'p'];
		43: UNION[
			| 0 == nb ~> 'o'];
		44: UNION[
			| 0 == nb ~> 'r'];
		45: UNION[
			| 0 == nb ~> 't'];
		46: UNION[
			| 0 == nb ~> 'e'];
		47: UNION[
			| 0 == nb ~> 'd'];
		48: UNION[
			| 0 == nb ~> '!'];
		49: UNION[
			| 0 == nb ~> '\000'];
		4: UNION[
			| 0 == nb ~> 'i'];
		5: UNION[
			| 0 == nb ~> 'n'];
		6: UNION[
			| 0 == nb ~> 'g'];
		7: UNION[
			| 0 == nb ~> ' '];
		8: UNION[
			| 0 == nb ~> 'r'];
		9: UNION[
			| 0 == nb ~> 'e'];
		 ... UNION[
	| 0 == nb ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == nb ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == nb ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == nb ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == nb ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == nb ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == nb ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == nb ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == nb ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == nb ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == nb ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == nb ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == nb ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == nb ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == nb ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == nb ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == nb ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == nb ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == nb ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == nb ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == nb ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == nb ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == nb ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == nb ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == nb ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == nb ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == nb ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == nb ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == nb ~> 37]]
7 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[]
	| System.Exception._className ~> UNION[]
	| System.Exception._data ~> UNION[]
	| System.Exception._dynamicMethods ~> UNION[]
	| System.Exception._exceptionMethod ~> UNION[]
	| System.Exception._exceptionMethodString ~> UNION[]
	| System.Exception._helpURL ~> UNION[]
	| System.Exception._innerException ~> UNION[]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[]]
	| System.Exception._message ~> UNION[]
	| System.Exception._remoteStackIndex ~> UNION[]
	| System.Exception._remoteStackTraceString ~> UNION[]
	| System.Exception._safeSerializationManager ~> UNION[]
	| System.Exception._source ~> UNION[]
	| System.Exception._stackTrace ~> UNION[]
	| System.Exception._stackTraceString ~> UNION[]
	| System.Exception._watsonBuckets ~> UNION[]
	| System.Exception._xcode ~> UNION[]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[]]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[];
		10: UNION[];
		11: UNION[];
		12: UNION[];
		13: UNION[];
		14: UNION[];
		15: UNION[];
		16: UNION[];
		17: UNION[];
		18: UNION[];
		19: UNION[];
		1: UNION[];
		20: UNION[];
		21: UNION[];
		22: UNION[];
		23: UNION[];
		24: UNION[];
		25: UNION[];
		26: UNION[];
		2: UNION[];
		3: UNION[];
		4: UNION[];
		5: UNION[];
		6: UNION[];
		7: UNION[];
		8: UNION[];
		9: UNION[];
		 ... UNION[] ... |]
	| System.String.m_StringLength ~> UNION[]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[];
		10: UNION[];
		11: UNION[];
		12: UNION[];
		13: UNION[];
		14: UNION[];
		15: UNION[];
		16: UNION[];
		17: UNION[];
		18: UNION[];
		19: UNION[];
		1: UNION[];
		20: UNION[];
		21: UNION[];
		22: UNION[];
		23: UNION[];
		24: UNION[];
		25: UNION[];
		26: UNION[];
		27: UNION[];
		28: UNION[];
		29: UNION[];
		2: UNION[];
		30: UNION[];
		31: UNION[];
		32: UNION[];
		33: UNION[];
		34: UNION[];
		35: UNION[];
		36: UNION[];
		37: UNION[];
		38: UNION[];
		39: UNION[];
		3: UNION[];
		40: UNION[];
		41: UNION[];
		42: UNION[];
		43: UNION[];
		44: UNION[];
		45: UNION[];
		46: UNION[];
		47: UNION[];
		48: UNION[];
		49: UNION[];
		4: UNION[];
		5: UNION[];
		6: UNION[];
		7: UNION[];
		8: UNION[];
		9: UNION[];
		 ... UNION[] ... |]
	| System.String.m_StringLength ~> UNION[]]
nb ==> STRUCT TypeVariable1{VSharp.CSharpUtils.Tests.Conditional+NewBool}[]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == nb) | hasKey#3 ~> System.Environment.MaxEnvVariableValueLength
		| !hasKey#3 & 0 == nb ~> 32767]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == nb) | hasKey#3 ~> System.Environment.MaxMachineNameLength
		| !hasKey#3 & 0 == nb ~> 256]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == nb) | hasKey#3 ~> System.Environment.MaxSystemEnvVariableLength
		| !hasKey#3 & 0 == nb ~> 1024]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == nb) | hasKey#3 ~> System.Environment.MaxUserEnvVariableLength
		| !hasKey#3 & 0 == nb ~> 255]
	| System.Environment.isUserNonInteractive ~> !(0 == nb) & System.Environment.isUserNonInteractive | System.Environment.isUserNonInteractive & hasKey#3
	| System.Environment.m_os ~> UNION[
		| !(0 == nb) | hasKey#3 ~> (HeapRef System.Environment.m_os)
		| !hasKey#3 & 0 == nb ~> null]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == nb) | hasKey#3 ~> (HeapRef System.Environment.m_resHelper)
		| !hasKey#3 & 0 == nb ~> null]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) | hasKey#3 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)
			| !hasKey#3 & 0 == nb ~> null]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == nb) & System.Environment.s_CheckedOSWin8OrAbove | System.Environment.s_CheckedOSWin8OrAbove & hasKey#3
	| System.Environment.s_CheckedWinRT ~> !(0 == nb) & System.Environment.s_CheckedWinRT | System.Environment.s_CheckedWinRT & hasKey#3
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == nb) | hasKey#3 ~> (HeapRef System.Environment.s_InternalSyncObject)
		| !hasKey#3 & 0 == nb ~> null]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == nb) & System.Environment.s_IsWindows8OrAbove | System.Environment.s_IsWindows8OrAbove & hasKey#3
	| System.Environment.s_WinRTSupported ~> !(0 == nb) & System.Environment.s_WinRTSupported | System.Environment.s_WinRTSupported & hasKey#3]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == nb) | hasKey#5 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#5 & 0 == nb ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == nb) | hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == nb ~> (HeapRef 4)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) | hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#7 & 0 == nb ~> null]]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == nb) | hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == nb ~> (HeapRef 6)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == nb) | hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#9 & 0 == nb ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Conditional+NewBool ==> STRUCT VSharp.CSharpUtils.Tests.Conditional+NewBool[]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.ExceptionInCondition3(VSharp.CSharpUtils.Tests.Conditional+NewBool)
RESULT: <ERROR: UNION[
	| !(0 == nb) ~> (HeapRef 7)
	| 0 == nb ~> (HeapRef 1)]>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| 0 == nb ~> -2147467261]
	| System.Exception._className ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._data ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == nb ~> null
			| 0 == nb & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == nb ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == nb ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == nb ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == nb ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == nb ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == nb ~> 0]]]
10 ==> STRUCT System.Object[]
11 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == nb) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == nb) ~> null]]
12 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'C'];
		10: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'r'];
		11: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'i'];
		12: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'a'];
		13: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'l'];
		14: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'i'];
		15: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'z'];
		16: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'a'];
		17: UNION[
			| !(0 == nb) & !hasKey#19 ~> 't'];
		18: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'i'];
		19: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'o'];
		1: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'L'];
		20: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'n'];
		21: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'M'];
		22: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'a'];
		23: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'n'];
		24: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'a'];
		25: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'g'];
		26: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'e'];
		27: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'r'];
		28: UNION[
			| !(0 == nb) & !hasKey#19 ~> '_'];
		29: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'R'];
		2: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'R'];
		30: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'e'];
		31: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'a'];
		32: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'l'];
		33: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'T'];
		34: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'y'];
		35: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'p'];
		36: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'e'];
		37: UNION[
			| !(0 == nb) & !hasKey#19 ~> '\000'];
		3: UNION[
			| !(0 == nb) & !hasKey#19 ~> '_'];
		4: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'S'];
		5: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'a'];
		6: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'f'];
		7: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'e'];
		8: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'S'];
		9: UNION[
			| !(0 == nb) & !hasKey#19 ~> 'e'];
		 ... UNION[
	| !(0 == nb) & !hasKey#19 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == nb) & !hasKey#19 ~> 37]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == nb ~> 'A'];
		10: UNION[
			| 0 == nb ~> 'f'];
		11: UNION[
			| 0 == nb ~> 'e'];
		12: UNION[
			| 0 == nb ~> 'r'];
		13: UNION[
			| 0 == nb ~> 'e'];
		14: UNION[
			| 0 == nb ~> 'n'];
		15: UNION[
			| 0 == nb ~> 'c'];
		16: UNION[
			| 0 == nb ~> 'e'];
		17: UNION[
			| 0 == nb ~> 'E'];
		18: UNION[
			| 0 == nb ~> 'x'];
		19: UNION[
			| 0 == nb ~> 'c'];
		1: UNION[
			| 0 == nb ~> 'r'];
		20: UNION[
			| 0 == nb ~> 'e'];
		21: UNION[
			| 0 == nb ~> 'p'];
		22: UNION[
			| 0 == nb ~> 't'];
		23: UNION[
			| 0 == nb ~> 'i'];
		24: UNION[
			| 0 == nb ~> 'o'];
		25: UNION[
			| 0 == nb ~> 'n'];
		26: UNION[
			| 0 == nb ~> '\000'];
		2: UNION[
			| 0 == nb ~> 'g'];
		3: UNION[
			| 0 == nb ~> '_'];
		4: UNION[
			| 0 == nb ~> 'N'];
		5: UNION[
			| 0 == nb ~> 'u'];
		6: UNION[
			| 0 == nb ~> 'l'];
		7: UNION[
			| 0 == nb ~> 'l'];
		8: UNION[
			| 0 == nb ~> 'R'];
		9: UNION[
			| 0 == nb ~> 'e'];
		 ... UNION[
	| 0 == nb ~> 27] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == nb ~> 26]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == nb ~> 'G'];
		10: UNION[
			| 0 == nb ~> 's'];
		11: UNION[
			| 0 == nb ~> 'o'];
		12: UNION[
			| 0 == nb ~> 'u'];
		13: UNION[
			| 0 == nb ~> 'r'];
		14: UNION[
			| 0 == nb ~> 'c'];
		15: UNION[
			| 0 == nb ~> 'e'];
		16: UNION[
			| 0 == nb ~> ' '];
		17: UNION[
			| 0 == nb ~> 's'];
		18: UNION[
			| 0 == nb ~> 't'];
		19: UNION[
			| 0 == nb ~> 'r'];
		1: UNION[
			| 0 == nb ~> 'e'];
		20: UNION[
			| 0 == nb ~> 'i'];
		21: UNION[
			| 0 == nb ~> 'n'];
		22: UNION[
			| 0 == nb ~> 'g'];
		23: UNION[
			| 0 == nb ~> 's'];
		24: UNION[
			| 0 == nb ~> ' '];
		25: UNION[
			| 0 == nb ~> 'c'];
		26: UNION[
			| 0 == nb ~> 'u'];
		27: UNION[
			| 0 == nb ~> 'r'];
		28: UNION[
			| 0 == nb ~> 'r'];
		29: UNION[
			| 0 == nb ~> 'e'];
		2: UNION[
			| 0 == nb ~> 't'];
		30: UNION[
			| 0 == nb ~> 'n'];
		31: UNION[
			| 0 == nb ~> 't'];
		32: UNION[
			| 0 == nb ~> 'l'];
		33: UNION[
			| 0 == nb ~> 'y'];
		34: UNION[
			| 0 == nb ~> ' '];
		35: UNION[
			| 0 == nb ~> 'n'];
		36: UNION[
			| 0 == nb ~> 'o'];
		37: UNION[
			| 0 == nb ~> 't'];
		38: UNION[
			| 0 == nb ~> ' '];
		39: UNION[
			| 0 == nb ~> 's'];
		3: UNION[
			| 0 == nb ~> 't'];
		40: UNION[
			| 0 == nb ~> 'u'];
		41: UNION[
			| 0 == nb ~> 'p'];
		42: UNION[
			| 0 == nb ~> 'p'];
		43: UNION[
			| 0 == nb ~> 'o'];
		44: UNION[
			| 0 == nb ~> 'r'];
		45: UNION[
			| 0 == nb ~> 't'];
		46: UNION[
			| 0 == nb ~> 'e'];
		47: UNION[
			| 0 == nb ~> 'd'];
		48: UNION[
			| 0 == nb ~> '!'];
		49: UNION[
			| 0 == nb ~> '\000'];
		4: UNION[
			| 0 == nb ~> 'i'];
		5: UNION[
			| 0 == nb ~> 'n'];
		6: UNION[
			| 0 == nb ~> 'g'];
		7: UNION[
			| 0 == nb ~> ' '];
		8: UNION[
			| 0 == nb ~> 'r'];
		9: UNION[
			| 0 == nb ~> 'e'];
		 ... UNION[
	| 0 == nb ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == nb ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == nb ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == nb ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == nb ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == nb ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == nb ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == nb ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == nb ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == nb ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == nb ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == nb ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == nb ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == nb ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == nb ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == nb ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == nb ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == nb ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == nb ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == nb ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == nb ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == nb ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == nb ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == nb ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == nb ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == nb ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == nb ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == nb ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == nb ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == nb ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == nb ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == nb ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == nb ~> 37]]
7 ==> STRUCT System.NotImplementedException[
	| System.Exception._HResult ~> UNION[
		| !(0 == nb) ~> -2147467263]
	| System.Exception._className ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == nb) & !hasKey#18 ~> null
			| !(0 == nb) & hasKey#18 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == nb) ~> (HeapRef 9)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == nb) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == nb) ~> (HeapRef 11)]
	| System.Exception._source ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == nb) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == nb) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) ~> 0]]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == nb) ~> 'A'];
		10: UNION[
			| !(0 == nb) ~> 'l'];
		11: UNION[
			| !(0 == nb) ~> 'e'];
		12: UNION[
			| !(0 == nb) ~> 'm'];
		13: UNION[
			| !(0 == nb) ~> 'e'];
		14: UNION[
			| !(0 == nb) ~> 'n'];
		15: UNION[
			| !(0 == nb) ~> 't'];
		16: UNION[
			| !(0 == nb) ~> 'e'];
		17: UNION[
			| !(0 == nb) ~> 'd'];
		18: UNION[
			| !(0 == nb) ~> 'E'];
		19: UNION[
			| !(0 == nb) ~> 'x'];
		1: UNION[
			| !(0 == nb) ~> 'r'];
		20: UNION[
			| !(0 == nb) ~> 'c'];
		21: UNION[
			| !(0 == nb) ~> 'e'];
		22: UNION[
			| !(0 == nb) ~> 'p'];
		23: UNION[
			| !(0 == nb) ~> 't'];
		24: UNION[
			| !(0 == nb) ~> 'i'];
		25: UNION[
			| !(0 == nb) ~> 'o'];
		26: UNION[
			| !(0 == nb) ~> 'n'];
		27: UNION[
			| !(0 == nb) ~> '\000'];
		2: UNION[
			| !(0 == nb) ~> 'g'];
		3: UNION[
			| !(0 == nb) ~> '_'];
		4: UNION[
			| !(0 == nb) ~> 'N'];
		5: UNION[
			| !(0 == nb) ~> 'o'];
		6: UNION[
			| !(0 == nb) ~> 't'];
		7: UNION[
			| !(0 == nb) ~> 'I'];
		8: UNION[
			| !(0 == nb) ~> 'm'];
		9: UNION[
			| !(0 == nb) ~> 'p'];
		 ... UNION[
	| !(0 == nb) ~> 28] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == nb) ~> 27]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == nb) ~> 'G'];
		10: UNION[
			| !(0 == nb) ~> 's'];
		11: UNION[
			| !(0 == nb) ~> 'o'];
		12: UNION[
			| !(0 == nb) ~> 'u'];
		13: UNION[
			| !(0 == nb) ~> 'r'];
		14: UNION[
			| !(0 == nb) ~> 'c'];
		15: UNION[
			| !(0 == nb) ~> 'e'];
		16: UNION[
			| !(0 == nb) ~> ' '];
		17: UNION[
			| !(0 == nb) ~> 's'];
		18: UNION[
			| !(0 == nb) ~> 't'];
		19: UNION[
			| !(0 == nb) ~> 'r'];
		1: UNION[
			| !(0 == nb) ~> 'e'];
		20: UNION[
			| !(0 == nb) ~> 'i'];
		21: UNION[
			| !(0 == nb) ~> 'n'];
		22: UNION[
			| !(0 == nb) ~> 'g'];
		23: UNION[
			| !(0 == nb) ~> 's'];
		24: UNION[
			| !(0 == nb) ~> ' '];
		25: UNION[
			| !(0 == nb) ~> 'c'];
		26: UNION[
			| !(0 == nb) ~> 'u'];
		27: UNION[
			| !(0 == nb) ~> 'r'];
		28: UNION[
			| !(0 == nb) ~> 'r'];
		29: UNION[
			| !(0 == nb) ~> 'e'];
		2: UNION[
			| !(0 == nb) ~> 't'];
		30: UNION[
			| !(0 == nb) ~> 'n'];
		31: UNION[
			| !(0 == nb) ~> 't'];
		32: UNION[
			| !(0 == nb) ~> 'l'];
		33: UNION[
			| !(0 == nb) ~> 'y'];
		34: UNION[
			| !(0 == nb) ~> ' '];
		35: UNION[
			| !(0 == nb) ~> 'n'];
		36: UNION[
			| !(0 == nb) ~> 'o'];
		37: UNION[
			| !(0 == nb) ~> 't'];
		38: UNION[
			| !(0 == nb) ~> ' '];
		39: UNION[
			| !(0 == nb) ~> 's'];
		3: UNION[
			| !(0 == nb) ~> 't'];
		40: UNION[
			| !(0 == nb) ~> 'u'];
		41: UNION[
			| !(0 == nb) ~> 'p'];
		42: UNION[
			| !(0 == nb) ~> 'p'];
		43: UNION[
			| !(0 == nb) ~> 'o'];
		44: UNION[
			| !(0 == nb) ~> 'r'];
		45: UNION[
			| !(0 == nb) ~> 't'];
		46: UNION[
			| !(0 == nb) ~> 'e'];
		47: UNION[
			| !(0 == nb) ~> 'd'];
		48: UNION[
			| !(0 == nb) ~> '!'];
		49: UNION[
			| !(0 == nb) ~> '\000'];
		4: UNION[
			| !(0 == nb) ~> 'i'];
		5: UNION[
			| !(0 == nb) ~> 'n'];
		6: UNION[
			| !(0 == nb) ~> 'g'];
		7: UNION[
			| !(0 == nb) ~> ' '];
		8: UNION[
			| !(0 == nb) ~> 'r'];
		9: UNION[
			| !(0 == nb) ~> 'e'];
		 ... UNION[
	| !(0 == nb) ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == nb) ~> 49]]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == nb) & !hasKey#12 | !hasKey#3 & 0 == nb ~> 32767
		| !(0 == nb) & hasKey#12 | 0 == nb & hasKey#3 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == nb) & !hasKey#12 | !hasKey#3 & 0 == nb ~> 256
		| !(0 == nb) & hasKey#12 | 0 == nb & hasKey#3 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == nb) & !hasKey#12 | !hasKey#3 & 0 == nb ~> 1024
		| !(0 == nb) & hasKey#12 | 0 == nb & hasKey#3 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == nb) & !hasKey#12 | !hasKey#3 & 0 == nb ~> 255
		| !(0 == nb) & hasKey#12 | 0 == nb & hasKey#3 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> !(0 == nb) & System.Environment.isUserNonInteractive & hasKey#12 | 0 == nb & System.Environment.isUserNonInteractive & hasKey#3
	| System.Environment.m_os ~> UNION[
		| !(0 == nb) & !hasKey#12 | !hasKey#3 & 0 == nb ~> null
		| !(0 == nb) & hasKey#12 | 0 == nb & hasKey#3 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == nb) & !hasKey#12 | !hasKey#3 & 0 == nb ~> null
		| !(0 == nb) & hasKey#12 | 0 == nb & hasKey#3 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) & !hasKey#12 | !hasKey#3 & 0 == nb ~> null
			| !(0 == nb) & hasKey#12 | 0 == nb & hasKey#3 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == nb) & System.Environment.s_CheckedOSWin8OrAbove & hasKey#12 | 0 == nb & System.Environment.s_CheckedOSWin8OrAbove & hasKey#3
	| System.Environment.s_CheckedWinRT ~> !(0 == nb) & System.Environment.s_CheckedWinRT & hasKey#12 | 0 == nb & System.Environment.s_CheckedWinRT & hasKey#3
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == nb) & !hasKey#12 | !hasKey#3 & 0 == nb ~> null
		| !(0 == nb) & hasKey#12 | 0 == nb & hasKey#3 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == nb) & System.Environment.s_IsWindows8OrAbove & hasKey#12 | 0 == nb & System.Environment.s_IsWindows8OrAbove & hasKey#3
	| System.Environment.s_WinRTSupported ~> !(0 == nb) & System.Environment.s_WinRTSupported & hasKey#12 | 0 == nb & System.Environment.s_WinRTSupported & hasKey#3]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == nb) & !hasKey#14 | !hasKey#5 & 0 == nb ~> -532462766
		| !(0 == nb) & hasKey#14 | 0 == nb & hasKey#5 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == nb) & !hasKey#14 ~> (HeapRef 10)
		| !(0 == nb) & hasKey#14 | 0 == nb & hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == nb ~> (HeapRef 4)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == nb) & !hasKey#16 | !hasKey#7 & 0 == nb ~> null
			| !(0 == nb) & hasKey#16 | 0 == nb & hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.NotImplementedException ==> STRUCT System.NotImplementedException[]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == nb) & !hasKey#19 ~> (HeapRef 12)
		| !(0 == nb) & hasKey#19 | 0 == nb & hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == nb ~> (HeapRef 6)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == nb) & !hasKey#18 | !hasKey#9 & 0 == nb ~> null
			| !(0 == nb) & hasKey#18 | 0 == nb & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Conditional+NewBool ==> STRUCT VSharp.CSharpUtils.Tests.Conditional+NewBool[]
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.DeclareAfterReturn(System.Boolean, System.Boolean, System.Int32)
RESULT: UNION[
	| !f ~> x
	| !flag & f ~> x + x + x + x
	| f & flag ~> 42]
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.PreconditionLoop(System.Int32)
RESULT: UNION[
	| !(0 < n) ~> 0
	| !(1 < n) & 0 < n ~> 1
	| 0 < n & 1 < n ~> μ[<delegate>, num]]
HEAP:
{ heap = merge[
	(!(0 < n) | !(1 < n), <empty>),
	(0 < n & 1 < n, { heap = <empty>, statics = s0 } ⚪ recapp(<delegate>))], statics = merge[
	(!(0 < n) | !(1 < n), s0),
	(0 < n & 1 < n, { heap = <empty>, statics = s0 } ⚪ recapp(<delegate>))] } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Conditional.PostconditionLoop(System.Int32)
RESULT: UNION[
	| !(-1 + n <= 0) & !(-2 + n <= 0) ~> μ[<delegate>, num]
	| !(-1 + n <= 0) & -2 + n <= 0 ~> -2 + n
	| -1 + n <= 0 ~> -1 + n]
HEAP:
{ heap = merge[
	(-1 + n <= 0 | -2 + n <= 0, <empty>),
	(!(-1 + n <= 0) & !(-2 + n <= 0), { heap = <empty>, statics = s0 } ⚪ recapp(<delegate>))], statics = merge[
	(-1 + n <= 0 | -2 + n <= 0, s0),
	(!(-1 + n <= 0) & !(-2 + n <= 0), { heap = <empty>, statics = s0 } ⚪ recapp(<delegate>))] } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Conditional ==> STRUCT VSharp.CSharpUtils.Tests.Conditional[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Fibonacci.Fib2()
RESULT: 2
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Fibonacci ==> STRUCT VSharp.CSharpUtils.Tests.Fibonacci[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Fibonacci.Fib5()
RESULT: 8
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Fibonacci ==> STRUCT VSharp.CSharpUtils.Tests.Fibonacci[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Fibonacci.FibUnbound(System.Int32)
RESULT: UNION[
	| !(-1 + n < 2) & !(n < 2) ~> 42 + VSharp.CSharpUtils.Tests.Fibonacci._a + VSharp.CSharpUtils.Tests.Fibonacci._b + VSharp.CSharpUtils.Tests.Fibonacci._a + VSharp.CSharpUtils.Tests.Fibonacci._b + VSharp.CSharpUtils.Tests.Fibonacci._b
	| !(n < 2) & -1 + n < 2 ~> 45
	| n < 2 ~> 44]
HEAP:
{ heap = merge[
	(-1 + n < 2 | n < 2, <empty>),
	(!(-1 + n < 2) & !(n < 2), { heap = <empty>, statics = s0 } ⚪ recapp(MutatingFib))], statics = merge[
	(-1 + n < 2 | n < 2, s1),
	(!(-1 + n < 2) & !(n < 2), write({ heap = <empty>, statics = s0 } ⚪ recapp(MutatingFib), s2))] } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Fibonacci ==> STRUCT VSharp.CSharpUtils.Tests.Fibonacci[
	| VSharp.CSharpUtils.Tests.Fibonacci._c ~> 42]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Fibonacci ==> STRUCT VSharp.CSharpUtils.Tests.Fibonacci[
	| VSharp.CSharpUtils.Tests.Fibonacci._a ~> UNION[
		| -1 + n < 2 | n < 2 ~> 1]
	| VSharp.CSharpUtils.Tests.Fibonacci._b ~> UNION[
		| !(n < 2) & -1 + n < 2 ~> 2
		| n < 2 ~> 1]
	| VSharp.CSharpUtils.Tests.Fibonacci._c ~> UNION[
		| -1 + n < 2 | n < 2 ~> 42]]
---------- s2 = ----------
VSharp.CSharpUtils.Tests.Fibonacci ==> STRUCT VSharp.CSharpUtils.Tests.Fibonacci[
	| VSharp.CSharpUtils.Tests.Fibonacci._a ~> UNION[
		| !(-1 + n < 2) ~> VSharp.CSharpUtils.Tests.Fibonacci._a + VSharp.CSharpUtils.Tests.Fibonacci._b
		| -1 + n < 2 ~> 1]
	| VSharp.CSharpUtils.Tests.Fibonacci._b ~> UNION[
		| !(-1 + n < 2) ~> VSharp.CSharpUtils.Tests.Fibonacci._a + VSharp.CSharpUtils.Tests.Fibonacci._b + VSharp.CSharpUtils.Tests.Fibonacci._b
		| -1 + n < 2 ~> 2]]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.GCD.Gcd1()
RESULT: 1
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.GCD ==> STRUCT VSharp.CSharpUtils.Tests.GCD[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.GCD.Gcd15()
RESULT: 15
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.GCD ==> STRUCT VSharp.CSharpUtils.Tests.GCD[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lambdas.Always18()
RESULT: 18
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> <Lambda Expression System.Int32 -> TypeVariable1{<nullType>}>
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Lambdas ==> STRUCT VSharp.CSharpUtils.Tests.Lambdas[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Lambdas.DoubleValue(System.Int32, System.Boolean)
RESULT: True
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> UNION[
	| !flag ~> <Lambda Expression System.Int32 -> TypeVariable1{<nullType>}>]
2 ==> UNION[
	| flag ~> <Lambda Expression System.Int32 -> TypeVariable2{<nullType>}>]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Lambdas ==> STRUCT VSharp.CSharpUtils.Tests.Lambdas[]
METHOD: System.String VSharp.CSharpUtils.Tests.Strings.EmptyString(System.Int32, System.Int32)
RESULT: UNION[
	| !hasKey#1 ~> null
	| hasKey#1 ~> (HeapRef System.String.Empty)]
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
System.String ==> STRUCT System.String[
	| System.String.Empty ~> UNION[
		| !hasKey#1 ~> null
		| hasKey#1 ~> (HeapRef System.String.Empty)]
	| System.String.TrimBoth ~> UNION[
		| !hasKey#1 ~> 2
		| hasKey#1 ~> System.String.TrimBoth]
	| System.String.TrimHead ~> UNION[
		| !hasKey#1 ~> 0
		| hasKey#1 ~> System.String.TrimHead]
	| System.String.TrimTail ~> UNION[
		| !hasKey#1 ~> 1
		| hasKey#1 ~> System.String.TrimTail]
	| System.String.alignConst ~> UNION[
		| !hasKey#1 ~> 3
		| hasKey#1 ~> System.String.alignConst]
	| System.String.charPtrAlignConst ~> UNION[
		| !hasKey#1 ~> 1
		| hasKey#1 ~> System.String.charPtrAlignConst]]
VSharp.CSharpUtils.Tests.Strings ==> STRUCT VSharp.CSharpUtils.Tests.Strings[]
METHOD: System.Boolean VSharp.CSharpUtils.Tests.Lists.Construct()
RESULT: True
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.Collections.Generic.List`1[System.Int32][
	| System.Collections.Generic.List`1._items ~> (HeapRef 3)
	| System.Collections.Generic.List`1._size ~> 4
	| System.Collections.Generic.List`1._syncRoot ~> null
	| System.Collections.Generic.List`1._version ~> 4]
2 ==> [| ... UNION[
	| !hasKey#1 ~> 0] ... |]
3 ==> [|
	0: 1;
	1: 2;
	2: 3;
	3: 4;
	 ... 4 ... |]
4 ==> [| ... 4 x 1 ... |]
5 ==> [|
	0: 5;
	1: 6;
	2: 7;
	3: 8;
	 ... 4 ... |]
---------- s1 = ----------
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> UNION[
		| !hasKey#3 ~> 2146435071
		| hasKey#3 ~> System.Array.MaxArrayLength]
	| System.Array.MaxByteArrayLength ~> UNION[
		| !hasKey#3 ~> 2147483591
		| hasKey#3 ~> System.Array.MaxByteArrayLength]]
System.Collections.Generic.List`1 ==> STRUCT System.Collections.Generic.List`1[System.Int32][
	| System.Collections.Generic.List`1._defaultCapacity ~> UNION[
		| !hasKey#1 ~> 4
		| hasKey#1 ~> System.Collections.Generic.List`1._defaultCapacity]
	| System.Collections.Generic.List`1._emptyArray ~> UNION[
		| !hasKey#1 ~> (HeapRef 2)
		| hasKey#1 ~> (HeapRef System.Collections.Generic.List`1._emptyArray)]]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32[] VSharp.CSharpUtils.Tests.Lists.Mutate(System.Int32)
RESULT: UNION[
	| !(i < 0) & i < 5 ~> (HeapRef 1)
	| !(i < 5) | i < 0 ~> <ERROR: (HeapRef 2)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !(0 == i) | !(i < 5) | i < 0 ~> 1
		| !(i < 0) & 0 == i & i < 5 ~> 10];
	1: UNION[
		| !(1 == i) | !(i < 5) | i < 0 ~> 2
		| !(i < 0) & 1 == i & i < 5 ~> 10];
	2: UNION[
		| !(2 == i) | !(i < 5) | i < 0 ~> 3
		| !(i < 0) & 2 == i & i < 5 ~> 10];
	3: UNION[
		| !(3 == i) | !(i < 5) | i < 0 ~> 4
		| !(i < 0) & 3 == i & i < 5 ~> 10];
	4: UNION[
		| !(4 == i) | !(i < 5) | i < 0 ~> 5
		| !(i < 0) & 4 == i & i < 5 ~> 10];
	i: UNION[
		| !(0 == i) & !(1 == i) & !(2 == i) & !(3 == i) & !(4 == i) & !(i < 0) & i < 5 ~> 10
		| !(i < 0) & (0 == i | 1 == i | 2 == i | 3 == i | 4 == i) & i < 5 ~> 0];
	 ... 5 ... |]
2 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(i < 5) | i < 0 ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._data ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._innerException ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#8 & (!(i < 5) | i < 0) ~> null
			| (!(i < 5) | i < 0) & hasKey#8 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(i < 5) | i < 0 ~> (HeapRef 4)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(i < 5) | i < 0 ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(i < 5) | i < 0 ~> (HeapRef 6)]
	| System.Exception._source ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Exception._xcode ~> UNION[
		| !(i < 5) | i < 0 ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(i < 5) | i < 0 ~> 0]]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(i < 5) | i < 0 ~> 'A'];
		10: UNION[
			| !(i < 5) | i < 0 ~> 'u'];
		11: UNION[
			| !(i < 5) | i < 0 ~> 't'];
		12: UNION[
			| !(i < 5) | i < 0 ~> 'O'];
		13: UNION[
			| !(i < 5) | i < 0 ~> 'f'];
		14: UNION[
			| !(i < 5) | i < 0 ~> 'R'];
		15: UNION[
			| !(i < 5) | i < 0 ~> 'a'];
		16: UNION[
			| !(i < 5) | i < 0 ~> 'n'];
		17: UNION[
			| !(i < 5) | i < 0 ~> 'g'];
		18: UNION[
			| !(i < 5) | i < 0 ~> 'e'];
		19: UNION[
			| !(i < 5) | i < 0 ~> 'E'];
		1: UNION[
			| !(i < 5) | i < 0 ~> 'r'];
		20: UNION[
			| !(i < 5) | i < 0 ~> 'x'];
		21: UNION[
			| !(i < 5) | i < 0 ~> 'c'];
		22: UNION[
			| !(i < 5) | i < 0 ~> 'e'];
		23: UNION[
			| !(i < 5) | i < 0 ~> 'p'];
		24: UNION[
			| !(i < 5) | i < 0 ~> 't'];
		25: UNION[
			| !(i < 5) | i < 0 ~> 'i'];
		26: UNION[
			| !(i < 5) | i < 0 ~> 'o'];
		27: UNION[
			| !(i < 5) | i < 0 ~> 'n'];
		28: UNION[
			| !(i < 5) | i < 0 ~> '\000'];
		2: UNION[
			| !(i < 5) | i < 0 ~> 'g'];
		3: UNION[
			| !(i < 5) | i < 0 ~> '_'];
		4: UNION[
			| !(i < 5) | i < 0 ~> 'I'];
		5: UNION[
			| !(i < 5) | i < 0 ~> 'n'];
		6: UNION[
			| !(i < 5) | i < 0 ~> 'd'];
		7: UNION[
			| !(i < 5) | i < 0 ~> 'e'];
		8: UNION[
			| !(i < 5) | i < 0 ~> 'x'];
		9: UNION[
			| !(i < 5) | i < 0 ~> 'O'];
		 ... UNION[
	| !(i < 5) | i < 0 ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(i < 5) | i < 0 ~> 28]]
4 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(i < 5) | i < 0 ~> 'G'];
		10: UNION[
			| !(i < 5) | i < 0 ~> 's'];
		11: UNION[
			| !(i < 5) | i < 0 ~> 'o'];
		12: UNION[
			| !(i < 5) | i < 0 ~> 'u'];
		13: UNION[
			| !(i < 5) | i < 0 ~> 'r'];
		14: UNION[
			| !(i < 5) | i < 0 ~> 'c'];
		15: UNION[
			| !(i < 5) | i < 0 ~> 'e'];
		16: UNION[
			| !(i < 5) | i < 0 ~> ' '];
		17: UNION[
			| !(i < 5) | i < 0 ~> 's'];
		18: UNION[
			| !(i < 5) | i < 0 ~> 't'];
		19: UNION[
			| !(i < 5) | i < 0 ~> 'r'];
		1: UNION[
			| !(i < 5) | i < 0 ~> 'e'];
		20: UNION[
			| !(i < 5) | i < 0 ~> 'i'];
		21: UNION[
			| !(i < 5) | i < 0 ~> 'n'];
		22: UNION[
			| !(i < 5) | i < 0 ~> 'g'];
		23: UNION[
			| !(i < 5) | i < 0 ~> 's'];
		24: UNION[
			| !(i < 5) | i < 0 ~> ' '];
		25: UNION[
			| !(i < 5) | i < 0 ~> 'c'];
		26: UNION[
			| !(i < 5) | i < 0 ~> 'u'];
		27: UNION[
			| !(i < 5) | i < 0 ~> 'r'];
		28: UNION[
			| !(i < 5) | i < 0 ~> 'r'];
		29: UNION[
			| !(i < 5) | i < 0 ~> 'e'];
		2: UNION[
			| !(i < 5) | i < 0 ~> 't'];
		30: UNION[
			| !(i < 5) | i < 0 ~> 'n'];
		31: UNION[
			| !(i < 5) | i < 0 ~> 't'];
		32: UNION[
			| !(i < 5) | i < 0 ~> 'l'];
		33: UNION[
			| !(i < 5) | i < 0 ~> 'y'];
		34: UNION[
			| !(i < 5) | i < 0 ~> ' '];
		35: UNION[
			| !(i < 5) | i < 0 ~> 'n'];
		36: UNION[
			| !(i < 5) | i < 0 ~> 'o'];
		37: UNION[
			| !(i < 5) | i < 0 ~> 't'];
		38: UNION[
			| !(i < 5) | i < 0 ~> ' '];
		39: UNION[
			| !(i < 5) | i < 0 ~> 's'];
		3: UNION[
			| !(i < 5) | i < 0 ~> 't'];
		40: UNION[
			| !(i < 5) | i < 0 ~> 'u'];
		41: UNION[
			| !(i < 5) | i < 0 ~> 'p'];
		42: UNION[
			| !(i < 5) | i < 0 ~> 'p'];
		43: UNION[
			| !(i < 5) | i < 0 ~> 'o'];
		44: UNION[
			| !(i < 5) | i < 0 ~> 'r'];
		45: UNION[
			| !(i < 5) | i < 0 ~> 't'];
		46: UNION[
			| !(i < 5) | i < 0 ~> 'e'];
		47: UNION[
			| !(i < 5) | i < 0 ~> 'd'];
		48: UNION[
			| !(i < 5) | i < 0 ~> '!'];
		49: UNION[
			| !(i < 5) | i < 0 ~> '\000'];
		4: UNION[
			| !(i < 5) | i < 0 ~> 'i'];
		5: UNION[
			| !(i < 5) | i < 0 ~> 'n'];
		6: UNION[
			| !(i < 5) | i < 0 ~> 'g'];
		7: UNION[
			| !(i < 5) | i < 0 ~> ' '];
		8: UNION[
			| !(i < 5) | i < 0 ~> 'r'];
		9: UNION[
			| !(i < 5) | i < 0 ~> 'e'];
		 ... UNION[
	| !(i < 5) | i < 0 ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(i < 5) | i < 0 ~> 49]]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(i < 5) | i < 0 ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(i < 5) | i < 0 ~> null]]
7 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'C'];
		10: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'r'];
		11: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'i'];
		12: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'a'];
		13: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'l'];
		14: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'i'];
		15: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'z'];
		16: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'a'];
		17: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 't'];
		18: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'i'];
		19: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'o'];
		1: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'L'];
		20: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'n'];
		21: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'M'];
		22: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'a'];
		23: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'n'];
		24: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'a'];
		25: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'g'];
		26: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'e'];
		27: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'r'];
		28: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> '_'];
		29: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'R'];
		2: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'R'];
		30: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'e'];
		31: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'a'];
		32: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'l'];
		33: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'T'];
		34: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'y'];
		35: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'p'];
		36: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'e'];
		37: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> '\000'];
		3: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> '_'];
		4: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'S'];
		5: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'a'];
		6: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'f'];
		7: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'e'];
		8: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'S'];
		9: UNION[
			| !hasKey#9 & (!(i < 5) | i < 0) ~> 'e'];
		 ... UNION[
	| !hasKey#9 & (!(i < 5) | i < 0) ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#9 & (!(i < 5) | i < 0) ~> 37]]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#2 ~> System.Environment.MaxEnvVariableValueLength
		| !hasKey#2 & (!(i < 5) | i < 0) ~> 32767]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#2 ~> System.Environment.MaxMachineNameLength
		| !hasKey#2 & (!(i < 5) | i < 0) ~> 256]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#2 ~> System.Environment.MaxSystemEnvVariableLength
		| !hasKey#2 & (!(i < 5) | i < 0) ~> 1024]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#2 ~> System.Environment.MaxUserEnvVariableLength
		| !hasKey#2 & (!(i < 5) | i < 0) ~> 255]
	| System.Environment.isUserNonInteractive ~> !(i < 0) & System.Environment.isUserNonInteractive & i < 5 | (!(i < 5) | i < 0) & System.Environment.isUserNonInteractive & hasKey#2
	| System.Environment.m_os ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#2 ~> (HeapRef System.Environment.m_os)
		| !hasKey#2 & (!(i < 5) | i < 0) ~> null]
	| System.Environment.m_resHelper ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#2 ~> (HeapRef System.Environment.m_resHelper)
		| !hasKey#2 & (!(i < 5) | i < 0) ~> null]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#2 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)
			| !hasKey#2 & (!(i < 5) | i < 0) ~> null]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(i < 0) & System.Environment.s_CheckedOSWin8OrAbove & i < 5 | (!(i < 5) | i < 0) & System.Environment.s_CheckedOSWin8OrAbove & hasKey#2
	| System.Environment.s_CheckedWinRT ~> !(i < 0) & System.Environment.s_CheckedWinRT & i < 5 | (!(i < 5) | i < 0) & System.Environment.s_CheckedWinRT & hasKey#2
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#2 ~> (HeapRef System.Environment.s_InternalSyncObject)
		| !hasKey#2 & (!(i < 5) | i < 0) ~> null]
	| System.Environment.s_IsWindows8OrAbove ~> !(i < 0) & System.Environment.s_IsWindows8OrAbove & i < 5 | (!(i < 5) | i < 0) & System.Environment.s_IsWindows8OrAbove & hasKey#2
	| System.Environment.s_WinRTSupported ~> !(i < 0) & System.Environment.s_WinRTSupported & i < 5 | (!(i < 5) | i < 0) & System.Environment.s_WinRTSupported & hasKey#2]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#4 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#4 & (!(i < 5) | i < 0) ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#4 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#4 & (!(i < 5) | i < 0) ~> (HeapRef 5)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#6 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#6 & (!(i < 5) | i < 0) ~> null]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#9 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#9 & (!(i < 5) | i < 0) ~> (HeapRef 7)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(i < 0) & i < 5 | (!(i < 5) | i < 0) & hasKey#8 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#8 & (!(i < 5) | i < 0) ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.LowerBoundTest()
RESULT: 0
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0, 0: 1;
	0, 1: 1;
	1, 0: 2;
	1, 1: 2;
	2, 0: 3;
	2, 1: 3;
	3, 0: 4;
	3, 1: 4;
	 ... 4 x 2 ... |]
---------- s1 = ----------
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> UNION[
		| !hasKey#1 ~> 2146435071
		| hasKey#1 ~> System.Array.MaxArrayLength]
	| System.Array.MaxByteArrayLength ~> UNION[
		| !hasKey#1 ~> 2147483591
		| hasKey#1 ~> System.Array.MaxByteArrayLength]]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.LowerBoundExceptionTest(System.Int32[,])
RESULT: <ERROR: UNION[
	| !(0 == array) ~> (HeapRef 7)
	| 0 == array ~> (HeapRef 1)]>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| 0 == array ~> -2147467261]
	| System.Exception._className ~> UNION[
		| 0 == array ~> null]
	| System.Exception._data ~> UNION[
		| 0 == array ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == array ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == array ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == array ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == array ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == array ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == array ~> null
			| 0 == array & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == array ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == array ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == array ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == array ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| 0 == array ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == array ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == array ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == array ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == array ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == array ~> 0]]]
10 ==> STRUCT System.Object[]
11 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == array) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == array) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == array) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == array) ~> null]]
12 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == array) & !hasKey#19 ~> 'C'];
		10: UNION[
			| !(0 == array) & !hasKey#19 ~> 'r'];
		11: UNION[
			| !(0 == array) & !hasKey#19 ~> 'i'];
		12: UNION[
			| !(0 == array) & !hasKey#19 ~> 'a'];
		13: UNION[
			| !(0 == array) & !hasKey#19 ~> 'l'];
		14: UNION[
			| !(0 == array) & !hasKey#19 ~> 'i'];
		15: UNION[
			| !(0 == array) & !hasKey#19 ~> 'z'];
		16: UNION[
			| !(0 == array) & !hasKey#19 ~> 'a'];
		17: UNION[
			| !(0 == array) & !hasKey#19 ~> 't'];
		18: UNION[
			| !(0 == array) & !hasKey#19 ~> 'i'];
		19: UNION[
			| !(0 == array) & !hasKey#19 ~> 'o'];
		1: UNION[
			| !(0 == array) & !hasKey#19 ~> 'L'];
		20: UNION[
			| !(0 == array) & !hasKey#19 ~> 'n'];
		21: UNION[
			| !(0 == array) & !hasKey#19 ~> 'M'];
		22: UNION[
			| !(0 == array) & !hasKey#19 ~> 'a'];
		23: UNION[
			| !(0 == array) & !hasKey#19 ~> 'n'];
		24: UNION[
			| !(0 == array) & !hasKey#19 ~> 'a'];
		25: UNION[
			| !(0 == array) & !hasKey#19 ~> 'g'];
		26: UNION[
			| !(0 == array) & !hasKey#19 ~> 'e'];
		27: UNION[
			| !(0 == array) & !hasKey#19 ~> 'r'];
		28: UNION[
			| !(0 == array) & !hasKey#19 ~> '_'];
		29: UNION[
			| !(0 == array) & !hasKey#19 ~> 'R'];
		2: UNION[
			| !(0 == array) & !hasKey#19 ~> 'R'];
		30: UNION[
			| !(0 == array) & !hasKey#19 ~> 'e'];
		31: UNION[
			| !(0 == array) & !hasKey#19 ~> 'a'];
		32: UNION[
			| !(0 == array) & !hasKey#19 ~> 'l'];
		33: UNION[
			| !(0 == array) & !hasKey#19 ~> 'T'];
		34: UNION[
			| !(0 == array) & !hasKey#19 ~> 'y'];
		35: UNION[
			| !(0 == array) & !hasKey#19 ~> 'p'];
		36: UNION[
			| !(0 == array) & !hasKey#19 ~> 'e'];
		37: UNION[
			| !(0 == array) & !hasKey#19 ~> '\000'];
		3: UNION[
			| !(0 == array) & !hasKey#19 ~> '_'];
		4: UNION[
			| !(0 == array) & !hasKey#19 ~> 'S'];
		5: UNION[
			| !(0 == array) & !hasKey#19 ~> 'a'];
		6: UNION[
			| !(0 == array) & !hasKey#19 ~> 'f'];
		7: UNION[
			| !(0 == array) & !hasKey#19 ~> 'e'];
		8: UNION[
			| !(0 == array) & !hasKey#19 ~> 'S'];
		9: UNION[
			| !(0 == array) & !hasKey#19 ~> 'e'];
		 ... UNION[
	| !(0 == array) & !hasKey#19 ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == array) & !hasKey#19 ~> 37]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == array ~> 'A'];
		10: UNION[
			| 0 == array ~> 'f'];
		11: UNION[
			| 0 == array ~> 'e'];
		12: UNION[
			| 0 == array ~> 'r'];
		13: UNION[
			| 0 == array ~> 'e'];
		14: UNION[
			| 0 == array ~> 'n'];
		15: UNION[
			| 0 == array ~> 'c'];
		16: UNION[
			| 0 == array ~> 'e'];
		17: UNION[
			| 0 == array ~> 'E'];
		18: UNION[
			| 0 == array ~> 'x'];
		19: UNION[
			| 0 == array ~> 'c'];
		1: UNION[
			| 0 == array ~> 'r'];
		20: UNION[
			| 0 == array ~> 'e'];
		21: UNION[
			| 0 == array ~> 'p'];
		22: UNION[
			| 0 == array ~> 't'];
		23: UNION[
			| 0 == array ~> 'i'];
		24: UNION[
			| 0 == array ~> 'o'];
		25: UNION[
			| 0 == array ~> 'n'];
		26: UNION[
			| 0 == array ~> '\000'];
		2: UNION[
			| 0 == array ~> 'g'];
		3: UNION[
			| 0 == array ~> '_'];
		4: UNION[
			| 0 == array ~> 'N'];
		5: UNION[
			| 0 == array ~> 'u'];
		6: UNION[
			| 0 == array ~> 'l'];
		7: UNION[
			| 0 == array ~> 'l'];
		8: UNION[
			| 0 == array ~> 'R'];
		9: UNION[
			| 0 == array ~> 'e'];
		 ... UNION[
	| 0 == array ~> 27] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == array ~> 26]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == array ~> 'G'];
		10: UNION[
			| 0 == array ~> 's'];
		11: UNION[
			| 0 == array ~> 'o'];
		12: UNION[
			| 0 == array ~> 'u'];
		13: UNION[
			| 0 == array ~> 'r'];
		14: UNION[
			| 0 == array ~> 'c'];
		15: UNION[
			| 0 == array ~> 'e'];
		16: UNION[
			| 0 == array ~> ' '];
		17: UNION[
			| 0 == array ~> 's'];
		18: UNION[
			| 0 == array ~> 't'];
		19: UNION[
			| 0 == array ~> 'r'];
		1: UNION[
			| 0 == array ~> 'e'];
		20: UNION[
			| 0 == array ~> 'i'];
		21: UNION[
			| 0 == array ~> 'n'];
		22: UNION[
			| 0 == array ~> 'g'];
		23: UNION[
			| 0 == array ~> 's'];
		24: UNION[
			| 0 == array ~> ' '];
		25: UNION[
			| 0 == array ~> 'c'];
		26: UNION[
			| 0 == array ~> 'u'];
		27: UNION[
			| 0 == array ~> 'r'];
		28: UNION[
			| 0 == array ~> 'r'];
		29: UNION[
			| 0 == array ~> 'e'];
		2: UNION[
			| 0 == array ~> 't'];
		30: UNION[
			| 0 == array ~> 'n'];
		31: UNION[
			| 0 == array ~> 't'];
		32: UNION[
			| 0 == array ~> 'l'];
		33: UNION[
			| 0 == array ~> 'y'];
		34: UNION[
			| 0 == array ~> ' '];
		35: UNION[
			| 0 == array ~> 'n'];
		36: UNION[
			| 0 == array ~> 'o'];
		37: UNION[
			| 0 == array ~> 't'];
		38: UNION[
			| 0 == array ~> ' '];
		39: UNION[
			| 0 == array ~> 's'];
		3: UNION[
			| 0 == array ~> 't'];
		40: UNION[
			| 0 == array ~> 'u'];
		41: UNION[
			| 0 == array ~> 'p'];
		42: UNION[
			| 0 == array ~> 'p'];
		43: UNION[
			| 0 == array ~> 'o'];
		44: UNION[
			| 0 == array ~> 'r'];
		45: UNION[
			| 0 == array ~> 't'];
		46: UNION[
			| 0 == array ~> 'e'];
		47: UNION[
			| 0 == array ~> 'd'];
		48: UNION[
			| 0 == array ~> '!'];
		49: UNION[
			| 0 == array ~> '\000'];
		4: UNION[
			| 0 == array ~> 'i'];
		5: UNION[
			| 0 == array ~> 'n'];
		6: UNION[
			| 0 == array ~> 'g'];
		7: UNION[
			| 0 == array ~> ' '];
		8: UNION[
			| 0 == array ~> 'r'];
		9: UNION[
			| 0 == array ~> 'e'];
		 ... UNION[
	| 0 == array ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == array ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == array ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == array ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == array ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == array ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == array ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == array ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == array ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == array ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == array ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == array ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == array ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == array ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == array ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == array ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == array ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == array ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == array ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == array ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == array ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == array ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == array ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == array ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == array ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == array ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == array ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == array ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == array ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == array ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == array ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == array ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == array ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == array ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == array ~> 37]]
7 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == array) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == array) & !hasKey#18 ~> null
			| !(0 == array) & hasKey#18 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == array) ~> (HeapRef 9)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == array) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == array) ~> (HeapRef 11)]
	| System.Exception._source ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == array) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == array) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == array) ~> 0]]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == array) ~> 'A'];
		10: UNION[
			| !(0 == array) ~> 'u'];
		11: UNION[
			| !(0 == array) ~> 't'];
		12: UNION[
			| !(0 == array) ~> 'O'];
		13: UNION[
			| !(0 == array) ~> 'f'];
		14: UNION[
			| !(0 == array) ~> 'R'];
		15: UNION[
			| !(0 == array) ~> 'a'];
		16: UNION[
			| !(0 == array) ~> 'n'];
		17: UNION[
			| !(0 == array) ~> 'g'];
		18: UNION[
			| !(0 == array) ~> 'e'];
		19: UNION[
			| !(0 == array) ~> 'E'];
		1: UNION[
			| !(0 == array) ~> 'r'];
		20: UNION[
			| !(0 == array) ~> 'x'];
		21: UNION[
			| !(0 == array) ~> 'c'];
		22: UNION[
			| !(0 == array) ~> 'e'];
		23: UNION[
			| !(0 == array) ~> 'p'];
		24: UNION[
			| !(0 == array) ~> 't'];
		25: UNION[
			| !(0 == array) ~> 'i'];
		26: UNION[
			| !(0 == array) ~> 'o'];
		27: UNION[
			| !(0 == array) ~> 'n'];
		28: UNION[
			| !(0 == array) ~> '\000'];
		2: UNION[
			| !(0 == array) ~> 'g'];
		3: UNION[
			| !(0 == array) ~> '_'];
		4: UNION[
			| !(0 == array) ~> 'I'];
		5: UNION[
			| !(0 == array) ~> 'n'];
		6: UNION[
			| !(0 == array) ~> 'd'];
		7: UNION[
			| !(0 == array) ~> 'e'];
		8: UNION[
			| !(0 == array) ~> 'x'];
		9: UNION[
			| !(0 == array) ~> 'O'];
		 ... UNION[
	| !(0 == array) ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == array) ~> 28]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == array) ~> 'G'];
		10: UNION[
			| !(0 == array) ~> 's'];
		11: UNION[
			| !(0 == array) ~> 'o'];
		12: UNION[
			| !(0 == array) ~> 'u'];
		13: UNION[
			| !(0 == array) ~> 'r'];
		14: UNION[
			| !(0 == array) ~> 'c'];
		15: UNION[
			| !(0 == array) ~> 'e'];
		16: UNION[
			| !(0 == array) ~> ' '];
		17: UNION[
			| !(0 == array) ~> 's'];
		18: UNION[
			| !(0 == array) ~> 't'];
		19: UNION[
			| !(0 == array) ~> 'r'];
		1: UNION[
			| !(0 == array) ~> 'e'];
		20: UNION[
			| !(0 == array) ~> 'i'];
		21: UNION[
			| !(0 == array) ~> 'n'];
		22: UNION[
			| !(0 == array) ~> 'g'];
		23: UNION[
			| !(0 == array) ~> 's'];
		24: UNION[
			| !(0 == array) ~> ' '];
		25: UNION[
			| !(0 == array) ~> 'c'];
		26: UNION[
			| !(0 == array) ~> 'u'];
		27: UNION[
			| !(0 == array) ~> 'r'];
		28: UNION[
			| !(0 == array) ~> 'r'];
		29: UNION[
			| !(0 == array) ~> 'e'];
		2: UNION[
			| !(0 == array) ~> 't'];
		30: UNION[
			| !(0 == array) ~> 'n'];
		31: UNION[
			| !(0 == array) ~> 't'];
		32: UNION[
			| !(0 == array) ~> 'l'];
		33: UNION[
			| !(0 == array) ~> 'y'];
		34: UNION[
			| !(0 == array) ~> ' '];
		35: UNION[
			| !(0 == array) ~> 'n'];
		36: UNION[
			| !(0 == array) ~> 'o'];
		37: UNION[
			| !(0 == array) ~> 't'];
		38: UNION[
			| !(0 == array) ~> ' '];
		39: UNION[
			| !(0 == array) ~> 's'];
		3: UNION[
			| !(0 == array) ~> 't'];
		40: UNION[
			| !(0 == array) ~> 'u'];
		41: UNION[
			| !(0 == array) ~> 'p'];
		42: UNION[
			| !(0 == array) ~> 'p'];
		43: UNION[
			| !(0 == array) ~> 'o'];
		44: UNION[
			| !(0 == array) ~> 'r'];
		45: UNION[
			| !(0 == array) ~> 't'];
		46: UNION[
			| !(0 == array) ~> 'e'];
		47: UNION[
			| !(0 == array) ~> 'd'];
		48: UNION[
			| !(0 == array) ~> '!'];
		49: UNION[
			| !(0 == array) ~> '\000'];
		4: UNION[
			| !(0 == array) ~> 'i'];
		5: UNION[
			| !(0 == array) ~> 'n'];
		6: UNION[
			| !(0 == array) ~> 'g'];
		7: UNION[
			| !(0 == array) ~> ' '];
		8: UNION[
			| !(0 == array) ~> 'r'];
		9: UNION[
			| !(0 == array) ~> 'e'];
		 ... UNION[
	| !(0 == array) ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == array) ~> 49]]
array ==> System.Int32: [| ... System.Int32[,].0_Length x System.Int32[,].1_Length ... |]
---------- s1 = ----------
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> UNION[
		| !hasKey#1 ~> 2146435071
		| hasKey#1 ~> System.Array.MaxArrayLength]
	| System.Array.MaxByteArrayLength ~> UNION[
		| !hasKey#1 ~> 2147483591
		| hasKey#1 ~> System.Array.MaxByteArrayLength]]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == array) & !hasKey#12 | !hasKey#3 & 0 == array ~> 32767
		| !(0 == array) & hasKey#12 | 0 == array & hasKey#3 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == array) & !hasKey#12 | !hasKey#3 & 0 == array ~> 256
		| !(0 == array) & hasKey#12 | 0 == array & hasKey#3 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == array) & !hasKey#12 | !hasKey#3 & 0 == array ~> 1024
		| !(0 == array) & hasKey#12 | 0 == array & hasKey#3 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == array) & !hasKey#12 | !hasKey#3 & 0 == array ~> 255
		| !(0 == array) & hasKey#12 | 0 == array & hasKey#3 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> !(0 == array) & System.Environment.isUserNonInteractive & hasKey#12 | 0 == array & System.Environment.isUserNonInteractive & hasKey#3
	| System.Environment.m_os ~> UNION[
		| !(0 == array) & !hasKey#12 | !hasKey#3 & 0 == array ~> null
		| !(0 == array) & hasKey#12 | 0 == array & hasKey#3 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == array) & !hasKey#12 | !hasKey#3 & 0 == array ~> null
		| !(0 == array) & hasKey#12 | 0 == array & hasKey#3 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == array) & !hasKey#12 | !hasKey#3 & 0 == array ~> null
			| !(0 == array) & hasKey#12 | 0 == array & hasKey#3 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == array) & System.Environment.s_CheckedOSWin8OrAbove & hasKey#12 | 0 == array & System.Environment.s_CheckedOSWin8OrAbove & hasKey#3
	| System.Environment.s_CheckedWinRT ~> !(0 == array) & System.Environment.s_CheckedWinRT & hasKey#12 | 0 == array & System.Environment.s_CheckedWinRT & hasKey#3
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == array) & !hasKey#12 | !hasKey#3 & 0 == array ~> null
		| !(0 == array) & hasKey#12 | 0 == array & hasKey#3 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == array) & System.Environment.s_IsWindows8OrAbove & hasKey#12 | 0 == array & System.Environment.s_IsWindows8OrAbove & hasKey#3
	| System.Environment.s_WinRTSupported ~> !(0 == array) & System.Environment.s_WinRTSupported & hasKey#12 | 0 == array & System.Environment.s_WinRTSupported & hasKey#3]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == array) & !hasKey#14 | !hasKey#5 & 0 == array ~> -532462766
		| !(0 == array) & hasKey#14 | 0 == array & hasKey#5 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == array) & !hasKey#14 ~> (HeapRef 10)
		| !(0 == array) & hasKey#14 | 0 == array & hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == array ~> (HeapRef 4)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == array) & !hasKey#16 | !hasKey#7 & 0 == array ~> null
			| !(0 == array) & hasKey#16 | 0 == array & hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == array) & !hasKey#19 ~> (HeapRef 12)
		| !(0 == array) & hasKey#19 | 0 == array & hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == array ~> (HeapRef 6)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == array) & !hasKey#18 | !hasKey#9 & 0 == array ~> null
			| !(0 == array) & hasKey#18 | 0 == array & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.LowerBoundSymbolicTest(System.Int32[,], System.Int32)
RESULT: UNION[
	| !(0 == array) & !(dimension < 0) & dimension < 2 ~> 0
	| !(dimension < 0) & 0 == array & dimension < 2 ~> <ERROR: (HeapRef 1)>
	| !(dimension < 2) | dimension < 0 ~> <ERROR: UNION[
		| !(0 == array) ~> (HeapRef 7)
		| 0 == array ~> (HeapRef 1)]>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[
		| 0 == array ~> -2147467261]
	| System.Exception._className ~> UNION[
		| 0 == array ~> null]
	| System.Exception._data ~> UNION[
		| 0 == array ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == array ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == array ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == array ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == array ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == array ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == array ~> null
			| 0 == array & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == array ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == array ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == array ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == array ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| 0 == array ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == array ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == array ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == array ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == array ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == array ~> 0]]]
10 ==> STRUCT System.Object[]
11 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]]
12 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'C'];
		10: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'r'];
		11: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'i'];
		12: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'a'];
		13: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'l'];
		14: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'i'];
		15: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'z'];
		16: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'a'];
		17: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 't'];
		18: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'i'];
		19: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'o'];
		1: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'L'];
		20: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'n'];
		21: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'M'];
		22: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'a'];
		23: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'n'];
		24: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'a'];
		25: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'g'];
		26: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'e'];
		27: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'r'];
		28: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> '_'];
		29: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'R'];
		2: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'R'];
		30: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'e'];
		31: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'a'];
		32: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'l'];
		33: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'T'];
		34: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'y'];
		35: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'p'];
		36: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'e'];
		37: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> '\000'];
		3: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> '_'];
		4: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'S'];
		5: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'a'];
		6: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'f'];
		7: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'e'];
		8: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'S'];
		9: UNION[
			| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 'e'];
		 ... UNION[
	| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> 37]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == array ~> 'A'];
		10: UNION[
			| 0 == array ~> 'f'];
		11: UNION[
			| 0 == array ~> 'e'];
		12: UNION[
			| 0 == array ~> 'r'];
		13: UNION[
			| 0 == array ~> 'e'];
		14: UNION[
			| 0 == array ~> 'n'];
		15: UNION[
			| 0 == array ~> 'c'];
		16: UNION[
			| 0 == array ~> 'e'];
		17: UNION[
			| 0 == array ~> 'E'];
		18: UNION[
			| 0 == array ~> 'x'];
		19: UNION[
			| 0 == array ~> 'c'];
		1: UNION[
			| 0 == array ~> 'r'];
		20: UNION[
			| 0 == array ~> 'e'];
		21: UNION[
			| 0 == array ~> 'p'];
		22: UNION[
			| 0 == array ~> 't'];
		23: UNION[
			| 0 == array ~> 'i'];
		24: UNION[
			| 0 == array ~> 'o'];
		25: UNION[
			| 0 == array ~> 'n'];
		26: UNION[
			| 0 == array ~> '\000'];
		2: UNION[
			| 0 == array ~> 'g'];
		3: UNION[
			| 0 == array ~> '_'];
		4: UNION[
			| 0 == array ~> 'N'];
		5: UNION[
			| 0 == array ~> 'u'];
		6: UNION[
			| 0 == array ~> 'l'];
		7: UNION[
			| 0 == array ~> 'l'];
		8: UNION[
			| 0 == array ~> 'R'];
		9: UNION[
			| 0 == array ~> 'e'];
		 ... UNION[
	| 0 == array ~> 27] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == array ~> 26]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == array ~> 'G'];
		10: UNION[
			| 0 == array ~> 's'];
		11: UNION[
			| 0 == array ~> 'o'];
		12: UNION[
			| 0 == array ~> 'u'];
		13: UNION[
			| 0 == array ~> 'r'];
		14: UNION[
			| 0 == array ~> 'c'];
		15: UNION[
			| 0 == array ~> 'e'];
		16: UNION[
			| 0 == array ~> ' '];
		17: UNION[
			| 0 == array ~> 's'];
		18: UNION[
			| 0 == array ~> 't'];
		19: UNION[
			| 0 == array ~> 'r'];
		1: UNION[
			| 0 == array ~> 'e'];
		20: UNION[
			| 0 == array ~> 'i'];
		21: UNION[
			| 0 == array ~> 'n'];
		22: UNION[
			| 0 == array ~> 'g'];
		23: UNION[
			| 0 == array ~> 's'];
		24: UNION[
			| 0 == array ~> ' '];
		25: UNION[
			| 0 == array ~> 'c'];
		26: UNION[
			| 0 == array ~> 'u'];
		27: UNION[
			| 0 == array ~> 'r'];
		28: UNION[
			| 0 == array ~> 'r'];
		29: UNION[
			| 0 == array ~> 'e'];
		2: UNION[
			| 0 == array ~> 't'];
		30: UNION[
			| 0 == array ~> 'n'];
		31: UNION[
			| 0 == array ~> 't'];
		32: UNION[
			| 0 == array ~> 'l'];
		33: UNION[
			| 0 == array ~> 'y'];
		34: UNION[
			| 0 == array ~> ' '];
		35: UNION[
			| 0 == array ~> 'n'];
		36: UNION[
			| 0 == array ~> 'o'];
		37: UNION[
			| 0 == array ~> 't'];
		38: UNION[
			| 0 == array ~> ' '];
		39: UNION[
			| 0 == array ~> 's'];
		3: UNION[
			| 0 == array ~> 't'];
		40: UNION[
			| 0 == array ~> 'u'];
		41: UNION[
			| 0 == array ~> 'p'];
		42: UNION[
			| 0 == array ~> 'p'];
		43: UNION[
			| 0 == array ~> 'o'];
		44: UNION[
			| 0 == array ~> 'r'];
		45: UNION[
			| 0 == array ~> 't'];
		46: UNION[
			| 0 == array ~> 'e'];
		47: UNION[
			| 0 == array ~> 'd'];
		48: UNION[
			| 0 == array ~> '!'];
		49: UNION[
			| 0 == array ~> '\000'];
		4: UNION[
			| 0 == array ~> 'i'];
		5: UNION[
			| 0 == array ~> 'n'];
		6: UNION[
			| 0 == array ~> 'g'];
		7: UNION[
			| 0 == array ~> ' '];
		8: UNION[
			| 0 == array ~> 'r'];
		9: UNION[
			| 0 == array ~> 'e'];
		 ... UNION[
	| 0 == array ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == array ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == array ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == array ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == array ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == array ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == array ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == array ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == array ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == array ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == array ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == array ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == array ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == array ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == array ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == array ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == array ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == array ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == array ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == array ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == array ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == array ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == array ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == array ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == array ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == array ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == array ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == array ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == array ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == array ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == array ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == array ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == array ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == array ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == array ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == array ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == array ~> 37]]
7 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == array) & !hasKey#18 & (!(dimension < 2) | dimension < 0) ~> null
			| !(0 == array) & (!(dimension < 2) | dimension < 0) & hasKey#18 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> (HeapRef 9)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> (HeapRef 11)]
	| System.Exception._source ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 0]]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'A'];
		10: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'u'];
		11: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 't'];
		12: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'O'];
		13: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'f'];
		14: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'R'];
		15: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'a'];
		16: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'n'];
		17: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'g'];
		18: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'e'];
		19: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'E'];
		1: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'r'];
		20: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'x'];
		21: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'c'];
		22: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'e'];
		23: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'p'];
		24: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 't'];
		25: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'i'];
		26: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'o'];
		27: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'n'];
		28: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> '\000'];
		2: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'g'];
		3: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> '_'];
		4: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'I'];
		5: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'n'];
		6: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'd'];
		7: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'e'];
		8: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'x'];
		9: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'O'];
		 ... UNION[
	| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 28]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'G'];
		10: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 's'];
		11: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'o'];
		12: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'u'];
		13: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'r'];
		14: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'c'];
		15: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'e'];
		16: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> ' '];
		17: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 's'];
		18: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 't'];
		19: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'r'];
		1: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'e'];
		20: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'i'];
		21: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'n'];
		22: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'g'];
		23: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 's'];
		24: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> ' '];
		25: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'c'];
		26: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'u'];
		27: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'r'];
		28: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'r'];
		29: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'e'];
		2: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 't'];
		30: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'n'];
		31: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 't'];
		32: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'l'];
		33: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'y'];
		34: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> ' '];
		35: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'n'];
		36: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'o'];
		37: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 't'];
		38: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> ' '];
		39: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 's'];
		3: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 't'];
		40: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'u'];
		41: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'p'];
		42: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'p'];
		43: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'o'];
		44: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'r'];
		45: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 't'];
		46: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'e'];
		47: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'd'];
		48: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> '!'];
		49: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> '\000'];
		4: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'i'];
		5: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'n'];
		6: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'g'];
		7: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> ' '];
		8: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'r'];
		9: UNION[
			| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 'e'];
		 ... UNION[
	| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == array) & (!(dimension < 2) | dimension < 0) ~> 49]]
array ==> System.Int32: [| ... System.Int32[,].0_Length x System.Int32[,].1_Length ... |]
---------- s1 = ----------
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> UNION[
		| !hasKey#1 ~> 2146435071
		| hasKey#1 ~> System.Array.MaxArrayLength]
	| System.Array.MaxByteArrayLength ~> UNION[
		| !hasKey#1 ~> 2147483591
		| hasKey#1 ~> System.Array.MaxByteArrayLength]]
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == array) & !hasKey#12 & (!(dimension < 2) | dimension < 0) | !hasKey#3 & 0 == array ~> 32767
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#12) | 0 == array & hasKey#3 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == array) & !hasKey#12 & (!(dimension < 2) | dimension < 0) | !hasKey#3 & 0 == array ~> 256
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#12) | 0 == array & hasKey#3 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == array) & !hasKey#12 & (!(dimension < 2) | dimension < 0) | !hasKey#3 & 0 == array ~> 1024
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#12) | 0 == array & hasKey#3 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == array) & !hasKey#12 & (!(dimension < 2) | dimension < 0) | !hasKey#3 & 0 == array ~> 255
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#12) | 0 == array & hasKey#3 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> !(0 == array) & (!(dimension < 0) & System.Environment.isUserNonInteractive & dimension < 2 | (!(dimension < 2) | dimension < 0) & System.Environment.isUserNonInteractive & hasKey#12) | 0 == array & System.Environment.isUserNonInteractive & hasKey#3
	| System.Environment.m_os ~> UNION[
		| !(0 == array) & !hasKey#12 & (!(dimension < 2) | dimension < 0) | !hasKey#3 & 0 == array ~> null
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#12) | 0 == array & hasKey#3 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == array) & !hasKey#12 & (!(dimension < 2) | dimension < 0) | !hasKey#3 & 0 == array ~> null
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#12) | 0 == array & hasKey#3 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == array) & !hasKey#12 & (!(dimension < 2) | dimension < 0) | !hasKey#3 & 0 == array ~> null
			| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#12) | 0 == array & hasKey#3 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == array) & (!(dimension < 0) & System.Environment.s_CheckedOSWin8OrAbove & dimension < 2 | (!(dimension < 2) | dimension < 0) & System.Environment.s_CheckedOSWin8OrAbove & hasKey#12) | 0 == array & System.Environment.s_CheckedOSWin8OrAbove & hasKey#3
	| System.Environment.s_CheckedWinRT ~> !(0 == array) & (!(dimension < 0) & System.Environment.s_CheckedWinRT & dimension < 2 | (!(dimension < 2) | dimension < 0) & System.Environment.s_CheckedWinRT & hasKey#12) | 0 == array & System.Environment.s_CheckedWinRT & hasKey#3
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == array) & !hasKey#12 & (!(dimension < 2) | dimension < 0) | !hasKey#3 & 0 == array ~> null
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#12) | 0 == array & hasKey#3 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == array) & (!(dimension < 0) & System.Environment.s_IsWindows8OrAbove & dimension < 2 | (!(dimension < 2) | dimension < 0) & System.Environment.s_IsWindows8OrAbove & hasKey#12) | 0 == array & System.Environment.s_IsWindows8OrAbove & hasKey#3
	| System.Environment.s_WinRTSupported ~> !(0 == array) & (!(dimension < 0) & System.Environment.s_WinRTSupported & dimension < 2 | (!(dimension < 2) | dimension < 0) & System.Environment.s_WinRTSupported & hasKey#12) | 0 == array & System.Environment.s_WinRTSupported & hasKey#3]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == array) & !hasKey#14 & (!(dimension < 2) | dimension < 0) | !hasKey#5 & 0 == array ~> -532462766
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#14) | 0 == array & hasKey#5 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == array) & !hasKey#14 & (!(dimension < 2) | dimension < 0) ~> (HeapRef 10)
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#14) | 0 == array & hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == array ~> (HeapRef 4)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == array) & !hasKey#16 & (!(dimension < 2) | dimension < 0) | !hasKey#7 & 0 == array ~> null
			| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#16) | 0 == array & hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == array) & !hasKey#19 & (!(dimension < 2) | dimension < 0) ~> (HeapRef 12)
		| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#19) | 0 == array & hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == array ~> (HeapRef 6)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == array) & !hasKey#18 & (!(dimension < 2) | dimension < 0) | !hasKey#9 & 0 == array ~> null
			| !(0 == array) & (!(dimension < 0) & dimension < 2 | (!(dimension < 2) | dimension < 0) & hasKey#18) | 0 == array & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.UpperBoundTest()
RESULT: 3
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0, 0: 1;
	0, 1: 1;
	1, 0: 2;
	1, 1: 2;
	2, 0: 3;
	2, 1: 3;
	3, 0: 4;
	3, 1: 4;
	 ... 4 x 2 ... |]
---------- s1 = ----------
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> UNION[
		| !hasKey#1 ~> 2146435071
		| hasKey#1 ~> System.Array.MaxArrayLength]
	| System.Array.MaxByteArrayLength ~> UNION[
		| !hasKey#1 ~> 2147483591
		| hasKey#1 ~> System.Array.MaxByteArrayLength]]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Lists.RankTest()
RESULT: 2
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0, 0: 1;
	0, 1: 1;
	1, 0: 2;
	1, 1: 2;
	2, 0: 3;
	2, 1: 3;
	3, 0: 4;
	3, 1: 4;
	 ... 4 x 2 ... |]
---------- s1 = ----------
System.Array ==> STRUCT System.Array[
	| System.Array.MaxArrayLength ~> UNION[
		| !hasKey#1 ~> 2146435071
		| hasKey#1 ~> System.Array.MaxArrayLength]
	| System.Array.MaxByteArrayLength ~> UNION[
		| !hasKey#1 ~> 2147483591
		| hasKey#1 ~> System.Array.MaxByteArrayLength]]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32[] VSharp.CSharpUtils.Tests.Lists.RetOneDArray1(System.Boolean, System.Boolean)
RESULT: (HeapRef 1)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	1: UNION[
		| !flag1 & flag2 ~> 89
		| flag1 ~> 42];
	 ... 5 ... |]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32[] VSharp.CSharpUtils.Tests.Lists.RetOneDArray2(System.Int32)
RESULT: UNION[
	| !(1 < n) & !(4 < n) & 5 == n & 8 == n | !(4 < n) & !(7 < n) & 5 == n & 8 == n | !(4 < n) & (!(1 < n) & !(8 == n) | !(7 < n) & !(8 == n) | 1 < n & 7 < n) & 5 == n ~> <ERROR: (HeapRef 2)>
	| !(1 < n) & (!(1 < n) & !(5 == n) | !(4 < n) & !(5 == n) | 1 < n & 4 < n) & 8 == n ~> <ERROR: (HeapRef 12)>
	| !(1 < n) & (!(1 < n) & !(8 == n) | !(7 < n) & !(8 == n) | 1 < n & 7 < n) & 4 < n & 5 == n | !(1 < n) & 4 < n & 5 == n & 8 == n ~> <ERROR: (HeapRef 8)>
	| !(7 < n) & (!(1 < n) & !(5 == n) | !(4 < n) & !(5 == n) | 1 < n & 4 < n) & 1 < n & 8 == n ~> <ERROR: (HeapRef 16)>
	| (!(1 < n) & !(5 == n) | !(4 < n) & !(5 == n) | 1 < n & 4 < n) & (!(1 < n) & !(8 == n) | !(7 < n) & !(8 == n) | 1 < n & 7 < n) ~> (HeapRef 1)]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	1: UNION[
		| !(8 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 1 < n & 4 < n & 5 == n | (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 1 < n & 4 < n & 5 == n ~> 42
		| (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 89];
	4: UNION[
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 1 < n & 4 < n & 5 == n ~> 99];
	7: UNION[
		| (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 7 < n & 8 == n ~> 66];
	 ... UNION[
	| !(1 < n) & 5 == n | !(4 < n) & 5 == n | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> n] ... |]
10 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'G'];
		10: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 's'];
		11: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'o'];
		12: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'u'];
		13: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'r'];
		14: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'c'];
		15: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'e'];
		16: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> ' '];
		17: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 's'];
		18: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 't'];
		19: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'r'];
		1: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'e'];
		20: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'i'];
		21: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'n'];
		22: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'g'];
		23: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 's'];
		24: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> ' '];
		25: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'c'];
		26: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'u'];
		27: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'r'];
		28: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'r'];
		29: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'e'];
		2: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 't'];
		30: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'n'];
		31: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 't'];
		32: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'l'];
		33: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'y'];
		34: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> ' '];
		35: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'n'];
		36: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'o'];
		37: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 't'];
		38: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> ' '];
		39: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 's'];
		3: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 't'];
		40: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'u'];
		41: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'p'];
		42: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'p'];
		43: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'o'];
		44: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'r'];
		45: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 't'];
		46: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'e'];
		47: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'd'];
		48: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> '!'];
		49: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> '\000'];
		4: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'i'];
		5: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'n'];
		6: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'g'];
		7: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> ' '];
		8: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'r'];
		9: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'e'];
		 ... UNION[
	| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 49]]
11 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]]
12 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._data ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._innerException ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> (HeapRef 14)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> (HeapRef 15)]
	| System.Exception._source ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Exception._xcode ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 0]]]
13 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'A'];
		10: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'u'];
		11: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 't'];
		12: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'O'];
		13: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'f'];
		14: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'R'];
		15: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'a'];
		16: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'n'];
		17: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'g'];
		18: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'e'];
		19: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'E'];
		1: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'r'];
		20: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'x'];
		21: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'c'];
		22: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'e'];
		23: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'p'];
		24: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 't'];
		25: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'i'];
		26: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'o'];
		27: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'n'];
		28: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> '\000'];
		2: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'g'];
		3: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> '_'];
		4: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'I'];
		5: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'n'];
		6: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'd'];
		7: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'e'];
		8: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'x'];
		9: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'O'];
		 ... UNION[
	| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 28]]
14 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'G'];
		10: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 's'];
		11: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'o'];
		12: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'u'];
		13: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'r'];
		14: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'c'];
		15: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'e'];
		16: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> ' '];
		17: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 's'];
		18: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 't'];
		19: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'r'];
		1: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'e'];
		20: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'i'];
		21: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'n'];
		22: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'g'];
		23: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 's'];
		24: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> ' '];
		25: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'c'];
		26: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'u'];
		27: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'r'];
		28: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'r'];
		29: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'e'];
		2: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 't'];
		30: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'n'];
		31: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 't'];
		32: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'l'];
		33: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'y'];
		34: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> ' '];
		35: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'n'];
		36: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'o'];
		37: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 't'];
		38: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> ' '];
		39: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 's'];
		3: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 't'];
		40: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'u'];
		41: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'p'];
		42: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'p'];
		43: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'o'];
		44: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'r'];
		45: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 't'];
		46: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'e'];
		47: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'd'];
		48: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> '!'];
		49: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> '\000'];
		4: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'i'];
		5: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'n'];
		6: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'g'];
		7: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> ' '];
		8: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'r'];
		9: UNION[
			| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 'e'];
		 ... UNION[
	| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> 49]]
15 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(1 < n) & !(5 == n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & 8 == n ~> null]]
16 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._data ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._innerException ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> (HeapRef 18)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> (HeapRef 19)]
	| System.Exception._source ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Exception._xcode ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 0]]]
17 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'A'];
		10: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'u'];
		11: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 't'];
		12: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'O'];
		13: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'f'];
		14: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'R'];
		15: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'a'];
		16: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'n'];
		17: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'g'];
		18: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'e'];
		19: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'E'];
		1: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'r'];
		20: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'x'];
		21: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'c'];
		22: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'e'];
		23: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'p'];
		24: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 't'];
		25: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'i'];
		26: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'o'];
		27: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'n'];
		28: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> '\000'];
		2: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'g'];
		3: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> '_'];
		4: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'I'];
		5: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'n'];
		6: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'd'];
		7: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'e'];
		8: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'x'];
		9: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'O'];
		 ... UNION[
	| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 28]]
18 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'G'];
		10: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 's'];
		11: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'o'];
		12: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'u'];
		13: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'r'];
		14: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'c'];
		15: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'e'];
		16: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> ' '];
		17: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 's'];
		18: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 't'];
		19: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'r'];
		1: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'e'];
		20: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'i'];
		21: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'n'];
		22: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'g'];
		23: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 's'];
		24: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> ' '];
		25: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'c'];
		26: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'u'];
		27: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'r'];
		28: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'r'];
		29: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'e'];
		2: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 't'];
		30: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'n'];
		31: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 't'];
		32: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'l'];
		33: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'y'];
		34: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> ' '];
		35: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'n'];
		36: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'o'];
		37: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 't'];
		38: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> ' '];
		39: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 's'];
		3: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 't'];
		40: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'u'];
		41: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'p'];
		42: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'p'];
		43: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'o'];
		44: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'r'];
		45: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 't'];
		46: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'e'];
		47: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'd'];
		48: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> '!'];
		49: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> '\000'];
		4: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'i'];
		5: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'n'];
		6: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'g'];
		7: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> ' '];
		8: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'r'];
		9: UNION[
			| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 'e'];
		 ... UNION[
	| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> 49]]
19 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(7 < n) & (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 4 < n) & 1 < n & 8 == n ~> null]]
2 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._data ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._innerException ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]]
	| System.Exception._message ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> (HeapRef 4)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> (HeapRef 6)]
	| System.Exception._source ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Exception._xcode ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 0]]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'A'];
		10: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'u'];
		11: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		12: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'O'];
		13: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'f'];
		14: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'R'];
		15: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'a'];
		16: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		17: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'g'];
		18: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		19: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'E'];
		1: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		20: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'x'];
		21: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'c'];
		22: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		23: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'p'];
		24: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		25: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'i'];
		26: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'o'];
		27: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		28: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> '\000'];
		2: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'g'];
		3: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> '_'];
		4: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'I'];
		5: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		6: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'd'];
		7: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		8: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'x'];
		9: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'O'];
		 ... UNION[
	| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 28]]
4 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'G'];
		10: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 's'];
		11: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'o'];
		12: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'u'];
		13: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		14: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'c'];
		15: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		16: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> ' '];
		17: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 's'];
		18: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		19: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		1: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		20: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'i'];
		21: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		22: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'g'];
		23: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 's'];
		24: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> ' '];
		25: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'c'];
		26: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'u'];
		27: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		28: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		29: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		2: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		30: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		31: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		32: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'l'];
		33: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'y'];
		34: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> ' '];
		35: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		36: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'o'];
		37: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		38: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> ' '];
		39: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 's'];
		3: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		40: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'u'];
		41: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'p'];
		42: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'p'];
		43: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'o'];
		44: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		45: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		46: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		47: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'd'];
		48: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> '!'];
		49: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> '\000'];
		4: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'i'];
		5: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		6: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'g'];
		7: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> ' '];
		8: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		9: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		 ... UNION[
	| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 49]]
5 ==> STRUCT System.Object[]
6 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null]]
7 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'C'];
		10: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		11: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'i'];
		12: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'a'];
		13: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'l'];
		14: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'i'];
		15: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'z'];
		16: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'a'];
		17: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 't'];
		18: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'i'];
		19: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'o'];
		1: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'L'];
		20: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		21: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'M'];
		22: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'a'];
		23: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'n'];
		24: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'a'];
		25: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'g'];
		26: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		27: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'r'];
		28: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> '_'];
		29: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'R'];
		2: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'R'];
		30: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		31: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'a'];
		32: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'l'];
		33: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'T'];
		34: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'y'];
		35: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'p'];
		36: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		37: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> '\000'];
		3: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> '_'];
		4: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'S'];
		5: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'a'];
		6: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'f'];
		7: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		8: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'S'];
		9: UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 'e'];
		 ... UNION[
	| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 37]]
8 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._data ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._innerException ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> (HeapRef 10)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> (HeapRef 11)]
	| System.Exception._source ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> null]
	| System.Exception._xcode ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 0]]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'A'];
		10: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'u'];
		11: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 't'];
		12: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'O'];
		13: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'f'];
		14: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'R'];
		15: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'a'];
		16: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'n'];
		17: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'g'];
		18: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'e'];
		19: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'E'];
		1: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'r'];
		20: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'x'];
		21: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'c'];
		22: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'e'];
		23: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'p'];
		24: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 't'];
		25: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'i'];
		26: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'o'];
		27: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'n'];
		28: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> '\000'];
		2: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'g'];
		3: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> '_'];
		4: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'I'];
		5: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'n'];
		6: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'd'];
		7: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'e'];
		8: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'x'];
		9: UNION[
			| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 'O'];
		 ... UNION[
	| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(1 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 4 < n & 5 == n ~> 28]]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 32767
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 256
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 1024
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> 255
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> (!(1 < n) & 5 == n | !(4 < n) & 5 == n | (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n)) & ((!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) & System.Environment.isUserNonInteractive | 4 < n & System.Environment.isUserNonInteractive) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) & System.Environment.isUserNonInteractive | 4 < n & System.Environment.isUserNonInteractive) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n))
	| System.Environment.m_os ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null
			| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> (!(1 < n) & 5 == n | !(4 < n) & 5 == n | (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n)) & ((!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) & System.Environment.s_CheckedOSWin8OrAbove | 4 < n & System.Environment.s_CheckedOSWin8OrAbove) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) & System.Environment.s_CheckedOSWin8OrAbove | 4 < n & System.Environment.s_CheckedOSWin8OrAbove) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n))
	| System.Environment.s_CheckedWinRT ~> (!(1 < n) & 5 == n | !(4 < n) & 5 == n | (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n)) & ((!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) & System.Environment.s_CheckedWinRT | 4 < n & System.Environment.s_CheckedWinRT) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) & System.Environment.s_CheckedWinRT | 4 < n & System.Environment.s_CheckedWinRT) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n))
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> (!(1 < n) & 5 == n | !(4 < n) & 5 == n | (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n)) & ((!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) & System.Environment.s_IsWindows8OrAbove | 4 < n & System.Environment.s_IsWindows8OrAbove) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) & System.Environment.s_IsWindows8OrAbove | 4 < n & System.Environment.s_IsWindows8OrAbove) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n))
	| System.Environment.s_WinRTSupported ~> (!(1 < n) & 5 == n | !(4 < n) & 5 == n | (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n)) & ((!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) & System.Environment.s_WinRTSupported | 4 < n & System.Environment.s_WinRTSupported) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) & System.Environment.s_WinRTSupported | 4 < n & System.Environment.s_WinRTSupported) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n))]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> -532462766
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> (HeapRef 5)
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> (HeapRef System.Exception.s_EDILock)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null
			| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> (HeapRef 7)
		| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(4 < n) & (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & 5 == n ~> null
			| (!(1 < n) & 5 == n | !(4 < n) & 5 == n) & (!(5 == n) | 4 < n) | (!(1 < n) & 8 == n | !(7 < n) & 8 == n | (!(8 == n) | 1 < n) & (!(8 == n) | 7 < n)) & (!(5 == n) | 1 < n) & (!(5 == n) | 4 < n) ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Array VSharp.CSharpUtils.Tests.Lists.RetSystemArray1(System.Array)
RESULT: UNION[
	| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> <ERROR: UNION[
		| !(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 7)
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr ~> (HeapRef 1)]>
	| !(0 == arr) & !(1 < arr.1_Length) & !(ArrayTypeVariable1 <: System.Int32[]) & (ArrayTypeVariable1 <: System.Int32[,]) & 1 < arr.0_Length | !(0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[]) | ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) & 1 < arr.0_Length ~> (HeapRef arr)
	| !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) & 1 < arr.0_Length ~> <ERROR: (HeapRef 7)>
	| !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) ~> <ERROR: (HeapRef 1)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#8 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) & hasKey#8 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 0]]]
10 ==> STRUCT System.Object[]
11 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]]
12 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'C'];
		10: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		11: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		12: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'a'];
		13: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'l'];
		14: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		15: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'z'];
		16: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'a'];
		17: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		18: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		19: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		1: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'L'];
		20: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		21: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'M'];
		22: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'a'];
		23: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		24: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'a'];
		25: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		26: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		27: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		28: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '_'];
		29: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'R'];
		2: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'R'];
		30: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		31: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'a'];
		32: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'l'];
		33: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'T'];
		34: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'y'];
		35: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'p'];
		36: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		37: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '\000'];
		3: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '_'];
		4: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'S'];
		5: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'a'];
		6: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'f'];
		7: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		8: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'S'];
		9: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		 ... UNION[
	| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 37]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'A'];
		10: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'u'];
		11: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		12: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'O'];
		13: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'f'];
		14: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'R'];
		15: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		16: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		17: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		18: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		19: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'E'];
		1: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		20: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'x'];
		21: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'c'];
		22: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		23: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'p'];
		24: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		25: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		26: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		27: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		28: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> '\000'];
		2: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		3: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> '_'];
		4: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'I'];
		5: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'd'];
		7: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		8: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'x'];
		9: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'O'];
		 ... UNION[
	| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 28]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'G'];
		10: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 's'];
		11: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		12: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'u'];
		13: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		14: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'c'];
		15: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		16: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		17: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 's'];
		18: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		19: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		1: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		20: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		21: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		22: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		23: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 's'];
		24: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		25: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'c'];
		26: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'u'];
		27: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		28: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		29: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		2: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		30: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		31: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		32: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'l'];
		33: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'y'];
		34: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		35: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		36: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		37: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		38: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		39: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 's'];
		3: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		40: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'u'];
		41: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'p'];
		42: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'p'];
		43: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		44: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		45: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		46: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		47: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'd'];
		48: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> '!'];
		49: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> '\000'];
		4: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		5: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		7: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		8: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		9: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		 ... UNION[
	| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'C'];
		10: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		11: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		12: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		13: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'l'];
		14: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		15: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'z'];
		16: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		17: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		18: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		19: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		1: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'L'];
		20: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		21: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'M'];
		22: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		23: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		24: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		25: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		26: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		27: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		28: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> '_'];
		29: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'R'];
		2: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'R'];
		30: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		31: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		32: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'l'];
		33: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'T'];
		34: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'y'];
		35: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'p'];
		36: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		37: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> '\000'];
		3: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> '_'];
		4: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'S'];
		5: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		6: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'f'];
		7: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		8: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'S'];
		9: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		 ... UNION[
	| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> 37]]
7 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#17 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) & hasKey#17 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> (HeapRef 9)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> (HeapRef 11)]
	| System.Exception._source ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 0]]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'A'];
		10: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'u'];
		11: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		12: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'O'];
		13: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'f'];
		14: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'R'];
		15: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'a'];
		16: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		17: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		18: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		19: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'E'];
		1: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		20: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'x'];
		21: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'c'];
		22: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		23: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'p'];
		24: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		25: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		26: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		27: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		28: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '\000'];
		2: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		3: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '_'];
		4: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'I'];
		5: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'd'];
		7: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		8: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'x'];
		9: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'O'];
		 ... UNION[
	| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 28]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'G'];
		10: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 's'];
		11: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		12: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'u'];
		13: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		14: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'c'];
		15: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		16: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		17: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 's'];
		18: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		19: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		1: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		20: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		21: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		22: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		23: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 's'];
		24: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		25: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'c'];
		26: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'u'];
		27: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		28: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		29: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		2: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		30: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		31: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		32: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'l'];
		33: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'y'];
		34: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		35: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		36: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		37: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		38: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		39: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 's'];
		3: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		40: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'u'];
		41: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'p'];
		42: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'p'];
		43: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		44: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		45: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		46: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		47: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'd'];
		48: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '!'];
		49: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '\000'];
		4: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		5: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		7: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		8: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		9: UNION[
			| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		 ... UNION[
	| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 49]]
arr ==> TypeVariable1{System.Object}: [|
	1, 1: UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length) ~> STRUCT TypeVariable6{TypeVariable1{System.Object}}[]
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) & 1 < arr.0_Length & 1 < arr.1_Length ~> 7];
	1: UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length) ~> STRUCT TypeVariable7{TypeVariable1{System.Object}}[]
		| !(0 == arr) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) & 1 < arr.0_Length ~> 5];
	 ...  ... |]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#11 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> 32767
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#11 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#11 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> 256
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#11 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#11 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> 1024
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#11 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#11 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> 255
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#11 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length & System.Environment.isUserNonInteractive | System.Environment.isUserNonInteractive & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & System.Environment.isUserNonInteractive & hasKey#11 | 1 < arr.0_Length & 1 < arr.1_Length & System.Environment.isUserNonInteractive) & (ArrayTypeVariable1 <: System.Int32[,]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) & System.Environment.isUserNonInteractive) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr))
	| System.Environment.m_os ~> UNION[
		| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#11 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> null
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#11 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#11 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> null
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#11 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#11 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> null
			| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#11 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length & System.Environment.s_CheckedOSWin8OrAbove | System.Environment.s_CheckedOSWin8OrAbove & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & System.Environment.s_CheckedOSWin8OrAbove & hasKey#11 | 1 < arr.0_Length & 1 < arr.1_Length & System.Environment.s_CheckedOSWin8OrAbove) & (ArrayTypeVariable1 <: System.Int32[,]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) & System.Environment.s_CheckedOSWin8OrAbove) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr))
	| System.Environment.s_CheckedWinRT ~> (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length & System.Environment.s_CheckedWinRT | System.Environment.s_CheckedWinRT & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & System.Environment.s_CheckedWinRT & hasKey#11 | 1 < arr.0_Length & 1 < arr.1_Length & System.Environment.s_CheckedWinRT) & (ArrayTypeVariable1 <: System.Int32[,]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) & System.Environment.s_CheckedWinRT) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr))
	| System.Environment.s_InternalSyncObject ~> UNION[
		| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#11 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> null
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#11 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length & System.Environment.s_IsWindows8OrAbove | System.Environment.s_IsWindows8OrAbove & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & System.Environment.s_IsWindows8OrAbove & hasKey#11 | 1 < arr.0_Length & 1 < arr.1_Length & System.Environment.s_IsWindows8OrAbove) & (ArrayTypeVariable1 <: System.Int32[,]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) & System.Environment.s_IsWindows8OrAbove) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr))
	| System.Environment.s_WinRTSupported ~> (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length & System.Environment.s_WinRTSupported | System.Environment.s_WinRTSupported & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & System.Environment.s_WinRTSupported & hasKey#11 | 1 < arr.0_Length & 1 < arr.1_Length & System.Environment.s_WinRTSupported) & (ArrayTypeVariable1 <: System.Int32[,]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) & System.Environment.s_WinRTSupported) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr))]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#4 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#13 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> -532462766
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#4) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#13 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#4 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 4)
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#13 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> (HeapRef 10)
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#4) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#13 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> (HeapRef System.Exception.s_EDILock)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#6 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#15 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> null
			| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#6) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#15 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 6)
		| !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#18 & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,]) ~> (HeapRef 12)
		| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#9) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#18 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| (!(0 == arr) & !(1 < arr.0_Length) & !hasKey#8 & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(ArrayTypeVariable1 <: System.Int32[]) & !hasKey#17 & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) ~> null
			| (!(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & !(1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,]) & (ArrayTypeVariable1 <: System.Int32[]) | !(1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[]) | (!(0 == arr) & (ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) | 1 < arr.0_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr | 1 < arr.0_Length)) & (!(0 == arr) & (1 < arr.0_Length | hasKey#8) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[,]) | (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & hasKey#17 | 0 == arr | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr)) ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Array VSharp.CSharpUtils.Tests.Lists.RetSystemArray2(System.Array)
RESULT: UNION[
	| !(0 == arr) & !(1 < arr.0_Length) & (!(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,,]) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length & 1 < arr.2_Length) & (ArrayTypeVariable1 <: System.Int32[,])) & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(1 < arr.0_Length) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length & 1 < arr.2_Length) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[]) | !(0 == arr) & !(1 < arr.0_Length) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) & (ArrayTypeVariable1 <: System.Int32[]) ~> <ERROR: (HeapRef 1)>
	| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> <ERROR: (HeapRef 11)>
	| (!(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (ArrayTypeVariable1 <: System.Int32[,,]) & (ArrayTypeVariable1 <: System.Int32[,]) | !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length & 1 < arr.2_Length) & (ArrayTypeVariable1 <: System.Int32[,])) & (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length) ~> <ERROR: (HeapRef 7)>
	| (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length & 1 < arr.2_Length) & ((!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 0 == arr) | 1 < arr.0_Length & 1 < arr.1_Length) ~> (HeapRef arr)]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#8 & (ArrayTypeVariable1 <: System.Int32[]) ~> null
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) & hasKey#8 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 3)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 0]]]
10 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]]
11 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length | hasKey#8) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> (HeapRef 13)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> (HeapRef 14)]
	| System.Exception._source ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 0]]]
12 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'A'];
		10: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'u'];
		11: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 't'];
		12: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'O'];
		13: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'f'];
		14: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'R'];
		15: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'a'];
		16: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'n'];
		17: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'g'];
		18: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'e'];
		19: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'E'];
		1: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'r'];
		20: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'x'];
		21: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'c'];
		22: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'e'];
		23: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'p'];
		24: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 't'];
		25: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'i'];
		26: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'o'];
		27: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'n'];
		28: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> '\000'];
		2: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'g'];
		3: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> '_'];
		4: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'I'];
		5: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'd'];
		7: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'e'];
		8: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'x'];
		9: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'O'];
		 ... UNION[
	| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 28]]
13 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'G'];
		10: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 's'];
		11: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'o'];
		12: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'u'];
		13: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'r'];
		14: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'c'];
		15: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'e'];
		16: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> ' '];
		17: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 's'];
		18: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 't'];
		19: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'r'];
		1: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'e'];
		20: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'i'];
		21: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'n'];
		22: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'g'];
		23: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 's'];
		24: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> ' '];
		25: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'c'];
		26: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'u'];
		27: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'r'];
		28: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'r'];
		29: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'e'];
		2: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 't'];
		30: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'n'];
		31: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 't'];
		32: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'l'];
		33: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'y'];
		34: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> ' '];
		35: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'n'];
		36: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'o'];
		37: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 't'];
		38: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> ' '];
		39: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 's'];
		3: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 't'];
		40: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'u'];
		41: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'p'];
		42: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'p'];
		43: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'o'];
		44: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'r'];
		45: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 't'];
		46: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'e'];
		47: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'd'];
		48: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> '!'];
		49: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> '\000'];
		4: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'i'];
		5: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'g'];
		7: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> ' '];
		8: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'r'];
		9: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 'e'];
		 ... UNION[
	| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> 49]]
14 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length) | !(1 < arr.2_Length)) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) ~> null]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'A'];
		10: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'u'];
		11: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		12: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'O'];
		13: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'f'];
		14: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'R'];
		15: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		16: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		17: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		18: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		19: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'E'];
		1: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		20: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'x'];
		21: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'c'];
		22: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		23: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'p'];
		24: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		25: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		26: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		27: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		28: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> '\000'];
		2: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		3: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> '_'];
		4: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'I'];
		5: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'd'];
		7: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		8: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'x'];
		9: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'O'];
		 ... UNION[
	| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 28]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'G'];
		10: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 's'];
		11: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		12: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'u'];
		13: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		14: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'c'];
		15: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		16: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		17: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 's'];
		18: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		19: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		1: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		20: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		21: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		22: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		23: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 's'];
		24: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		25: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'c'];
		26: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'u'];
		27: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		28: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		29: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		2: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		30: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		31: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		32: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'l'];
		33: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'y'];
		34: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		35: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		36: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		37: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		38: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		39: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 's'];
		3: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		40: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'u'];
		41: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'p'];
		42: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'p'];
		43: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		44: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		45: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		46: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		47: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'd'];
		48: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> '!'];
		49: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> '\000'];
		4: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		5: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		7: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> ' '];
		8: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		9: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		 ... UNION[
	| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> 49]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[]) ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'C'];
		10: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		11: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		12: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		13: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'l'];
		14: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		15: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'z'];
		16: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		17: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 't'];
		18: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'i'];
		19: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'o'];
		1: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'L'];
		20: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		21: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'M'];
		22: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		23: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'n'];
		24: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		25: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'g'];
		26: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		27: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'r'];
		28: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> '_'];
		29: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'R'];
		2: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'R'];
		30: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		31: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		32: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'l'];
		33: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'T'];
		34: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'y'];
		35: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'p'];
		36: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		37: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> '\000'];
		3: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> '_'];
		4: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'S'];
		5: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'a'];
		6: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'f'];
		7: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		8: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'S'];
		9: UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 'e'];
		 ... UNION[
	| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> 37]]
7 ==> STRUCT System.IndexOutOfRangeException[
	| System.Exception._HResult ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> -2146233080]
	| System.Exception._className ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._data ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._innerException ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length | hasKey#8) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> (HeapRef 9)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> (HeapRef 10)]
	| System.Exception._source ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> null]
	| System.Exception._xcode ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 0]]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'A'];
		10: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'u'];
		11: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		12: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'O'];
		13: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'f'];
		14: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'R'];
		15: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'a'];
		16: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		17: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		18: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		19: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'E'];
		1: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		20: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'x'];
		21: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'c'];
		22: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		23: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'p'];
		24: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		25: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		26: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		27: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		28: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '\000'];
		2: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		3: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '_'];
		4: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'I'];
		5: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'd'];
		7: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		8: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'x'];
		9: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'O'];
		 ... UNION[
	| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 28]]
9 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'G'];
		10: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 's'];
		11: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		12: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'u'];
		13: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		14: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'c'];
		15: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		16: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		17: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 's'];
		18: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		19: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		1: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		20: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		21: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		22: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		23: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 's'];
		24: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		25: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'c'];
		26: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'u'];
		27: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		28: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		29: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		2: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		30: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		31: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		32: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'l'];
		33: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'y'];
		34: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		35: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		36: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		37: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		38: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		39: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 's'];
		3: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		40: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'u'];
		41: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'p'];
		42: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'p'];
		43: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'o'];
		44: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		45: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 't'];
		46: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		47: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'd'];
		48: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '!'];
		49: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> '\000'];
		4: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'i'];
		5: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'n'];
		6: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'g'];
		7: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> ' '];
		8: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'r'];
		9: UNION[
			| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 'e'];
		 ... UNION[
	| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 50] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == arr) & (!(1 < arr.0_Length) | !(1 < arr.1_Length)) & (!(ArrayTypeVariable1 <: System.Int32[]) | 1 < arr.0_Length) & (ArrayTypeVariable1 <: System.Int32[,]) ~> 49]]
arr ==> TypeVariable1{System.Object}: [|
	1, 1, 1: UNION[
		| !(0 == arr) & (!(ArrayTypeVariable1 <: System.Int32[,]) | 1 < arr.0_Length & 1 < arr.1_Length) & (ArrayTypeVariable1 <: System.Int32[,,]) & 1 < arr.0_Length & 1 < arr.1_Length & 1 < arr.2_Length ~> 42
		| True ~> STRUCT TypeVariable10{TypeVariable1{System.Object}}[]];
	1, 1: STRUCT TypeVariable12{TypeVariable1{System.Object}}[];
	1: STRUCT TypeVariable4{TypeVariable1{System.Object}}[];
	 ...  ... |]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) ~> 32767
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#2 ~> System.Environment.MaxEnvVariableValueLength]
	| System.Environment.MaxMachineNameLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) ~> 256
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#2 ~> System.Environment.MaxMachineNameLength]
	| System.Environment.MaxSystemEnvVariableLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) ~> 1024
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#2 ~> System.Environment.MaxSystemEnvVariableLength]
	| System.Environment.MaxUserEnvVariableLength ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) ~> 255
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#2 ~> System.Environment.MaxUserEnvVariableLength]
	| System.Environment.isUserNonInteractive ~> !(0 == arr) & (1 < arr.0_Length & System.Environment.isUserNonInteractive | System.Environment.isUserNonInteractive & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & System.Environment.isUserNonInteractive
	| System.Environment.m_os ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) ~> null
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#2 ~> (HeapRef System.Environment.m_os)]
	| System.Environment.m_resHelper ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) ~> null
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#2 ~> (HeapRef System.Environment.m_resHelper)]
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) ~> null
			| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#2 ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == arr) & (1 < arr.0_Length & System.Environment.s_CheckedOSWin8OrAbove | System.Environment.s_CheckedOSWin8OrAbove & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & System.Environment.s_CheckedOSWin8OrAbove
	| System.Environment.s_CheckedWinRT ~> !(0 == arr) & (1 < arr.0_Length & System.Environment.s_CheckedWinRT | System.Environment.s_CheckedWinRT & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & System.Environment.s_CheckedWinRT
	| System.Environment.s_InternalSyncObject ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#2 & (ArrayTypeVariable1 <: System.Int32[]) ~> null
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#2 ~> (HeapRef System.Environment.s_InternalSyncObject)]
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == arr) & (1 < arr.0_Length & System.Environment.s_IsWindows8OrAbove | System.Environment.s_IsWindows8OrAbove & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & System.Environment.s_IsWindows8OrAbove
	| System.Environment.s_WinRTSupported ~> !(0 == arr) & (1 < arr.0_Length & System.Environment.s_WinRTSupported | System.Environment.s_WinRTSupported & hasKey#2) & (ArrayTypeVariable1 <: System.Int32[]) | (!(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr) & System.Environment.s_WinRTSupported]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#4 & (ArrayTypeVariable1 <: System.Int32[]) ~> -532462766
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#4 ~> System.Exception._COMPlusExceptionCode]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#4 & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 4)
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#4 ~> (HeapRef System.Exception.s_EDILock)]]
System.IndexOutOfRangeException ==> STRUCT System.IndexOutOfRangeException[]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#6 & (ArrayTypeVariable1 <: System.Int32[]) ~> null
			| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#6 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#9 & (ArrayTypeVariable1 <: System.Int32[]) ~> (HeapRef 6)
		| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#9 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == arr) & !(1 < arr.0_Length) & !hasKey#8 & (ArrayTypeVariable1 <: System.Int32[]) ~> null
			| !(ArrayTypeVariable1 <: System.Int32[]) | 0 == arr | 1 < arr.0_Length | hasKey#8 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Lists ==> STRUCT VSharp.CSharpUtils.Tests.Lists[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.ChangeThroughIndirection()
RESULT: 14
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.CharSizeOf()
RESULT: 2
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.StrangeSizeOf()
RESULT: 70
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.ReturnConst()
RESULT: 421234123
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.DoubleIndirection()
RESULT: 428999
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.ReturnIntFromIntPtr(System.Int32)
RESULT: myFavouriteParameter
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#1 ~> null
			| hasKey#1 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Void* VSharp.CSharpUtils.Tests.Unsafe.CompilerHackLikePtrReturn(System.Void*)
RESULT: (HeapPtr ptr as System.Void)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !hasKey#1 ~> null
			| hasKey#1 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)]]]
System.Object ==> STRUCT System.Object[]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.SimplePointerDifference(System.Int32, System.Double)
RESULT: x
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Unsafe.PointerTriangle(System.Int32, System.Int32, System.Int32)
RESULT: x
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Unsafe ==> STRUCT VSharp.CSharpUtils.Tests.Unsafe[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Methods.VirtualB.F()
RESULT: 8
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualB ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualB[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Methods.VirtualE.F()
RESULT: 9
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualE ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualE[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Methods.VirtualC.F()
RESULT: 7
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualC ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualC[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Methods.VirtualG.F()
RESULT: 66
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualG ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualG[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.IMovable VSharp.CSharpUtils.Tests.Methods.VirtualMethod.MakeVirtualMove(VSharp.CSharpUtils.Tests.Typecast.Pawn, VSharp.CSharpUtils.Tests.Typecast.Coord)
RESULT: UNION[
	| !(0 == p) ~> (HeapRef p)
	| 0 == p ~> <ERROR: (HeapRef 3)>]
HEAP:
{ heap = merge[
	((VSharp.CSharpUtils.Tests.Typecast.Pawn <: TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Pawn}) | 0 == p, h0),
	(!(0 == p) & !(VSharp.CSharpUtils.Tests.Typecast.Pawn <: TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Pawn}), { heap = <empty>, statics = s1 } ⚪ app(MakeMove((HeapRef p), STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[])))], statics = s2 } where
---------- h0 = ----------
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == p ~> 'S'];
		10: UNION[
			| 0 == p ~> 'c'];
		11: UNION[
			| 0 == p ~> 'a'];
		12: UNION[
			| 0 == p ~> 's'];
		13: UNION[
			| 0 == p ~> 't'];
		14: UNION[
			| 0 == p ~> ' '];
		15: UNION[
			| 0 == p ~> 'i'];
		16: UNION[
			| 0 == p ~> 's'];
		17: UNION[
			| 0 == p ~> ' '];
		18: UNION[
			| 0 == p ~> 'n'];
		19: UNION[
			| 0 == p ~> 'o'];
		1: UNION[
			| 0 == p ~> 'p'];
		20: UNION[
			| 0 == p ~> 't'];
		21: UNION[
			| 0 == p ~> ' '];
		22: UNION[
			| 0 == p ~> 'v'];
		23: UNION[
			| 0 == p ~> 'a'];
		24: UNION[
			| 0 == p ~> 'l'];
		25: UNION[
			| 0 == p ~> 'i'];
		26: UNION[
			| 0 == p ~> 'd'];
		27: UNION[
			| 0 == p ~> '.'];
		28: UNION[
			| 0 == p ~> '\000'];
		2: UNION[
			| 0 == p ~> 'e'];
		3: UNION[
			| 0 == p ~> 'c'];
		4: UNION[
			| 0 == p ~> 'i'];
		5: UNION[
			| 0 == p ~> 'f'];
		6: UNION[
			| 0 == p ~> 'i'];
		7: UNION[
			| 0 == p ~> 'e'];
		8: UNION[
			| 0 == p ~> 'd'];
		9: UNION[
			| 0 == p ~> ' '];
		 ... UNION[
	| 0 == p ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == p ~> 28]]
3 ==> STRUCT System.InvalidCastException[
	| System.Exception._HResult ~> UNION[
		| 0 == p ~> -2147467262]
	| System.Exception._className ~> UNION[
		| 0 == p ~> null]
	| System.Exception._data ~> UNION[
		| 0 == p ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == p ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == p ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == p ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == p ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == p ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#9 & 0 == p ~> null
			| 0 == p & hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == p ~> (HeapRef 2)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == p ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == p ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == p ~> (HeapRef 5)]
	| System.Exception._source ~> UNION[
		| 0 == p ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == p ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == p ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == p ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == p ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == p ~> 0]]]
4 ==> STRUCT System.Object[]
5 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == p ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == p ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == p ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == p ~> null]]
6 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#10 & 0 == p ~> 'C'];
		10: UNION[
			| !hasKey#10 & 0 == p ~> 'r'];
		11: UNION[
			| !hasKey#10 & 0 == p ~> 'i'];
		12: UNION[
			| !hasKey#10 & 0 == p ~> 'a'];
		13: UNION[
			| !hasKey#10 & 0 == p ~> 'l'];
		14: UNION[
			| !hasKey#10 & 0 == p ~> 'i'];
		15: UNION[
			| !hasKey#10 & 0 == p ~> 'z'];
		16: UNION[
			| !hasKey#10 & 0 == p ~> 'a'];
		17: UNION[
			| !hasKey#10 & 0 == p ~> 't'];
		18: UNION[
			| !hasKey#10 & 0 == p ~> 'i'];
		19: UNION[
			| !hasKey#10 & 0 == p ~> 'o'];
		1: UNION[
			| !hasKey#10 & 0 == p ~> 'L'];
		20: UNION[
			| !hasKey#10 & 0 == p ~> 'n'];
		21: UNION[
			| !hasKey#10 & 0 == p ~> 'M'];
		22: UNION[
			| !hasKey#10 & 0 == p ~> 'a'];
		23: UNION[
			| !hasKey#10 & 0 == p ~> 'n'];
		24: UNION[
			| !hasKey#10 & 0 == p ~> 'a'];
		25: UNION[
			| !hasKey#10 & 0 == p ~> 'g'];
		26: UNION[
			| !hasKey#10 & 0 == p ~> 'e'];
		27: UNION[
			| !hasKey#10 & 0 == p ~> 'r'];
		28: UNION[
			| !hasKey#10 & 0 == p ~> '_'];
		29: UNION[
			| !hasKey#10 & 0 == p ~> 'R'];
		2: UNION[
			| !hasKey#10 & 0 == p ~> 'R'];
		30: UNION[
			| !hasKey#10 & 0 == p ~> 'e'];
		31: UNION[
			| !hasKey#10 & 0 == p ~> 'a'];
		32: UNION[
			| !hasKey#10 & 0 == p ~> 'l'];
		33: UNION[
			| !hasKey#10 & 0 == p ~> 'T'];
		34: UNION[
			| !hasKey#10 & 0 == p ~> 'y'];
		35: UNION[
			| !hasKey#10 & 0 == p ~> 'p'];
		36: UNION[
			| !hasKey#10 & 0 == p ~> 'e'];
		37: UNION[
			| !hasKey#10 & 0 == p ~> '\000'];
		3: UNION[
			| !hasKey#10 & 0 == p ~> '_'];
		4: UNION[
			| !hasKey#10 & 0 == p ~> 'S'];
		5: UNION[
			| !hasKey#10 & 0 == p ~> 'a'];
		6: UNION[
			| !hasKey#10 & 0 == p ~> 'f'];
		7: UNION[
			| !hasKey#10 & 0 == p ~> 'e'];
		8: UNION[
			| !hasKey#10 & 0 == p ~> 'S'];
		9: UNION[
			| !hasKey#10 & 0 == p ~> 'e'];
		 ... UNION[
	| !hasKey#10 & 0 == p ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#10 & 0 == p ~> 37]]
p ==> STRUCT TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Pawn}[
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> UNION[
		| !(0 == p) & (VSharp.CSharpUtils.Tests.Typecast.Pawn <: TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Pawn}) ~> VSharp.CSharpUtils.Tests.Typecast.Coord.X + VSharp.CSharpUtils.Tests.Typecast.Coord.Y
		| 0 == p ~> p.VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord]
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> UNION[
		| !(0 == p) & (VSharp.CSharpUtils.Tests.Typecast.Pawn <: TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Pawn}) ~> -VSharp.CSharpUtils.Tests.Typecast.Coord.Y + VSharp.CSharpUtils.Tests.Typecast.Coord.X
		| 0 == p ~> p.VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord]]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
---------- s2 = ----------
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == p) | hasKey#5 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#5 & 0 == p ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == p) | hasKey#5 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#5 & 0 == p ~> (HeapRef 4)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == p) | hasKey#7 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#7 & 0 == p ~> null]]]
System.InvalidCastException ==> STRUCT System.InvalidCastException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == p) | hasKey#10 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#10 & 0 == p ~> (HeapRef 6)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == p) | hasKey#9 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#9 & 0 == p ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
VSharp.CSharpUtils.Tests.Typecast.Coord ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.IMovable VSharp.CSharpUtils.Tests.Methods.VirtualMethod.MakeInterfaceMove(VSharp.CSharpUtils.Tests.Typecast.IMovable, VSharp.CSharpUtils.Tests.Typecast.Coord)
RESULT: UNION[
	| !(0 == p) ~> MakeMove((HeapRef p), STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[])
	| 0 == p ~> null]
HEAP:
{ heap = merge[
	(!(0 == p) & !(VSharp.CSharpUtils.Tests.Typecast.IMovable <: TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.IMovable}), { heap = <empty>, statics = s0 } ⚪ app(MakeMove((HeapRef p), STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]))),
	(!(0 == p) & (VSharp.CSharpUtils.Tests.Typecast.IMovable <: TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.IMovable}), { heap = <empty>, statics = s0 } ⚪ app(MakeMove((HeapRef p), STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]))),
	(0 == p, <empty>)], statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
VSharp.CSharpUtils.Tests.Typecast.IMovable ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.IMovable[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.IMovable VSharp.CSharpUtils.Tests.Methods.VirtualMethod.MakeConcreteMove(VSharp.CSharpUtils.Tests.Typecast.Coord)
RESULT: (HeapRef 1)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> 0
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> VSharp.CSharpUtils.Tests.Typecast.Coord.X
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> VSharp.CSharpUtils.Tests.Typecast.Coord.Y]
---------- s1 = ----------
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
VSharp.CSharpUtils.Tests.Typecast.Coord ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Methods.VirtualMethod.VirtualCall(VSharp.CSharpUtils.Tests.Methods.IVirtual)
RESULT: UNION[
	| !(0 == a) & !(TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual} <: VSharp.CSharpUtils.Tests.Methods.VirtualC) ~> F((HeapRef a))
	| !(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual}) & (TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual} <: VSharp.CSharpUtils.Tests.Methods.VirtualC) ~> F((HeapRef a))
	| !(0 == a) & (TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual} <: VSharp.CSharpUtils.Tests.Methods.VirtualC) & (VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual}) ~> 7
	| 0 == a ~> 0]
HEAP:
{ heap = merge[
	(!(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual}) & (TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual} <: VSharp.CSharpUtils.Tests.Methods.VirtualC), { heap = h0, statics = s1 } ⚪ app(F((HeapRef a)))),
	(!(0 == a) & !(TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual} <: VSharp.CSharpUtils.Tests.Methods.VirtualC) & (VSharp.CSharpUtils.Tests.Methods.IVirtual <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual}), { heap = h0, statics = s2 } ⚪ app(F((HeapRef a)))),
	(!(0 == a) & !(TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual} <: VSharp.CSharpUtils.Tests.Methods.VirtualC) & !(VSharp.CSharpUtils.Tests.Methods.IVirtual <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual}), { heap = h0, statics = s2 } ⚪ app(F((HeapRef a)))),
	((TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual} <: VSharp.CSharpUtils.Tests.Methods.VirtualC) & (VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual}) | 0 == a, h0)], statics = s2 } where
---------- h0 = ----------
a ==> STRUCT TypeVariable1{VSharp.CSharpUtils.Tests.Methods.IVirtual}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualC ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualC[]
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
---------- s2 = ----------
VSharp.CSharpUtils.Tests.Methods.IVirtual ==> STRUCT VSharp.CSharpUtils.Tests.Methods.IVirtual[]
VSharp.CSharpUtils.Tests.Methods.VirtualC ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualC[]
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Methods.VirtualMethod.VirtualCall1(VSharp.CSharpUtils.Tests.Methods.VirtualC, System.Int32)
RESULT: UNION[
	| !(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualC}) & !(n <= 10) ~> F((HeapRef a))
	| !(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualC}) & n <= 10 ~> F((HeapRef a))
	| !(0 == a) & !(n <= 10) & (VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualC}) ~> 7
	| !(0 == a) & (VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualC}) & n <= 10 ~> 71
	| 0 == a ~> 0]
HEAP:
{ heap = merge[
	(!(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualC}) & !(n <= 10), { heap = <empty>, statics = s0 } ⚪ app(F((HeapRef a)))),
	(!(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualC}) & n <= 10, { heap = <empty>, statics = s1 } ⚪ app(F((HeapRef a)))),
	((VSharp.CSharpUtils.Tests.Methods.VirtualC <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualC}) | 0 == a, <empty>)], statics = s1 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualC ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualC[]
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Methods.IVirtual ==> STRUCT VSharp.CSharpUtils.Tests.Methods.IVirtual[]
VSharp.CSharpUtils.Tests.Methods.VirtualC ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualC[]
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Methods.VirtualMethod.VirtualCall3(VSharp.CSharpUtils.Tests.Methods.VirtualG, System.Int32)
RESULT: UNION[
	| !(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualG <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualG}) & !(n <= 10) ~> F((HeapRef a))
	| !(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualG <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualG}) & n <= 10 ~> F((HeapRef a))
	| !(0 == a) & !(n <= 10) & (VSharp.CSharpUtils.Tests.Methods.VirtualG <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualG}) ~> 8
	| !(0 == a) & (VSharp.CSharpUtils.Tests.Methods.VirtualG <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualG}) & n <= 10 ~> 66
	| 0 == a ~> 0]
HEAP:
{ heap = merge[
	(!(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualG <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualG}) & !(n <= 10), { heap = h0, statics = s1 } ⚪ app(F((HeapRef a)))),
	(!(0 == a) & !(VSharp.CSharpUtils.Tests.Methods.VirtualG <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualG}) & n <= 10, { heap = h0, statics = s2 } ⚪ app(F((HeapRef a)))),
	((VSharp.CSharpUtils.Tests.Methods.VirtualG <: TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualG}) | 0 == a, h0)], statics = s2 } where
---------- h0 = ----------
a ==> STRUCT TypeVariable1{VSharp.CSharpUtils.Tests.Methods.VirtualG}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualB ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualB[]
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
---------- s2 = ----------
VSharp.CSharpUtils.Tests.Methods.VirtualB ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualB[]
VSharp.CSharpUtils.Tests.Methods.VirtualC ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualC[]
VSharp.CSharpUtils.Tests.Methods.VirtualMethod ==> STRUCT VSharp.CSharpUtils.Tests.Methods.VirtualMethod[]
METHOD: System.Double VSharp.CSharpUtils.Tests.Typecast.Coord.Norm()
RESULT: sqrt((System.Double)(VSharp.CSharpUtils.Tests.Typecast.Coord.X * VSharp.CSharpUtils.Tests.Typecast.Coord.X + VSharp.CSharpUtils.Tests.Typecast.Coord.Y * VSharp.CSharpUtils.Tests.Typecast.Coord.Y))
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> [|
	0: UNION[
		| !hasKey#1 ~> 1];
	10: UNION[
		| !hasKey#1 ~> 10000000000];
	11: UNION[
		| !hasKey#1 ~> 100000000000];
	12: UNION[
		| !hasKey#1 ~> 1000000000000];
	13: UNION[
		| !hasKey#1 ~> 10000000000000];
	14: UNION[
		| !hasKey#1 ~> 100000000000000];
	15: UNION[
		| !hasKey#1 ~> 1E+15];
	1: UNION[
		| !hasKey#1 ~> 10];
	2: UNION[
		| !hasKey#1 ~> 100];
	3: UNION[
		| !hasKey#1 ~> 1000];
	4: UNION[
		| !hasKey#1 ~> 10000];
	5: UNION[
		| !hasKey#1 ~> 100000];
	6: UNION[
		| !hasKey#1 ~> 1000000];
	7: UNION[
		| !hasKey#1 ~> 10000000];
	8: UNION[
		| !hasKey#1 ~> 100000000];
	9: UNION[
		| !hasKey#1 ~> 1000000000];
	 ... UNION[
	| !hasKey#1 ~> 16] ... |]
---------- s1 = ----------
System.Math ==> STRUCT System.Math[
	| System.Math.E ~> UNION[
		| !hasKey#1 ~> 2.71828182845905
		| hasKey#1 ~> System.Math.E]
	| System.Math.PI ~> UNION[
		| !hasKey#1 ~> 3.14159265358979
		| hasKey#1 ~> System.Math.PI]
	| System.Math.doubleRoundLimit ~> UNION[
		| !hasKey#1 ~> 1E+16
		| hasKey#1 ~> System.Math.doubleRoundLimit]
	| System.Math.maxRoundingDigits ~> UNION[
		| !hasKey#1 ~> 15
		| hasKey#1 ~> System.Math.maxRoundingDigits]
	| System.Math.roundPower10Double ~> UNION[
		| !hasKey#1 ~> (HeapRef 1)
		| hasKey#1 ~> (HeapRef System.Math.roundPower10Double)]]
VSharp.CSharpUtils.Tests.Typecast.Coord ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.DownCastObject(System.Object)
RESULT: UNION[
	| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 5
	| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 6]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
obj ==> STRUCT TypeVariable1{System.Object}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.DownCastObject2(System.Object, System.Object)
RESULT: UNION[
	| !(0 == obj1) & !(0 == obj2) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) & (TypeVariable2{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | !(0 == obj1) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 5
	| (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj1) & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | !(TypeVariable2{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj1 | 0 == obj2) ~> 6]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
obj1 ==> STRUCT TypeVariable1{System.Object}[]
obj2 ==> STRUCT TypeVariable2{System.Object}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.UpCast()
RESULT: 15
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[
	| VSharp.CSharpUtils.Tests.Typecast.Pawn._newField ~> 25
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> 1
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> 1
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> 1]
---------- s1 = ----------
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.Tests.Typecast.Pawn ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.DownCastPiece(VSharp.CSharpUtils.Tests.Typecast.Piece)
RESULT: UNION[
	| !(0 == piece) & (TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Piece} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) ~> 10
	| !(TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Piece} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == piece ~> 20]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
piece ==> STRUCT TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Piece}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.CheckCastNullWithTrick()
RESULT: 20
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.CastAfterNull()
RESULT: 38
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[
	| VSharp.CSharpUtils.Tests.Typecast.Piece.Rate ~> 0
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> 1
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> 3]
---------- s1 = ----------
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.Pawn VSharp.CSharpUtils.Tests.Typecast.Typecast.TypeCast(System.Object)
RESULT: UNION[
	| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) ~> (HeapRef obj)
	| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> <ERROR: (HeapRef 2)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'S'];
		10: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'c'];
		11: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'a'];
		12: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 's'];
		13: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 't'];
		14: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> ' '];
		15: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'i'];
		16: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 's'];
		17: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> ' '];
		18: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'n'];
		19: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'o'];
		1: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'p'];
		20: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 't'];
		21: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> ' '];
		22: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'v'];
		23: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'a'];
		24: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'l'];
		25: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'i'];
		26: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'd'];
		27: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> '.'];
		28: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> '\000'];
		2: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'e'];
		3: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'c'];
		4: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'i'];
		5: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'f'];
		6: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'i'];
		7: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'e'];
		8: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 'd'];
		9: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> ' '];
		 ... UNION[
	| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 28]]
2 ==> STRUCT System.InvalidCastException[
	| System.Exception._HResult ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> -2147467262]
	| System.Exception._className ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._data ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._innerException ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#7 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> null
			| (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) & hasKey#7 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> (HeapRef 1)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> (HeapRef 4)]
	| System.Exception._source ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Exception._xcode ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> 0]]]
3 ==> STRUCT System.Object[]
4 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj ~> null]]
5 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'C'];
		10: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'r'];
		11: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'i'];
		12: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'a'];
		13: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'l'];
		14: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'i'];
		15: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'z'];
		16: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'a'];
		17: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 't'];
		18: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'i'];
		19: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'o'];
		1: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'L'];
		20: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'n'];
		21: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'M'];
		22: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'a'];
		23: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'n'];
		24: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'a'];
		25: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'g'];
		26: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'e'];
		27: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'r'];
		28: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> '_'];
		29: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'R'];
		2: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'R'];
		30: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'e'];
		31: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'a'];
		32: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'l'];
		33: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'T'];
		34: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'y'];
		35: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'p'];
		36: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'e'];
		37: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> '\000'];
		3: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> '_'];
		4: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'S'];
		5: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'a'];
		6: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'f'];
		7: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'e'];
		8: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'S'];
		9: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 'e'];
		 ... UNION[
	| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> 37]]
obj ==> STRUCT TypeVariable1{System.Object}[]
---------- s1 = ----------
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) & hasKey#3 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#3 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) & hasKey#3 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#3 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> (HeapRef 3)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) & hasKey#5 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#5 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> null]]]
System.InvalidCastException ==> STRUCT System.InvalidCastException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) & hasKey#8 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> (HeapRef 5)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) & hasKey#7 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#7 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.Unboxing(System.Object)
RESULT: UNION[
	| !(0 == obj) & (TypeVariable1{System.Object} <: System.Int32) ~> 13
	| !(TypeVariable1{System.Object} <: System.Int32) | 0 == obj ~> 23]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
obj ==> STRUCT TypeVariable1{System.Object}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.TryCast(System.Object)
RESULT: UNION[
	| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) ~> 33
	| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 42]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
obj ==> STRUCT TypeVariable1{System.Object}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Typecast.TryUpCast(VSharp.CSharpUtils.Tests.Typecast.Piece)
RESULT: UNION[
	| !(0 == piece) ~> 33
	| 0 == piece ~> 42]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| 0 == piece ~> 'S'];
		10: UNION[
			| 0 == piece ~> 'c'];
		11: UNION[
			| 0 == piece ~> 'a'];
		12: UNION[
			| 0 == piece ~> 's'];
		13: UNION[
			| 0 == piece ~> 't'];
		14: UNION[
			| 0 == piece ~> ' '];
		15: UNION[
			| 0 == piece ~> 'i'];
		16: UNION[
			| 0 == piece ~> 's'];
		17: UNION[
			| 0 == piece ~> ' '];
		18: UNION[
			| 0 == piece ~> 'n'];
		19: UNION[
			| 0 == piece ~> 'o'];
		1: UNION[
			| 0 == piece ~> 'p'];
		20: UNION[
			| 0 == piece ~> 't'];
		21: UNION[
			| 0 == piece ~> ' '];
		22: UNION[
			| 0 == piece ~> 'v'];
		23: UNION[
			| 0 == piece ~> 'a'];
		24: UNION[
			| 0 == piece ~> 'l'];
		25: UNION[
			| 0 == piece ~> 'i'];
		26: UNION[
			| 0 == piece ~> 'd'];
		27: UNION[
			| 0 == piece ~> '.'];
		28: UNION[
			| 0 == piece ~> '\000'];
		2: UNION[
			| 0 == piece ~> 'e'];
		3: UNION[
			| 0 == piece ~> 'c'];
		4: UNION[
			| 0 == piece ~> 'i'];
		5: UNION[
			| 0 == piece ~> 'f'];
		6: UNION[
			| 0 == piece ~> 'i'];
		7: UNION[
			| 0 == piece ~> 'e'];
		8: UNION[
			| 0 == piece ~> 'd'];
		9: UNION[
			| 0 == piece ~> ' '];
		 ... UNION[
	| 0 == piece ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| 0 == piece ~> 28]]
2 ==> STRUCT System.InvalidCastException[
	| System.Exception._HResult ~> UNION[
		| 0 == piece ~> -2147467262]
	| System.Exception._className ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._data ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._helpURL ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._innerException ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#7 & 0 == piece ~> null
			| 0 == piece & hasKey#7 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| 0 == piece ~> (HeapRef 1)]
	| System.Exception._remoteStackIndex ~> UNION[
		| 0 == piece ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| 0 == piece ~> (HeapRef 4)]
	| System.Exception._source ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._stackTrace ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| 0 == piece ~> null]
	| System.Exception._xcode ~> UNION[
		| 0 == piece ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| 0 == piece ~> 0]]]
3 ==> STRUCT System.Object[]
4 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| 0 == piece ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| 0 == piece ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| 0 == piece ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| 0 == piece ~> null]]
5 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#8 & 0 == piece ~> 'C'];
		10: UNION[
			| !hasKey#8 & 0 == piece ~> 'r'];
		11: UNION[
			| !hasKey#8 & 0 == piece ~> 'i'];
		12: UNION[
			| !hasKey#8 & 0 == piece ~> 'a'];
		13: UNION[
			| !hasKey#8 & 0 == piece ~> 'l'];
		14: UNION[
			| !hasKey#8 & 0 == piece ~> 'i'];
		15: UNION[
			| !hasKey#8 & 0 == piece ~> 'z'];
		16: UNION[
			| !hasKey#8 & 0 == piece ~> 'a'];
		17: UNION[
			| !hasKey#8 & 0 == piece ~> 't'];
		18: UNION[
			| !hasKey#8 & 0 == piece ~> 'i'];
		19: UNION[
			| !hasKey#8 & 0 == piece ~> 'o'];
		1: UNION[
			| !hasKey#8 & 0 == piece ~> 'L'];
		20: UNION[
			| !hasKey#8 & 0 == piece ~> 'n'];
		21: UNION[
			| !hasKey#8 & 0 == piece ~> 'M'];
		22: UNION[
			| !hasKey#8 & 0 == piece ~> 'a'];
		23: UNION[
			| !hasKey#8 & 0 == piece ~> 'n'];
		24: UNION[
			| !hasKey#8 & 0 == piece ~> 'a'];
		25: UNION[
			| !hasKey#8 & 0 == piece ~> 'g'];
		26: UNION[
			| !hasKey#8 & 0 == piece ~> 'e'];
		27: UNION[
			| !hasKey#8 & 0 == piece ~> 'r'];
		28: UNION[
			| !hasKey#8 & 0 == piece ~> '_'];
		29: UNION[
			| !hasKey#8 & 0 == piece ~> 'R'];
		2: UNION[
			| !hasKey#8 & 0 == piece ~> 'R'];
		30: UNION[
			| !hasKey#8 & 0 == piece ~> 'e'];
		31: UNION[
			| !hasKey#8 & 0 == piece ~> 'a'];
		32: UNION[
			| !hasKey#8 & 0 == piece ~> 'l'];
		33: UNION[
			| !hasKey#8 & 0 == piece ~> 'T'];
		34: UNION[
			| !hasKey#8 & 0 == piece ~> 'y'];
		35: UNION[
			| !hasKey#8 & 0 == piece ~> 'p'];
		36: UNION[
			| !hasKey#8 & 0 == piece ~> 'e'];
		37: UNION[
			| !hasKey#8 & 0 == piece ~> '\000'];
		3: UNION[
			| !hasKey#8 & 0 == piece ~> '_'];
		4: UNION[
			| !hasKey#8 & 0 == piece ~> 'S'];
		5: UNION[
			| !hasKey#8 & 0 == piece ~> 'a'];
		6: UNION[
			| !hasKey#8 & 0 == piece ~> 'f'];
		7: UNION[
			| !hasKey#8 & 0 == piece ~> 'e'];
		8: UNION[
			| !hasKey#8 & 0 == piece ~> 'S'];
		9: UNION[
			| !hasKey#8 & 0 == piece ~> 'e'];
		 ... UNION[
	| !hasKey#8 & 0 == piece ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#8 & 0 == piece ~> 37]]
piece ==> STRUCT TypeVariable1{VSharp.CSharpUtils.Tests.Typecast.Piece}[]
---------- s1 = ----------
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == piece) | hasKey#3 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#3 & 0 == piece ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == piece) | hasKey#3 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#3 & 0 == piece ~> (HeapRef 3)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == piece) | hasKey#5 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#5 & 0 == piece ~> null]]]
System.InvalidCastException ==> STRUCT System.InvalidCastException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == piece) | hasKey#8 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#8 & 0 == piece ~> (HeapRef 5)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == piece) | hasKey#7 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#7 & 0 == piece ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Typecast.Typecast ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Typecast[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.Coord VSharp.CSharpUtils.Tests.Typecast.Piece.GetCoord()
RESULT: STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[
	| VSharp.CSharpUtils.Tests.Typecast.Coord.X ~> this.VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord
	| VSharp.CSharpUtils.Tests.Typecast.Coord.Y ~> this.VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Piece.GetRate()
RESULT: this.VSharp.CSharpUtils.Tests.Typecast.Piece.Rate
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Piece.RetRate(System.Object)
RESULT: UNION[
	| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) ~> obj.VSharp.CSharpUtils.Tests.Typecast.Piece.Rate
	| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> <ERROR: (HeapRef 2)>]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'S'];
		10: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'c'];
		11: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'a'];
		12: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 's'];
		13: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 't'];
		14: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> ' '];
		15: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'i'];
		16: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 's'];
		17: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> ' '];
		18: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'n'];
		19: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'o'];
		1: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'p'];
		20: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 't'];
		21: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> ' '];
		22: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'v'];
		23: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'a'];
		24: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'l'];
		25: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'i'];
		26: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'd'];
		27: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> '.'];
		28: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> '\000'];
		2: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'e'];
		3: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'c'];
		4: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'i'];
		5: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'f'];
		6: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'i'];
		7: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'e'];
		8: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 'd'];
		9: UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> ' '];
		 ... UNION[
	| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 29] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 28]]
10 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[]
	| System.Exception._className ~> UNION[]
	| System.Exception._data ~> UNION[]
	| System.Exception._dynamicMethods ~> UNION[]
	| System.Exception._exceptionMethod ~> UNION[]
	| System.Exception._exceptionMethodString ~> UNION[]
	| System.Exception._helpURL ~> UNION[]
	| System.Exception._innerException ~> UNION[]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[]]
	| System.Exception._message ~> UNION[]
	| System.Exception._remoteStackIndex ~> UNION[]
	| System.Exception._remoteStackTraceString ~> UNION[]
	| System.Exception._safeSerializationManager ~> UNION[]
	| System.Exception._source ~> UNION[]
	| System.Exception._stackTrace ~> UNION[]
	| System.Exception._stackTraceString ~> UNION[]
	| System.Exception._watsonBuckets ~> UNION[]
	| System.Exception._xcode ~> UNION[]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[]]]
11 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[];
		10: UNION[];
		11: UNION[];
		12: UNION[];
		13: UNION[];
		14: UNION[];
		15: UNION[];
		16: UNION[];
		17: UNION[];
		18: UNION[];
		19: UNION[];
		1: UNION[];
		20: UNION[];
		21: UNION[];
		22: UNION[];
		23: UNION[];
		24: UNION[];
		25: UNION[];
		26: UNION[];
		2: UNION[];
		3: UNION[];
		4: UNION[];
		5: UNION[];
		6: UNION[];
		7: UNION[];
		8: UNION[];
		9: UNION[];
		 ... UNION[] ... |]
	| System.String.m_StringLength ~> UNION[]]
12 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[];
		10: UNION[];
		11: UNION[];
		12: UNION[];
		13: UNION[];
		14: UNION[];
		15: UNION[];
		16: UNION[];
		17: UNION[];
		18: UNION[];
		19: UNION[];
		1: UNION[];
		20: UNION[];
		21: UNION[];
		22: UNION[];
		23: UNION[];
		24: UNION[];
		25: UNION[];
		26: UNION[];
		27: UNION[];
		28: UNION[];
		29: UNION[];
		2: UNION[];
		30: UNION[];
		31: UNION[];
		32: UNION[];
		33: UNION[];
		34: UNION[];
		35: UNION[];
		36: UNION[];
		37: UNION[];
		38: UNION[];
		39: UNION[];
		3: UNION[];
		40: UNION[];
		41: UNION[];
		42: UNION[];
		43: UNION[];
		44: UNION[];
		45: UNION[];
		46: UNION[];
		47: UNION[];
		48: UNION[];
		49: UNION[];
		4: UNION[];
		5: UNION[];
		6: UNION[];
		7: UNION[];
		8: UNION[];
		9: UNION[];
		 ... UNION[] ... |]
	| System.String.m_StringLength ~> UNION[]]
13 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[]]
2 ==> STRUCT System.InvalidCastException[
	| System.Exception._HResult ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> -2147467262]
	| System.Exception._className ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._data ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._dynamicMethods ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._exceptionMethod ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._exceptionMethodString ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._helpURL ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._innerException ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !hasKey#7 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> null
			| (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & hasKey#7 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)]]
	| System.Exception._message ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> (HeapRef 1)]
	| System.Exception._remoteStackIndex ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 0]
	| System.Exception._remoteStackTraceString ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._safeSerializationManager ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> (HeapRef 4)]
	| System.Exception._source ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._stackTrace ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._stackTraceString ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._watsonBuckets ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Exception._xcode ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> -532462766]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> 0]]]
3 ==> STRUCT System.Object[]
4 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[
		| !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj ~> null]]
5 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'C'];
		10: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'r'];
		11: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'i'];
		12: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'a'];
		13: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'l'];
		14: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'i'];
		15: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'z'];
		16: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'a'];
		17: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 't'];
		18: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'i'];
		19: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'o'];
		1: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'L'];
		20: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'n'];
		21: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'M'];
		22: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'a'];
		23: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'n'];
		24: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'a'];
		25: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'g'];
		26: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'e'];
		27: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'r'];
		28: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> '_'];
		29: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'R'];
		2: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'R'];
		30: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'e'];
		31: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'a'];
		32: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'l'];
		33: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'T'];
		34: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'y'];
		35: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'p'];
		36: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'e'];
		37: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> '\000'];
		3: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> '_'];
		4: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'S'];
		5: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'a'];
		6: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'f'];
		7: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'e'];
		8: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'S'];
		9: UNION[
			| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 'e'];
		 ... UNION[
	| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 38] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> 37]]
6 ==> STRUCT System.NullReferenceException[
	| System.Exception._HResult ~> UNION[]
	| System.Exception._className ~> UNION[]
	| System.Exception._data ~> UNION[]
	| System.Exception._dynamicMethods ~> UNION[]
	| System.Exception._exceptionMethod ~> UNION[]
	| System.Exception._exceptionMethodString ~> UNION[]
	| System.Exception._helpURL ~> UNION[]
	| System.Exception._innerException ~> UNION[]
	| System.Exception._ipForWatsonBuckets ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[]]
	| System.Exception._message ~> UNION[]
	| System.Exception._remoteStackIndex ~> UNION[]
	| System.Exception._remoteStackTraceString ~> UNION[]
	| System.Exception._safeSerializationManager ~> UNION[]
	| System.Exception._source ~> UNION[]
	| System.Exception._stackTrace ~> UNION[]
	| System.Exception._stackTraceString ~> UNION[]
	| System.Exception._watsonBuckets ~> UNION[]
	| System.Exception._xcode ~> UNION[]
	| System.Exception._xptrs ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[]]]
7 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[];
		10: UNION[];
		11: UNION[];
		12: UNION[];
		13: UNION[];
		14: UNION[];
		15: UNION[];
		16: UNION[];
		17: UNION[];
		18: UNION[];
		19: UNION[];
		1: UNION[];
		20: UNION[];
		21: UNION[];
		22: UNION[];
		23: UNION[];
		24: UNION[];
		25: UNION[];
		26: UNION[];
		2: UNION[];
		3: UNION[];
		4: UNION[];
		5: UNION[];
		6: UNION[];
		7: UNION[];
		8: UNION[];
		9: UNION[];
		 ... UNION[] ... |]
	| System.String.m_StringLength ~> UNION[]]
8 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[];
		10: UNION[];
		11: UNION[];
		12: UNION[];
		13: UNION[];
		14: UNION[];
		15: UNION[];
		16: UNION[];
		17: UNION[];
		18: UNION[];
		19: UNION[];
		1: UNION[];
		20: UNION[];
		21: UNION[];
		22: UNION[];
		23: UNION[];
		24: UNION[];
		25: UNION[];
		26: UNION[];
		27: UNION[];
		28: UNION[];
		29: UNION[];
		2: UNION[];
		30: UNION[];
		31: UNION[];
		32: UNION[];
		33: UNION[];
		34: UNION[];
		35: UNION[];
		36: UNION[];
		37: UNION[];
		38: UNION[];
		39: UNION[];
		3: UNION[];
		40: UNION[];
		41: UNION[];
		42: UNION[];
		43: UNION[];
		44: UNION[];
		45: UNION[];
		46: UNION[];
		47: UNION[];
		48: UNION[];
		49: UNION[];
		4: UNION[];
		5: UNION[];
		6: UNION[];
		7: UNION[];
		8: UNION[];
		9: UNION[];
		 ... UNION[] ... |]
	| System.String.m_StringLength ~> UNION[]]
9 ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.m_realObject ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_realType ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_savedSerializationInfo ~> UNION[]
	| System.Runtime.Serialization.SafeSerializationManager.m_serializedStates ~> UNION[]]
obj ==> STRUCT TypeVariable1{System.Object}[]
---------- s1 = ----------
System.Environment ==> STRUCT System.Environment[
	| System.Environment.MaxEnvVariableValueLength ~> System.Environment.MaxEnvVariableValueLength
	| System.Environment.MaxMachineNameLength ~> System.Environment.MaxMachineNameLength
	| System.Environment.MaxSystemEnvVariableLength ~> System.Environment.MaxSystemEnvVariableLength
	| System.Environment.MaxUserEnvVariableLength ~> System.Environment.MaxUserEnvVariableLength
	| System.Environment.isUserNonInteractive ~> !(0 == obj) & (!(0 == obj) & System.Environment.isUserNonInteractive | System.Environment.isUserNonInteractive & hasKey#10) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & System.Environment.isUserNonInteractive
	| System.Environment.m_os ~> (HeapRef System.Environment.m_os)
	| System.Environment.m_resHelper ~> (HeapRef System.Environment.m_resHelper)
	| System.Environment.processWinStation ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> (HeapPtr System.Environment.processWinStation.System.IntPtr.m_value as System.Void)]
	| System.Environment.s_CheckedOSWin8OrAbove ~> !(0 == obj) & (!(0 == obj) & System.Environment.s_CheckedOSWin8OrAbove | System.Environment.s_CheckedOSWin8OrAbove & hasKey#10) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & System.Environment.s_CheckedOSWin8OrAbove
	| System.Environment.s_CheckedWinRT ~> !(0 == obj) & (!(0 == obj) & System.Environment.s_CheckedWinRT | System.Environment.s_CheckedWinRT & hasKey#10) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & System.Environment.s_CheckedWinRT
	| System.Environment.s_InternalSyncObject ~> (HeapRef System.Environment.s_InternalSyncObject)
	| System.Environment.s_IsWindows8OrAbove ~> !(0 == obj) & (!(0 == obj) & System.Environment.s_IsWindows8OrAbove | System.Environment.s_IsWindows8OrAbove & hasKey#10) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & System.Environment.s_IsWindows8OrAbove
	| System.Environment.s_WinRTSupported ~> !(0 == obj) & (!(0 == obj) & System.Environment.s_WinRTSupported | System.Environment.s_WinRTSupported & hasKey#10) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & System.Environment.s_WinRTSupported]
System.Exception ==> STRUCT System.Exception[
	| System.Exception._COMPlusExceptionCode ~> UNION[
		| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & hasKey#3 ~> System.Exception._COMPlusExceptionCode
		| !hasKey#3 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> -532462766]
	| System.Exception.s_EDILock ~> UNION[
		| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & hasKey#3 ~> (HeapRef System.Exception.s_EDILock)
		| !hasKey#3 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> (HeapRef 3)]]
System.IntPtr ==> STRUCT System.IntPtr[
	| System.IntPtr.Zero ~> STRUCT System.IntPtr[
		| System.IntPtr.m_value ~> UNION[
			| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & hasKey#5 ~> (HeapPtr System.IntPtr.Zero.System.IntPtr.m_value as System.Void)
			| !hasKey#5 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> null]]]
System.InvalidCastException ==> STRUCT System.InvalidCastException[]
System.NullReferenceException ==> STRUCT System.NullReferenceException[]
System.Object ==> STRUCT System.Object[]
System.Runtime.Serialization.SafeSerializationManager ==> STRUCT System.Runtime.Serialization.SafeSerializationManager[
	| System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName ~> UNION[
		| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & hasKey#8 ~> (HeapRef System.Runtime.Serialization.SafeSerializationManager.RealTypeSerializationName)
		| !hasKey#8 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> (HeapRef 5)]]
System.SystemException ==> STRUCT System.SystemException[]
System.UIntPtr ==> STRUCT System.UIntPtr[
	| System.UIntPtr.Zero ~> STRUCT System.UIntPtr[
		| System.UIntPtr.m_value ~> UNION[
			| !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) & hasKey#7 ~> (HeapPtr System.UIntPtr.Zero.System.UIntPtr.m_value as System.Void)
			| !hasKey#7 & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Piece) | 0 == obj) ~> null]]]
System.ValueType ==> STRUCT System.ValueType[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.IMovable VSharp.CSharpUtils.Tests.Typecast.Piece.MakeMove(VSharp.CSharpUtils.Tests.Typecast.Coord)
RESULT: (HeapRef this)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> VSharp.CSharpUtils.Tests.Typecast.Coord.X
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> VSharp.CSharpUtils.Tests.Typecast.Coord.Y]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Coord ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]
VSharp.CSharpUtils.Tests.Typecast.Piece ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Piece[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Typecast.Pawn.GetNewField()
RESULT: this.VSharp.CSharpUtils.Tests.Typecast.Pawn._newField
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Pawn ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[]
METHOD: System.Void VSharp.CSharpUtils.Tests.Typecast.Pawn.SetNewField(System.Int32)
RESULT: <VOID>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[
	| VSharp.CSharpUtils.Tests.Typecast.Pawn._newField ~> field]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Pawn ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.IMovable VSharp.CSharpUtils.Tests.Typecast.Pawn.MakeMove(VSharp.CSharpUtils.Tests.Typecast.Coord)
RESULT: (HeapRef this)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> VSharp.CSharpUtils.Tests.Typecast.Coord.X + VSharp.CSharpUtils.Tests.Typecast.Coord.Y
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> -VSharp.CSharpUtils.Tests.Typecast.Coord.Y + VSharp.CSharpUtils.Tests.Typecast.Coord.X]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Coord ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]
VSharp.CSharpUtils.Tests.Typecast.Pawn ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Pawn[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.IMovable VSharp.CSharpUtils.Tests.Typecast.BlackPawn.MakeMove(VSharp.CSharpUtils.Tests.Typecast.Coord)
RESULT: (HeapRef this)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.BlackPawn[
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> VSharp.CSharpUtils.Tests.Typecast.Coord.X + VSharp.CSharpUtils.Tests.Typecast.Coord.Y
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> -VSharp.CSharpUtils.Tests.Typecast.Coord.Y + VSharp.CSharpUtils.Tests.Typecast.Coord.X]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.BlackPawn ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.BlackPawn[]
VSharp.CSharpUtils.Tests.Typecast.Coord ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]
METHOD: VSharp.CSharpUtils.Tests.Typecast.IMovable VSharp.CSharpUtils.Tests.Typecast.Knight.MakeMove(VSharp.CSharpUtils.Tests.Typecast.Coord)
RESULT: (HeapRef this)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Knight[
	| VSharp.CSharpUtils.Tests.Typecast.Piece._xCoord ~> VSharp.CSharpUtils.Tests.Typecast.Coord.X + VSharp.CSharpUtils.Tests.Typecast.Coord.Y
	| VSharp.CSharpUtils.Tests.Typecast.Piece._yCoord ~> -VSharp.CSharpUtils.Tests.Typecast.Coord.Y + VSharp.CSharpUtils.Tests.Typecast.Coord.X]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Typecast.Coord ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Coord[]
VSharp.CSharpUtils.Tests.Typecast.Knight ==> STRUCT VSharp.CSharpUtils.Tests.Typecast.Knight[]
METHOD: System.Collections.Generic.LinkedList`1[System.Int32] VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6[T,U,P,K,N,Z].RetDictionary()
RESULT: (HeapRef 1)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.Collections.Generic.LinkedList`1[System.Int32][
	| System.Collections.Generic.LinkedList`1._syncRoot ~> null
	| System.Collections.Generic.LinkedList`1.count ~> 0
	| System.Collections.Generic.LinkedList`1.head ~> null
	| System.Collections.Generic.LinkedList`1.siInfo ~> null
	| System.Collections.Generic.LinkedList`1.version ~> 0]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 ~> 'V'];
		1: UNION[
			| !hasKey#1 ~> 'e'];
		2: UNION[
			| !hasKey#1 ~> 'r'];
		3: UNION[
			| !hasKey#1 ~> 's'];
		4: UNION[
			| !hasKey#1 ~> 'i'];
		5: UNION[
			| !hasKey#1 ~> 'o'];
		6: UNION[
			| !hasKey#1 ~> 'n'];
		7: UNION[
			| !hasKey#1 ~> '\000'];
		 ... UNION[
	| !hasKey#1 ~> 8] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 ~> 7]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 ~> 'C'];
		1: UNION[
			| !hasKey#1 ~> 'o'];
		2: UNION[
			| !hasKey#1 ~> 'u'];
		3: UNION[
			| !hasKey#1 ~> 'n'];
		4: UNION[
			| !hasKey#1 ~> 't'];
		5: UNION[
			| !hasKey#1 ~> '\000'];
		 ... UNION[
	| !hasKey#1 ~> 6] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 ~> 5]]
4 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !hasKey#1 ~> 'D'];
		1: UNION[
			| !hasKey#1 ~> 'a'];
		2: UNION[
			| !hasKey#1 ~> 't'];
		3: UNION[
			| !hasKey#1 ~> 'a'];
		4: UNION[
			| !hasKey#1 ~> '\000'];
		 ... UNION[
	| !hasKey#1 ~> 5] ... |]
	| System.String.m_StringLength ~> UNION[
		| !hasKey#1 ~> 4]]
---------- s1 = ----------
System.Collections.Generic.LinkedList`1 ==> STRUCT System.Collections.Generic.LinkedList`1[System.Int32][
	| System.Collections.Generic.LinkedList`1.CountName ~> UNION[
		| !hasKey#1 ~> (HeapRef 3)
		| hasKey#1 ~> (HeapRef System.Collections.Generic.LinkedList`1.CountName)]
	| System.Collections.Generic.LinkedList`1.ValuesName ~> UNION[
		| !hasKey#1 ~> (HeapRef 4)
		| hasKey#1 ~> (HeapRef System.Collections.Generic.LinkedList`1.ValuesName)]
	| System.Collections.Generic.LinkedList`1.VersionName ~> UNION[
		| !hasKey#1 ~> (HeapRef 2)
		| hasKey#1 ~> (HeapRef System.Collections.Generic.LinkedList`1.VersionName)]]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6[T,U,P,K,N,Z][]
METHOD: System.Collections.Generic.List`1[System.Double] VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6[T,U,P,K,N,Z].RetList()
RESULT: (HeapRef 1)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.Collections.Generic.List`1[System.Double][
	| System.Collections.Generic.List`1._items ~> UNION[
		| !hasKey#1 ~> (HeapRef 2)
		| hasKey#1 ~> (HeapRef System.Collections.Generic.List`1._emptyArray)]
	| System.Collections.Generic.List`1._size ~> 0
	| System.Collections.Generic.List`1._syncRoot ~> null
	| System.Collections.Generic.List`1._version ~> 0]
2 ==> [| ... UNION[
	| !hasKey#1 ~> 0] ... |]
---------- s1 = ----------
System.Collections.Generic.List`1 ==> STRUCT System.Collections.Generic.List`1[System.Double][
	| System.Collections.Generic.List`1._defaultCapacity ~> UNION[
		| !hasKey#1 ~> 4
		| hasKey#1 ~> System.Collections.Generic.List`1._defaultCapacity]
	| System.Collections.Generic.List`1._emptyArray ~> UNION[
		| !hasKey#1 ~> (HeapRef 2)
		| hasKey#1 ~> (HeapRef System.Collections.Generic.List`1._emptyArray)]]
System.Object ==> STRUCT System.Object[]
VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6[T,U,P,K,N,Z][]
METHOD: T VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6[T,U,P,K,N,Z].RetT(T)
RESULT: (HeapRef t)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericInitialize`6[T,U,P,K,N,Z][]
METHOD: T VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetT(T)
RESULT: (HeapRef t)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: U VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetU(U)
RESULT: (HeapRef u)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: P VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetP(P)
RESULT: STRUCT TypeVariable1{P}[]
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: K VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetK(K)
RESULT: (HeapRef k)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: N VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetT(N)
RESULT: (HeapRef n)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: Z VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z].RetU(Z)
RESULT: (HeapRef z)
HEAP:
{ heap = <empty>, statics = s0 } where
---------- s0 = ----------
VSharp.CSharpUtils.Tests.Generic.GenericTest`6 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericTest`6[T,U,P,K,N,Z][]
METHOD: T VSharp.CSharpUtils.Tests.Generic.Foo`2[T,U].GetFields()
RESULT: (HeapRef this.VSharp.CSharpUtils.Tests.Generic.Foo`2._filed)
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Generic.Foo`2[T,U][]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Generic.Foo`2 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.Foo`2[T,U][]
METHOD: System.Void VSharp.CSharpUtils.Tests.Generic.Foo`2[T,U].SetField(T)
RESULT: <VOID>
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
this ==> STRUCT VSharp.CSharpUtils.Tests.Generic.Foo`2[T,U][
	| VSharp.CSharpUtils.Tests.Generic.Foo`2._filed ~> (HeapRef f)]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Generic.Foo`2 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.Foo`2[T,U][]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Generic.GenericMethod.TestFoo(VSharp.CSharpUtils.Tests.Generic.Foo`2[System.Int32,VSharp.CSharpUtils.Tests.Typecast.Piece])
RESULT: UNION[
	| !(0 == f) ~> f.VSharp.CSharpUtils.Tests.Generic.Foo`2._filed
	| 0 == f ~> 0]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
f ==> STRUCT TypeVariable1{VSharp.CSharpUtils.Tests.Generic.Foo`2[System.Int32,VSharp.CSharpUtils.Tests.Typecast.Piece]}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Generic.Foo`2 ==> STRUCT VSharp.CSharpUtils.Tests.Generic.Foo`2[System.Int32,VSharp.CSharpUtils.Tests.Typecast.Piece][]
VSharp.CSharpUtils.Tests.Generic.GenericMethod ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericMethod[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Generic.GenericMethod.TestFoo(System.Collections.Generic.LinkedList`1[System.Int32])
RESULT: UNION[
	| !(0 == l) & !(0 == l.System.Collections.Generic.LinkedList`1.head) ~> 1 + l.System.Collections.Generic.LinkedList`1.head.System.Collections.Generic.LinkedListNode`1.item
	| !(0 == l) & 0 == l.System.Collections.Generic.LinkedList`1.head ~> 1
	| 0 == l ~> 0]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
1 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == l) & !hasKey#1 ~> 'V'];
		1: UNION[
			| !(0 == l) & !hasKey#1 ~> 'e'];
		2: UNION[
			| !(0 == l) & !hasKey#1 ~> 'r'];
		3: UNION[
			| !(0 == l) & !hasKey#1 ~> 's'];
		4: UNION[
			| !(0 == l) & !hasKey#1 ~> 'i'];
		5: UNION[
			| !(0 == l) & !hasKey#1 ~> 'o'];
		6: UNION[
			| !(0 == l) & !hasKey#1 ~> 'n'];
		7: UNION[
			| !(0 == l) & !hasKey#1 ~> '\000'];
		 ... UNION[
	| !(0 == l) & !hasKey#1 ~> 8] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == l) & !hasKey#1 ~> 7]]
2 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == l) & !hasKey#1 ~> 'C'];
		1: UNION[
			| !(0 == l) & !hasKey#1 ~> 'o'];
		2: UNION[
			| !(0 == l) & !hasKey#1 ~> 'u'];
		3: UNION[
			| !(0 == l) & !hasKey#1 ~> 'n'];
		4: UNION[
			| !(0 == l) & !hasKey#1 ~> 't'];
		5: UNION[
			| !(0 == l) & !hasKey#1 ~> '\000'];
		 ... UNION[
	| !(0 == l) & !hasKey#1 ~> 6] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == l) & !hasKey#1 ~> 5]]
3 ==> STRUCT System.String[
	| System.String.m_FirstChar ~> [|
		0: UNION[
			| !(0 == l) & !hasKey#1 ~> 'D'];
		1: UNION[
			| !(0 == l) & !hasKey#1 ~> 'a'];
		2: UNION[
			| !(0 == l) & !hasKey#1 ~> 't'];
		3: UNION[
			| !(0 == l) & !hasKey#1 ~> 'a'];
		4: UNION[
			| !(0 == l) & !hasKey#1 ~> '\000'];
		 ... UNION[
	| !(0 == l) & !hasKey#1 ~> 5] ... |]
	| System.String.m_StringLength ~> UNION[
		| !(0 == l) & !hasKey#1 ~> 4]]
l ==> STRUCT TypeVariable1{System.Collections.Generic.LinkedList`1[System.Int32]}[]
l.System.Collections.Generic.LinkedList`1.head ==> STRUCT System.Collections.Generic.LinkedListNode`1[System.Int32][
	| System.Collections.Generic.LinkedListNode`1.item ~> UNION[
		| !(0 == l) & !(0 == l.System.Collections.Generic.LinkedList`1.head) ~> 1 + l.System.Collections.Generic.LinkedList`1.head.System.Collections.Generic.LinkedListNode`1.item
		| 0 == l | 0 == l.System.Collections.Generic.LinkedList`1.head ~> l.System.Collections.Generic.LinkedList`1.head.System.Collections.Generic.LinkedListNode`1.item]]
---------- s1 = ----------
System.Collections.Generic.LinkedListNode`1 ==> STRUCT System.Collections.Generic.LinkedListNode`1[System.Int32][]
System.Collections.Generic.LinkedList`1 ==> STRUCT System.Collections.Generic.LinkedList`1[System.Int32][
	| System.Collections.Generic.LinkedList`1.CountName ~> UNION[
		| !(0 == l) & !hasKey#1 ~> (HeapRef 2)
		| 0 == l | hasKey#1 ~> (HeapRef System.Collections.Generic.LinkedList`1.CountName)]
	| System.Collections.Generic.LinkedList`1.ValuesName ~> UNION[
		| !(0 == l) & !hasKey#1 ~> (HeapRef 3)
		| 0 == l | hasKey#1 ~> (HeapRef System.Collections.Generic.LinkedList`1.ValuesName)]
	| System.Collections.Generic.LinkedList`1.VersionName ~> UNION[
		| !(0 == l) & !hasKey#1 ~> (HeapRef 1)
		| 0 == l | hasKey#1 ~> (HeapRef System.Collections.Generic.LinkedList`1.VersionName)]]
VSharp.CSharpUtils.Tests.Generic.GenericMethod ==> STRUCT VSharp.CSharpUtils.Tests.Generic.GenericMethod[]
METHOD: System.Int32 VSharp.CSharpUtils.Tests.Generic.TetsUnion.RetWorked(System.Object, System.Int32)
RESULT: UNION[
	| !(0 == obj) & !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (!(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) | !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) | 0 == obj) & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj)) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) ~> 6 + a
	| !(0 == obj) & !(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) & (!(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) | !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) | 0 == obj) & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj)) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) ~> 5
	| !(0 == obj) & (!(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) | !(0 == obj) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) | 0 == obj) & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj)) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) & (TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) ~> 11
	| (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.BlackPawn) | 0 == obj) & (!(TypeVariable1{System.Object} <: VSharp.CSharpUtils.Tests.Typecast.Pawn) | 0 == obj) ~> a]
HEAP:
{ heap = h0, statics = s1 } where
---------- h0 = ----------
obj ==> STRUCT TypeVariable1{System.Object}[]
---------- s1 = ----------
VSharp.CSharpUtils.Tests.Generic.TetsUnion ==> STRUCT VSharp.CSharpUtils.Tests.Generic.TetsUnion[]
